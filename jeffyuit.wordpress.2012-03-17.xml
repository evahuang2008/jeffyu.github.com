<?xml version="1.0" encoding="UTF-8" ?>
<!-- This is a WordPress eXtended RSS file generated by WordPress as an export of your site. -->
<!-- It contains information about your site's posts, pages, comments, categories, and other content. -->
<!-- You may use this file to transfer that content from one site to another. -->
<!-- This file is not intended to serve as a complete backup of your site. -->

<!-- To import this information into a WordPress site follow these steps: -->
<!-- 1. Log in to that site as an administrator. -->
<!-- 2. Go to Tools: Import in the WordPress admin panel. -->
<!-- 3. Install the "WordPress" importer from the list. -->
<!-- 4. Activate & Run Importer. -->
<!-- 5. Upload this file using the form provided on that page. -->
<!-- 6. You will first be asked to map the authors in this export file to users -->
<!--    on the site. For each author, you may choose to map to an -->
<!--    existing user on the site or to create a new user. -->
<!-- 7. WordPress will then import each of the posts, pages, comments, categories, etc. -->
<!--    contained in this file into your site. -->

<!-- generator="WordPress/3.1" created="2012-03-17 03:21" -->
<rss version="2.0"
	xmlns:excerpt="http://wordpress.org/export/1.1/excerpt/"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:wp="http://wordpress.org/export/1.1/"
>

<channel>
	<title>Jeff Yu@IT</title>
	<link>http://jeff.familyyu.net</link>
	<description>When you are getting older, your memory becomes worse, so you need to write down some notes from time to time, hence this place was born.</description>
	<pubDate>Sat, 17 Mar 2012 03:21:23 +0000</pubDate>
	<language>en</language>
	<wp:wxr_version>1.1</wp:wxr_version>
	<wp:base_site_url>http://jeff.familyyu.net</wp:base_site_url>
	<wp:base_blog_url>http://jeff.familyyu.net</wp:base_blog_url>

	<wp:author><wp:author_id>1</wp:author_id><wp:author_login>admin</wp:author_login><wp:author_email>jeff.yuchang@gmail.com</wp:author_email><wp:author_display_name><![CDATA[Jeff Yu]]></wp:author_display_name><wp:author_first_name><![CDATA[Jeff]]></wp:author_first_name><wp:author_last_name><![CDATA[Yu]]></wp:author_last_name></wp:author>

	<wp:category><wp:term_id>1</wp:term_id><wp:category_nicename>bpm</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[BPM]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>5</wp:term_id><wp:category_nicename>chinese</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[Chinese]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>6</wp:term_id><wp:category_nicename>cxf</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[CXF]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>7</wp:term_id><wp:category_nicename>database</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[Database]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>10</wp:term_id><wp:category_nicename>esb</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[ESB]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>17</wp:term_id><wp:category_nicename>java</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[Java]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>18</wp:term_id><wp:category_nicename>jboss</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[JBoss]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>25</wp:term_id><wp:category_nicename>maven</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[Maven]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>52</wp:term_id><wp:category_nicename>os</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[OS]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>31</wp:term_id><wp:category_nicename>osgi</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[OSGi]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>32</wp:term_id><wp:category_nicename>others</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[Others]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>34</wp:term_id><wp:category_nicename>rest</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[REST]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>37</wp:term_id><wp:category_nicename>ruby</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[Ruby]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>38</wp:term_id><wp:category_nicename>scala</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[Scala]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>51</wp:term_id><wp:category_nicename>scm</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[SCM]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>40</wp:term_id><wp:category_nicename>soa</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[SOA]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>43</wp:term_id><wp:category_nicename>thoughts</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[Thoughts]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>45</wp:term_id><wp:category_nicename>web-service</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[Web Service]]></wp:cat_name></wp:category>
	<wp:tag><wp:term_id>65</wp:term_id><wp:tag_slug>blog</wp:tag_slug><wp:tag_name><![CDATA[Blog]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>77</wp:term_id><wp:tag_slug>book</wp:tag_slug><wp:tag_name><![CDATA[Book]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>55</wp:term_id><wp:tag_slug>bpel</wp:tag_slug><wp:tag_name><![CDATA[BPEL]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>54</wp:term_id><wp:tag_slug>bpmn</wp:tag_slug><wp:tag_name><![CDATA[BPMN]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>6</wp:term_id><wp:tag_slug>cxf</wp:tag_slug><wp:tag_name><![CDATA[CXF]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>11</wp:term_id><wp:tag_slug>design-patterns</wp:tag_slug><wp:tag_name><![CDATA[Design Patterns]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>9</wp:term_id><wp:tag_slug>drools</wp:tag_slug><wp:tag_name><![CDATA[Drools]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>12</wp:term_id><wp:tag_slug>fedora</wp:tag_slug><wp:tag_name><![CDATA[Fedora]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>74</wp:term_id><wp:tag_slug>ff0000</wp:tag_slug><wp:tag_name><![CDATA[ff0000]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>78</wp:term_id><wp:tag_slug>git</wp:tag_slug><wp:tag_name><![CDATA[Git]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>72</wp:term_id><wp:tag_slug>google</wp:tag_slug><wp:tag_name><![CDATA[Google]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>14</wp:term_id><wp:tag_slug>guice</wp:tag_slug><wp:tag_name><![CDATA[Guice]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>15</wp:term_id><wp:tag_slug>hibernate</wp:tag_slug><wp:tag_name><![CDATA[Hibernate]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>59</wp:term_id><wp:tag_slug>ioc</wp:tag_slug><wp:tag_name><![CDATA[IOC]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>19</wp:term_id><wp:tag_slug>jbossesb</wp:tag_slug><wp:tag_name><![CDATA[JBossESB]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>20</wp:term_id><wp:tag_slug>jbpm</wp:tag_slug><wp:tag_name><![CDATA[jBPM]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>21</wp:term_id><wp:tag_slug>jms</wp:tag_slug><wp:tag_name><![CDATA[JMS]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>22</wp:term_id><wp:tag_slug>jpa</wp:tag_slug><wp:tag_name><![CDATA[JPA]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>57</wp:term_id><wp:tag_slug>jwchat</wp:tag_slug><wp:tag_name><![CDATA[jwchat]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>71</wp:term_id><wp:tag_slug>king-kong</wp:tag_slug><wp:tag_name><![CDATA[King Kong]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>73</wp:term_id><wp:tag_slug>mac-osx</wp:tag_slug><wp:tag_name><![CDATA[Mac OSX]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>25</wp:term_id><wp:tag_slug>maven</wp:tag_slug><wp:tag_name><![CDATA[Maven]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>58</wp:term_id><wp:tag_slug>microcontainer-2</wp:tag_slug><wp:tag_name><![CDATA[MicroContainer]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>27</wp:term_id><wp:tag_slug>mobicents</wp:tag_slug><wp:tag_name><![CDATA[Mobicents]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>64</wp:term_id><wp:tag_slug>msn</wp:tag_slug><wp:tag_name><![CDATA[MSN]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>28</wp:term_id><wp:tag_slug>ode</wp:tag_slug><wp:tag_name><![CDATA[ODE]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>60</wp:term_id><wp:tag_slug>open-source</wp:tag_slug><wp:tag_name><![CDATA[Open Source]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>56</wp:term_id><wp:tag_slug>openfire</wp:tag_slug><wp:tag_name><![CDATA[Openfire]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>30</wp:term_id><wp:tag_slug>opensso</wp:tag_slug><wp:tag_name><![CDATA[OpenSSO]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>62</wp:term_id><wp:tag_slug>postgresql</wp:tag_slug><wp:tag_name><![CDATA[Postgresql]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>35</wp:term_id><wp:tag_slug>resteasy</wp:tag_slug><wp:tag_name><![CDATA[RESTEasy]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>76</wp:term_id><wp:tag_slug>review</wp:tag_slug><wp:tag_name><![CDATA[Review]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>53</wp:term_id><wp:tag_slug>riftsaw-2</wp:tag_slug><wp:tag_name><![CDATA[RiftSaw]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>39</wp:term_id><wp:tag_slug>security</wp:tag_slug><wp:tag_name><![CDATA[Security]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>66</wp:term_id><wp:tag_slug>shenzhen</wp:tag_slug><wp:tag_name><![CDATA[Shenzhen]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>41</wp:term_id><wp:tag_slug>spring</wp:tag_slug><wp:tag_name><![CDATA[Spring]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>67</wp:term_id><wp:tag_slug>subversion</wp:tag_slug><wp:tag_name><![CDATA[subversion]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>43</wp:term_id><wp:tag_slug>thoughts</wp:tag_slug><wp:tag_name><![CDATA[Thoughts]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>50</wp:term_id><wp:tag_slug>travel</wp:tag_slug><wp:tag_name><![CDATA[Travel]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>44</wp:term_id><wp:tag_slug>ubuntu</wp:tag_slug><wp:tag_name><![CDATA[Ubuntu]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>70</wp:term_id><wp:tag_slug>uml</wp:tag_slug><wp:tag_name><![CDATA[UML]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>69</wp:term_id><wp:tag_slug>voa</wp:tag_slug><wp:tag_name><![CDATA[VOA]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>68</wp:term_id><wp:tag_slug>world-cup</wp:tag_slug><wp:tag_name><![CDATA[world cup]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>46</wp:term_id><wp:tag_slug>ws-cdl</wp:tag_slug><wp:tag_name><![CDATA[WS-CDL]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>61</wp:term_id><wp:tag_slug>ws-security</wp:tag_slug><wp:tag_name><![CDATA[WS-Security]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>47</wp:term_id><wp:tag_slug>xml</wp:tag_slug><wp:tag_name><![CDATA[XML]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>63</wp:term_id><wp:tag_slug>%e8%87%aa%e8%a8%80%e8%87%aa%e8%af%ad</wp:tag_slug><wp:tag_name><![CDATA[自言自语]]></wp:tag_name></wp:tag>

	<generator>http://wordpress.org/?v=3.1</generator>

	<item>
		<title>程序代码和英语</title>
		<link>http://jeff.familyyu.net/2005/05/19/%e7%a8%8b%e5%ba%8f%e4%bb%a3%e7%a0%81%e5%92%8c%e8%8b%b1%e8%af%ad/</link>
		<pubDate>Thu, 19 May 2005 05:19:46 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang1.wordpress.com/2005/05/19/%e7%a8%8b%e5%ba%8f%e4%bb%a3%e7%a0%81%e5%92%8c%e8%8b%b1%e8%af%ad</guid>
		<description></description>
		<content:encoded><![CDATA[<div id="msgcns!4001C604AF3F011!107" class="bvMsg">

想写出好的容易理解的代码，那么你就要写得跟文档一样.但是，对于我们来说，我们要使用英语来表达，因为代码是用英文的形式。
当我们写代码的时候，因为英语是我们的第二语言，那么很多人对它的掌握并不象外国人那么好，所以我们经常有一些类或者方法的命名并不是很容易让人明白，那么只有你很好的掌握了英文，你才有可能写出让人易懂的程序!

</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>139</wp:post_id>
		<wp:post_date>2005-05-19 05:19:46</wp:post_date>
		<wp:post_date_gmt>2005-05-19 05:19:46</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e7%a8%8b%e5%ba%8f%e4%bb%a3%e7%a0%81%e5%92%8c%e8%8b%b1%e8%af%ad</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="chinese"><![CDATA[Chinese]]></category>
		<category domain="category" nicename="thoughts"><![CDATA[Thoughts]]></category>
		<category domain="post_tag" nicename="%e8%87%aa%e8%a8%80%e8%87%aa%e8%af%ad"><![CDATA[自言自语]]></category>
		<wp:postmeta>
			<wp:meta_key>spaces_a43755b404d273dfcedbd14ccb4f51ab_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[http://cid-04001c604af3f011.users.api.live.net/Users(288261576051650577)/Blogs('4001C604AF3F011!102')/Entries('4001C604AF3F011!107')?authkey=X13wC75MXT0%24]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_efficient_related_posts</wp:meta_key>
			<wp:meta_value><![CDATA[a:9:{i:0;a:4:{s:2:"ID";s:2:"41";s:10:"post_title";s:27:"梦见自己大学刚毕业";s:7:"matches";s:1:"1";s:9:"permalink";s:118:"http://jeff.familyyu.net/2006/09/02/%e6%a2%a6%e8%a7%81%e8%87%aa%e5%b7%b1%e5%a4%a7%e5%ad%a6%e5%88%9a%e6%af%95%e4%b8%9a/";}i:1;a:4:{s:2:"ID";s:2:"88";s:10:"post_title";s:35:"爱好过多=没有真正的爱好?";s:7:"matches";s:1:"1";s:9:"permalink";s:136:"http://jeff.familyyu.net/2005/12/01/%e7%88%b1%e5%a5%bd%e8%bf%87%e5%a4%9a%e6%b2%a1%e6%9c%89%e7%9c%9f%e6%ad%a3%e7%9a%84%e7%88%b1%e5%a5%bd/";}i:2;a:4:{s:2:"ID";s:3:"101";s:10:"post_title";s:35:"写Blog是否有暴露狂的症状?";s:7:"matches";s:1:"1";s:9:"permalink";s:131:"http://jeff.familyyu.net/2005/08/30/%e5%86%99blog%e6%98%af%e5%90%a6%e6%9c%89%e6%9a%b4%e9%9c%b2%e7%8b%82%e7%9a%84%e7%97%87%e7%8a%b6/";}i:3;a:4:{s:2:"ID";s:3:"102";s:10:"post_title";s:13:"相信命运?";s:7:"matches";s:1:"1";s:9:"permalink";s:73:"http://jeff.familyyu.net/2005/08/30/%e7%9b%b8%e4%bf%a1%e5%91%bd%e8%bf%90/";}i:4;a:4:{s:2:"ID";s:3:"104";s:10:"post_title";s:12:"论 "坚持"";s:7:"matches";s:1:"1";s:9:"permalink";s:65:"http://jeff.familyyu.net/2005/08/27/%e8%ae%ba-%e5%9d%9a%e6%8c%81/";}i:5;a:4:{s:2:"ID";s:3:"115";s:10:"post_title";s:34:"英语口语和听力真难提高!";s:7:"matches";s:1:"1";s:9:"permalink";s:136:"http://jeff.familyyu.net/2005/07/21/%e8%8b%b1%e8%af%ad%e5%8f%a3%e8%af%ad%e5%92%8c%e5%90%ac%e5%8a%9b%e7%9c%9f%e9%9a%be%e6%8f%90%e9%ab%98/";}i:6;a:4:{s:2:"ID";s:3:"120";s:10:"post_title";s:14:"Blog or Track?";s:7:"matches";s:1:"1";s:9:"permalink";s:50:"http://jeff.familyyu.net/2005/06/23/blog-or-track/";}i:7;a:4:{s:2:"ID";s:3:"127";s:10:"post_title";s:25:"《你的灯亮着吗?》";s:7:"matches";s:1:"1";s:9:"permalink";s:109:"http://jeff.familyyu.net/2005/06/07/%e3%80%8a%e4%bd%a0%e7%9a%84%e7%81%af%e4%ba%ae%e7%9d%80%e5%90%97%e3%80%8b/";}i:8;a:4:{s:2:"ID";s:3:"134";s:10:"post_title";s:30:"对自己人生规划的思考";s:7:"matches";s:1:"1";s:9:"permalink";s:127:"http://jeff.familyyu.net/2005/05/23/%e5%af%b9%e8%87%aa%e5%b7%b1%e4%ba%ba%e7%94%9f%e8%a7%84%e5%88%92%e7%9a%84%e6%80%9d%e8%80%83/";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_relation_threshold</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>CXF ServiceInfo Model diagram</title>
		<link>http://jeff.familyyu.net/2007/09/06/cxf-serviceinfo-model-diagram/cxf-serviceinfo-model-diagram-2/</link>
		<pubDate>Mon, 03 Jan 2011 11:57:10 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeff.familyyu.net/wp-content/uploads/2011/01/serviceinfo.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>149</wp:post_id>
		<wp:post_date>2011-01-03 22:57:10</wp:post_date>
		<wp:post_date_gmt>2011-01-03 11:57:10</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>cxf-serviceinfo-model-diagram-2</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>146</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://jeff.familyyu.net/wp-content/uploads/2011/01/serviceinfo.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2011/01/serviceinfo.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:4:"1144";s:6:"height";s:3:"529";s:14:"hwstring_small";s:23:"height='59' width='128'";s:4:"file";s:23:"2011/01/serviceinfo.jpg";s:5:"sizes";a:3:{s:9:"thumbnail";a:3:{s:4:"file";s:23:"serviceinfo-150x150.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:23:"serviceinfo-300x138.jpg";s:5:"width";s:3:"300";s:6:"height";s:3:"138";}s:5:"large";a:3:{s:4:"file";s:24:"serviceinfo-1024x473.jpg";s:5:"width";s:4:"1024";s:6:"height";s:3:"473";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>auto_import</wp:meta_key>
			<wp:meta_value><![CDATA[http://1.bp.blogspot.com/_4KnaH_XIr1w/Rt-0Fek2BtI/AAAAAAAAAA0/cKh6mYbR8Mc/s1600/ServiceInfo.jpg]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Getting Started with jBPM 4.0 (Part II)</title>
		<link>http://jeff.familyyu.net/2009/07/12/getting-started-with-jbpm-4-0-part-ii/getting-started-with-jbpm-4-0-part-ii-2/</link>
		<pubDate>Mon, 03 Jan 2011 11:57:40 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeff.familyyu.net/wp-content/uploads/2011/01/jbpm-helloworld-process.gif</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>237</wp:post_id>
		<wp:post_date>2011-01-03 22:57:40</wp:post_date>
		<wp:post_date_gmt>2011-01-03 11:57:40</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>getting-started-with-jbpm-4-0-part-ii-2</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>233</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://jeff.familyyu.net/wp-content/uploads/2011/01/jbpm-helloworld-process.gif</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2011/01/jbpm-helloworld-process.gif]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"755";s:6:"height";s:3:"566";s:14:"hwstring_small";s:23:"height='96' width='128'";s:4:"file";s:35:"2011/01/jbpm-helloworld-process.gif";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:35:"jbpm-helloworld-process-150x150.gif";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:35:"jbpm-helloworld-process-300x224.gif";s:5:"width";s:3:"300";s:6:"height";s:3:"224";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>auto_import</wp:meta_key>
			<wp:meta_value><![CDATA[http://2.bp.blogspot.com/_4KnaH_XIr1w/Slk4wY31XeI/AAAAAAAABdI/5wE3hVXOfuo/s1600/jbpm-helloworld-process.gif]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Getting Started with jBPM 4.0 (Part II)</title>
		<link>http://jeff.familyyu.net/2009/07/12/getting-started-with-jbpm-4-0-part-ii/getting-started-with-jbpm-4-0-part-ii-3/</link>
		<pubDate>Mon, 03 Jan 2011 11:57:41 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeff.familyyu.net/wp-content/uploads/2011/01/jbpm-helloworld-layout.gif</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>241</wp:post_id>
		<wp:post_date>2011-01-03 22:57:41</wp:post_date>
		<wp:post_date_gmt>2011-01-03 11:57:41</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>getting-started-with-jbpm-4-0-part-ii-3</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>233</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://jeff.familyyu.net/wp-content/uploads/2011/01/jbpm-helloworld-layout.gif</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2011/01/jbpm-helloworld-layout.gif]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"363";s:6:"height";s:3:"272";s:14:"hwstring_small";s:23:"height='96' width='128'";s:4:"file";s:34:"2011/01/jbpm-helloworld-layout.gif";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:34:"jbpm-helloworld-layout-150x150.gif";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:34:"jbpm-helloworld-layout-300x224.gif";s:5:"width";s:3:"300";s:6:"height";s:3:"224";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>auto_import</wp:meta_key>
			<wp:meta_value><![CDATA[http://1.bp.blogspot.com/_4KnaH_XIr1w/Slk2VVs8dpI/AAAAAAAABdA/TBRLd9jgQhU/s400/jbpm-helloworld-layout.gif]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Getting Started with jBPM 4.0 (Part III)</title>
		<link>http://jeff.familyyu.net/2009/07/12/getting-started-with-jbpm-4-0-part-iii/getting-started-with-jbpm-4-0-part-iii-2/</link>
		<pubDate>Mon, 03 Jan 2011 11:57:41 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeff.familyyu.net/wp-content/uploads/2011/01/console-homepage.gif</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>244</wp:post_id>
		<wp:post_date>2011-01-03 22:57:41</wp:post_date>
		<wp:post_date_gmt>2011-01-03 11:57:41</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>getting-started-with-jbpm-4-0-part-iii-2</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>234</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://jeff.familyyu.net/wp-content/uploads/2011/01/console-homepage.gif</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2011/01/console-homepage.gif]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"957";s:6:"height";s:4:"1001";s:14:"hwstring_small";s:22:"height='96' width='91'";s:4:"file";s:28:"2011/01/console-homepage.gif";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:28:"console-homepage-150x150.gif";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:28:"console-homepage-286x300.gif";s:5:"width";s:3:"286";s:6:"height";s:3:"300";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>auto_import</wp:meta_key>
			<wp:meta_value><![CDATA[http://1.bp.blogspot.com/_4KnaH_XIr1w/Slm2DaKg6AI/AAAAAAAABdU/KtDUwDve2_s/s1600/console-homepage.gif]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Getting Started with jBPM 4.0 (Part III)</title>
		<link>http://jeff.familyyu.net/2009/07/12/getting-started-with-jbpm-4-0-part-iii/getting-started-with-jbpm-4-0-part-iii-3/</link>
		<pubDate>Mon, 03 Jan 2011 11:57:42 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeff.familyyu.net/wp-content/uploads/2011/01/console-deployments.gif</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>245</wp:post_id>
		<wp:post_date>2011-01-03 22:57:42</wp:post_date>
		<wp:post_date_gmt>2011-01-03 11:57:42</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>getting-started-with-jbpm-4-0-part-iii-3</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>234</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://jeff.familyyu.net/wp-content/uploads/2011/01/console-deployments.gif</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2011/01/console-deployments.gif]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:4:"1128";s:6:"height";s:3:"420";s:14:"hwstring_small";s:23:"height='47' width='128'";s:4:"file";s:31:"2011/01/console-deployments.gif";s:5:"sizes";a:3:{s:9:"thumbnail";a:3:{s:4:"file";s:31:"console-deployments-150x150.gif";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:31:"console-deployments-300x111.gif";s:5:"width";s:3:"300";s:6:"height";s:3:"111";}s:5:"large";a:3:{s:4:"file";s:32:"console-deployments-1024x381.gif";s:5:"width";s:4:"1024";s:6:"height";s:3:"381";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>auto_import</wp:meta_key>
			<wp:meta_value><![CDATA[http://4.bp.blogspot.com/_4KnaH_XIr1w/Slm2SMzInKI/AAAAAAAABd8/9V8sVzqwQDE/s1600/console-task.gif]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Getting Started with jBPM 4.0 (Part IV)</title>
		<link>http://jeff.familyyu.net/2009/07/19/getting-started-with-jbpm-4-0-part-iv/getting-started-with-jbpm-4-0-part-iv-2/</link>
		<pubDate>Mon, 03 Jan 2011 11:57:42 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeff.familyyu.net/wp-content/uploads/2011/01/taskform.gif</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>250</wp:post_id>
		<wp:post_date>2011-01-03 22:57:42</wp:post_date>
		<wp:post_date_gmt>2011-01-03 11:57:42</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>getting-started-with-jbpm-4-0-part-iv-2</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>236</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://jeff.familyyu.net/wp-content/uploads/2011/01/taskform.gif</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2011/01/taskform.gif]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"628";s:6:"height";s:3:"362";s:14:"hwstring_small";s:23:"height='73' width='128'";s:4:"file";s:20:"2011/01/taskform.gif";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:20:"taskform-150x150.gif";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:20:"taskform-300x172.gif";s:5:"width";s:3:"300";s:6:"height";s:3:"172";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>auto_import</wp:meta_key>
			<wp:meta_value><![CDATA[http://2.bp.blogspot.com/_4KnaH_XIr1w/SmLKQM21hZI/AAAAAAAABgg/5EL0R9y9sRw/s1600/taskform.gif]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Getting Started with jBPM 4.0 (Part IV)</title>
		<link>http://jeff.familyyu.net/2009/07/19/getting-started-with-jbpm-4-0-part-iv/getting-started-with-jbpm-4-0-part-iv-3/</link>
		<pubDate>Mon, 03 Jan 2011 11:57:43 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeff.familyyu.net/wp-content/uploads/2011/01/diagram.gif</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>256</wp:post_id>
		<wp:post_date>2011-01-03 22:57:43</wp:post_date>
		<wp:post_date_gmt>2011-01-03 11:57:43</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>getting-started-with-jbpm-4-0-part-iv-3</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>236</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://jeff.familyyu.net/wp-content/uploads/2011/01/diagram.gif</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2011/01/diagram.gif]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:4:"1600";s:6:"height";s:3:"631";s:14:"hwstring_small";s:23:"height='50' width='128'";s:4:"file";s:19:"2011/01/diagram.gif";s:5:"sizes";a:3:{s:9:"thumbnail";a:3:{s:4:"file";s:19:"diagram-150x150.gif";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:19:"diagram-300x118.gif";s:5:"width";s:3:"300";s:6:"height";s:3:"118";}s:5:"large";a:3:{s:4:"file";s:20:"diagram-1024x403.gif";s:5:"width";s:4:"1024";s:6:"height";s:3:"403";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>auto_import</wp:meta_key>
			<wp:meta_value><![CDATA[http://2.bp.blogspot.com/_4KnaH_XIr1w/SmLKP4ue_YI/AAAAAAAABgY/MJASUfMZ3N0/s1600/diagram.gif]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Exploring ODE Part III: architecture and modules introduction</title>
		<link>http://jeff.familyyu.net/2010/01/30/exploring-ode-part-iii-architecture-and-modules-introduction/exploring-ode-part-iii-architecture-and-modules-introduction-2/</link>
		<pubDate>Mon, 03 Jan 2011 11:57:50 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeff.familyyu.net/wp-content/uploads/2011/01/odearchitecture.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>275</wp:post_id>
		<wp:post_date>2011-01-03 22:57:50</wp:post_date>
		<wp:post_date_gmt>2011-01-03 11:57:50</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>exploring-ode-part-iii-architecture-and-modules-introduction-2</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>271</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://jeff.familyyu.net/wp-content/uploads/2011/01/odearchitecture.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2011/01/odearchitecture.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"942";s:6:"height";s:3:"626";s:14:"hwstring_small";s:23:"height='85' width='128'";s:4:"file";s:27:"2011/01/odearchitecture.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:27:"odearchitecture-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:27:"odearchitecture-300x199.png";s:5:"width";s:3:"300";s:6:"height";s:3:"199";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>auto_import</wp:meta_key>
			<wp:meta_value><![CDATA[http://4.bp.blogspot.com/_4KnaH_XIr1w/S2Lwy2yg3UI/AAAAAAAACSc/VYFVYne7cS4/s1600/OdeArchitecture.png]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Getting Started with jBPM 4.0 (Part II)</title>
		<link>http://jeff.familyyu.net/2009/07/12/getting-started-with-jbpm-4-0-part-ii/getting-started-with-jbpm-4-0-part-ii-4/</link>
		<pubDate>Mon, 03 Jan 2011 11:58:02 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeff.familyyu.net/wp-content/uploads/2011/01/jbpm-helloworld-layout1.gif</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>280</wp:post_id>
		<wp:post_date>2011-01-03 22:58:02</wp:post_date>
		<wp:post_date_gmt>2011-01-03 11:58:02</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>getting-started-with-jbpm-4-0-part-ii-4</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>233</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://jeff.familyyu.net/wp-content/uploads/2011/01/jbpm-helloworld-layout1.gif</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2011/01/jbpm-helloworld-layout1.gif]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"363";s:6:"height";s:3:"272";s:14:"hwstring_small";s:23:"height='96' width='128'";s:4:"file";s:35:"2011/01/jbpm-helloworld-layout1.gif";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:35:"jbpm-helloworld-layout1-150x150.gif";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:35:"jbpm-helloworld-layout1-300x224.gif";s:5:"width";s:3:"300";s:6:"height";s:3:"224";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_attachment</wp:meta_key>
			<wp:meta_value><![CDATA[http://1.bp.blogspot.com/_4KnaH_XIr1w/Slk2VVs8dpI/AAAAAAAABdA/TBRLd9jgQhU/jbpm-helloworld-layout.gif]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Exploring ODE Part III: architecture and modules introduction</title>
		<link>http://jeff.familyyu.net/2010/01/30/exploring-ode-part-iii-architecture-and-modules-introduction/exploring-ode-part-iii-architecture-and-modules-introduction-3/</link>
		<pubDate>Mon, 03 Jan 2011 11:58:02 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeff.familyyu.net/wp-content/uploads/2011/01/odearchitecture1.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>281</wp:post_id>
		<wp:post_date>2011-01-03 22:58:02</wp:post_date>
		<wp:post_date_gmt>2011-01-03 11:58:02</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>exploring-ode-part-iii-architecture-and-modules-introduction-3</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>271</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://jeff.familyyu.net/wp-content/uploads/2011/01/odearchitecture1.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2011/01/odearchitecture1.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"942";s:6:"height";s:3:"626";s:14:"hwstring_small";s:23:"height='85' width='128'";s:4:"file";s:28:"2011/01/odearchitecture1.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:28:"odearchitecture1-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:28:"odearchitecture1-300x199.png";s:5:"width";s:3:"300";s:6:"height";s:3:"199";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_attachment</wp:meta_key>
			<wp:meta_value><![CDATA[http://4.bp.blogspot.com/_4KnaH_XIr1w/S2Lwy2yg3UI/AAAAAAAACSc/VYFVYne7cS4/OdeArchitecture.png]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Getting Started with jBPM 4.0 (Part IV)</title>
		<link>http://jeff.familyyu.net/2009/07/19/getting-started-with-jbpm-4-0-part-iv/getting-started-with-jbpm-4-0-part-iv-4/</link>
		<pubDate>Mon, 03 Jan 2011 11:58:02 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeff.familyyu.net/wp-content/uploads/2011/01/diagram1.gif</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>282</wp:post_id>
		<wp:post_date>2011-01-03 22:58:02</wp:post_date>
		<wp:post_date_gmt>2011-01-03 11:58:02</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>getting-started-with-jbpm-4-0-part-iv-4</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>236</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://jeff.familyyu.net/wp-content/uploads/2011/01/diagram1.gif</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2011/01/diagram1.gif]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:4:"1600";s:6:"height";s:3:"631";s:14:"hwstring_small";s:23:"height='50' width='128'";s:4:"file";s:20:"2011/01/diagram1.gif";s:5:"sizes";a:3:{s:9:"thumbnail";a:3:{s:4:"file";s:20:"diagram1-150x150.gif";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:20:"diagram1-300x118.gif";s:5:"width";s:3:"300";s:6:"height";s:3:"118";}s:5:"large";a:3:{s:4:"file";s:21:"diagram1-1024x403.gif";s:5:"width";s:4:"1024";s:6:"height";s:3:"403";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_attachment</wp:meta_key>
			<wp:meta_value><![CDATA[http://2.bp.blogspot.com/_4KnaH_XIr1w/SmLKP4ue_YI/AAAAAAAABgY/MJASUfMZ3N0/diagram.gif]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Jeff Yu</title>
		<link>http://jeff.familyyu.net/?attachment_id=288</link>
		<pubDate>Tue, 04 Jan 2011 01:42:31 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeff.familyyu.net/wp-content/uploads/2011/01/jeff_new.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>288</wp:post_id>
		<wp:post_date>2011-01-04 12:42:31</wp:post_date>
		<wp:post_date_gmt>2011-01-04 01:42:31</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>jeff_new</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://jeff.familyyu.net/wp-content/uploads/2011/01/jeff_new.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2011/01/jeff_new.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"174";s:6:"height";s:3:"220";s:14:"hwstring_small";s:22:"height='96' width='75'";s:4:"file";s:20:"2011/01/jeff_new.png";s:5:"sizes";a:1:{s:9:"thumbnail";a:3:{s:4:"file";s:20:"jeff_new-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Articles</title>
		<link>http://jeff.familyyu.net/articles/</link>
		<pubDate>Fri, 01 Apr 2011 09:06:07 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeff.familyyu.net/?page_id=307</guid>
		<description></description>
		<content:encoded><![CDATA[Articles:
<ul>
	<li><a href="http://people.apache.org/~jeffyu/articles/zh_CN/jbpm/">jBPM 4.x architecture exploring</a> (Jun 2009) (chinese)</li>
	<li><a href="http://people.apache.org/~jeffyu/articles/zh_CN/jbossesb/">JBossESB 4.x Introduction</a> (Sep 2008) (chinese)</li>
	<li><a href="http://people.apache.org/~jeffyu/artifacts/Presentation-tierThinking.pdf">Presentation Tier Thinking</a> (Mar 2006)</li>
	<li><a href="http://people.apache.org/~jeffyu/artifacts/jameleon.rar">Jameleon cookbook</a> (Mar 2006) (chinese)</li>
	<li><a href="http://people.apache.org/~jeffyu/artifacts/eclipse-cvs.pdf">Eclipse CVS tutoria</a>l (Feb 2005)</li>
</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>307</wp:post_id>
		<wp:post_date>2011-04-01 09:06:07</wp:post_date>
		<wp:post_date_gmt>2011-04-01 09:06:07</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>articles</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>About</title>
		<link>http://jeff.familyyu.net/about/</link>
		<pubDate>Fri, 01 Apr 2011 09:22:32 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeff.familyyu.net/?page_id=314</guid>
		<description></description>
		<content:encoded><![CDATA[<div style="float: left; width: 20%;"><a href="http://jeffyuchang.files.wordpress.com/2011/01/jeff.png"><img class="alignnone size-full wp-image-288" style="height: 80; width: 60;" title="Jeff Yu" src="http://jeff.familyyu.net/wp-content/uploads/2011/01/jeff_new.png" alt="" width="174" height="220" /></a></div>
<div style="float: left; width: 80%;">My Name is Jeff Yu, I am based in Sydney and I am focusing on SOA area, such ESB, BPM, Process Governance, Web  Service etc.Before I get involved in SOA area, I had developed  Enterprise Web Applications for more than 4 years in finance domain. Also I am a fan of  Linux/Mac.</div>
<div style="clear: both;">committer of following open source projects.
1. <a href="http://www.jboss.org/riftsaw">JBoss RiftSaw
</a>2. <a href="http://www.jboss.org/savara">JBoss SAVARA
</a>3. <a href="http://www.jboss.org/jbossidentity">JBoss Identity
</a>4. <a href="http://servicemix.apache.org/">Apache ServiceMix
</a>5. <a href="http://ode.apache.org/">Apache ODE</a>&nbsp;

contributor of following open source projects:
1. <a href="http://cxf.apache.org/">Apache CXF</a>
2. <a href="http://www.jboss.org/jbossjbpm">JBoss jBPM</a>
3. <a href="http://www.jboss.org/jbossesb">JBoss ESB</a>

Disclaimer - The opinions expressed  in this blog are my own and do not represent my employers in any means.

</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>314</wp:post_id>
		<wp:post_date>2011-04-01 09:22:32</wp:post_date>
		<wp:post_date_gmt>2011-04-01 09:22:32</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>about</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>3</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_page_template</wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Galleries</title>
		<link>http://jeff.familyyu.net/galleries/</link>
		<pubDate>Fri, 01 Apr 2011 09:40:48 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeff.familyyu.net/?page_id=317</guid>
		<description></description>
		<content:encoded><![CDATA[<a href="http://picasaweb.google.com/jeff.yuchang/AustraliaTrip#">Australian Trip</a>

<a href="http://picasaweb.google.com/jeff.yuchang/Singapore#">Singapore Trip</a>

<a href="http://picasaweb.google.com/jeff.yuchang/Molin#">Molin</a>

<a href="http://picasaweb.google.com/jeff.yuchang/SummerPalace#">Summer Palace</a>

<a href="http://picasaweb.google.com/jeff.yuchang/Daguanyuan#">Daguanyuan</a>

<a href="http://picasaweb.google.com/jeff.yuchang/NandaiheTrip#">Nandaihe Trip </a>

<a href="http://picasaweb.google.com/jeff.yuchang/Nest#">Beijing Nest</a>

<a href="http://picasaweb.google.com/jeff.yuchang/BaicaoPan#">Baicaopan</a>

<a href="http://picasaweb.google.com/jeff.yuchang/BashangPlain#">Bashang caoyuan</a>

<a href="http://picasaweb.google.com/jeff.yuchang/Yangshuo#">Yangshuo</a>

<a href="http://picasaweb.google.com/jeff.yuchang/MaLuanMountain#">Maluan Mountain</a>

]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>317</wp:post_id>
		<wp:post_date>2011-04-01 09:40:48</wp:post_date>
		<wp:post_date_gmt>2011-04-01 09:40:48</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>galleries</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>1</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Resume</title>
		<link>http://jeff.familyyu.net/resume/</link>
		<pubDate>Fri, 01 Apr 2011 09:51:55 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeff.familyyu.net/?page_id=319</guid>
		<description></description>
		<content:encoded><![CDATA[[linkedinsc profile="jeffyuchang"]
<h2 style="text-align: center;">[linkedinsc_headline]</h2>
<h3>Experiences</h3>
[linkedinsc_positions]
<div style="float: left; width: 150px;">[linkedinsc_position_start_date] - [linkedinsc_position_end_date]</div>
<div style="margin-left: 150px;">
<b>[linkedinsc_position_title]</b>, [linkedinsc_position_company_name]<br />
<em>[linkedinsc_position_company_industry]</em><br />
[linkedinsc_position_summary]<br /><br />
</div>
[/linkedinsc_positions]
<h3>Education</h3>
[linkedinsc_educations]
<div style="float: left; width: 150px;">[linkedinsc_education_start_date] - [linkedinsc_education_end_date]</div>
<div style="margin-left: 150px;">
<b>[linkedinsc_education_school_name]</b><br />
<em>[linkedinsc_education_degree] en [linkedinsc_education_field_of_study]</em><br />
[linkedinsc_education_notes]<br /><br />
</div>
[/linkedinsc_educations]
[/linkedinsc] ]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>319</wp:post_id>
		<wp:post_date>2011-04-01 09:51:55</wp:post_date>
		<wp:post_date_gmt>2011-04-01 09:51:55</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>resume</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>2</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>jeff.png</title>
		<link>http://jeff.familyyu.net/?attachment_id=678</link>
		<pubDate>Sat, 21 May 2011 03:37:33 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeff.familyyu.net/wp-content/uploads/2011/05/jeff.png</guid>
		<description></description>
		<content:encoded><![CDATA[http://jeff.familyyu.net/wp-content/uploads/2011/05/jeff.png]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>678</wp:post_id>
		<wp:post_date>2011-05-21 03:37:33</wp:post_date>
		<wp:post_date_gmt>2011-05-21 03:37:33</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>jeff-png</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://jeff.familyyu.net/wp-content/uploads/2011/05/jeff.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2011/05/jeff.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"174";s:6:"height";s:3:"220";s:14:"hwstring_small";s:22:"height='96' width='75'";s:4:"file";s:16:"2011/05/jeff.png";s:5:"sizes";a:1:{s:9:"thumbnail";a:3:{s:4:"file";s:16:"jeff-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Readings</title>
		<link>http://jeff.familyyu.net/readings/</link>
		<pubDate>Wed, 17 Aug 2011 01:21:47 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeff.familyyu.net/?page_id=681</guid>
		<description></description>
		<content:encoded><![CDATA[[my_library title="My Favourites" limit=40 order="added asc"] ]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>681</wp:post_id>
		<wp:post_date>2011-08-17 11:21:47</wp:post_date>
		<wp:post_date_gmt>2011-08-17 01:21:47</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>readings</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_page_template</wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>functional_programming</title>
		<link>http://jeff.familyyu.net/2011/09/17/functional-programming-for-java-developer-book-review/functional_programming/</link>
		<pubDate>Sat, 17 Sep 2011 03:29:27 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeff.familyyu.net/wp-content/uploads/2011/09/functional_programming.gif</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>711</wp:post_id>
		<wp:post_date>2011-09-17 13:29:27</wp:post_date>
		<wp:post_date_gmt>2011-09-17 03:29:27</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>functional_programming</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>710</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://jeff.familyyu.net/wp-content/uploads/2011/09/functional_programming.gif</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2011/09/functional_programming.gif]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"180";s:6:"height";s:3:"236";s:14:"hwstring_small";s:22:"height='96' width='73'";s:4:"file";s:34:"2011/09/functional_programming.gif";s:5:"sizes";a:1:{s:9:"thumbnail";a:3:{s:4:"file";s:34:"functional_programming-150x150.gif";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>关于Http中的Session实现机制</title>
		<link>http://jeff.familyyu.net/2005/06/08/%e5%85%b3%e4%ba%8ehttp%e4%b8%ad%e7%9a%84session%e5%ae%9e%e7%8e%b0%e6%9c%ba%e5%88%b6/</link>
		<pubDate>Wed, 08 Jun 2005 05:22:52 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang1.wordpress.com/2005/06/08/%e5%85%b3%e4%ba%8ehttp%e4%b8%ad%e7%9a%84session%e5%ae%9e%e7%8e%b0%e6%9c%ba%e5%88%b6</guid>
		<description></description>
		<content:encoded><![CDATA[<div id="msgcns!4001C604AF3F011!144" class="bvMsg"><p>  因为Http协议是个stateless的.当我们访问服务器的时候发送一个Request,服务器接收到我们的Request后,处理,而后发送一个Response回来.那么发送Response后,我们之前的Request的数据就全部丢失(对于HttpServletRequest,他的有效期--Scope--其实就是Servlet中Service()方法).那么,如果我们想让一些数据在多个Request之中共享,我们就有以下这些方案<br />一:将数据存放在客户端<br /> 1)用HTML Form中的Hidden Field(隐藏域)<br /> 2)把数据保存在cookie当中<br />二:将数据存放在服务端,而客户端只需要用JSESSIONID来关联,其中对JSESSIONID关联的处理有<br /> 1) URL rewrite (URL重写)<br /> 2) Cookie保存JSESSIONID<br /><br />可以说把放在客户端中的实现是个Bad Practice,对于一的1)方式,一是如果共享的数据要是多的话,每次要写那么多的隐藏域很痛苦,二是每次Request和Response都要传送这些数据,三是如果对于敏感的(比如密码)的数据,安全性可以说是很差.对于一中2)的方式,跟1)有类似的问题,就是不需要你去设置隐藏域的值,cookie会帮你做.<br /><br />  因为放在客户端不好,所以我们会把数据放在服务器端,而客户端传递的只是一个JSESSIONID就可以了,那么,在服务端存放的就是HttpSession的对象.这也就是Session对象存在的理由.(i think .:))<br /><br /> 当你发送第一个Request到服务器,因为服务器不知道你是否接受cookie,只能通过第二次的Request才能知道是否接受.(因为Http并没有&quot;握手&quot;)所以服务器第一次总是用URL重写来实现的.这是时候他会生成一个jsessionid和新建一个HttpSession对象,存放在服务端,而后如果客户端允许用Cookie,那么就会采用Cookie,默认推荐是用Cookie来实现,如果不能用Cookie的,就采用URL rewriting 来代替.(URL重写一般是在地址后增加一个jsessionid参数,like <a href="http://www.myserver.com/catalog/index.html;jsessionid=1234">http://www.myserver.com/catalog/index.html;jsessionid=1234</a> )<br /><br />  但是因为很多的服务器都已经有实现好了的Session机制,所以我们只需要直接调用他的API就可以了而不需要去关心他的实现机制.<br /><br />Reference:<br />    《struts in action》中对jsessionid的tip<br />    《servlet specification》<br />    《java servlet programming》<br />    《Core j2ee pattern》 <br />Updated, Below are some good links about this topic.</p>
<p>  <a href="http://www.supcode.com/Article/html/4/43/2005/06/29/216335472190.shtml">http://www.supcode.com/Article/html/4/43/2005/06/29/216335472190.shtml</a><br />  <a href="http://forum.javaeye.com/viewtopic.php?t=10452&amp;postdays=0&amp;postorder=asc&amp;start=0">http://forum.javaeye.com/viewtopic.php?t=10452&amp;postdays=0&amp;postorder=asc&amp;start=0</a>  <br /></p></div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>103</wp:post_id>
		<wp:post_date>2005-06-08 05:22:52</wp:post_date>
		<wp:post_date_gmt>2005-06-08 05:22:52</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%85%b3%e4%ba%8ehttp%e4%b8%ad%e7%9a%84session%e5%ae%9e%e7%8e%b0%e6%9c%ba%e5%88%b6</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="java"><![CDATA[Java]]></category>
		<wp:postmeta>
			<wp:meta_key>spaces_a43755b404d273dfcedbd14ccb4f51ab_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[http://cid-04001c604af3f011.users.api.live.net/Users(288261576051650577)/Blogs('4001C604AF3F011!102')/Entries('4001C604AF3F011!144')?authkey=X13wC75MXT0%24]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Blog or Track?</title>
		<link>http://jeff.familyyu.net/2005/06/23/blog-or-track/</link>
		<pubDate>Thu, 23 Jun 2005 05:23:29 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang1.wordpress.com/2005/06/23/blog-or-track</guid>
		<description></description>
		<content:encoded><![CDATA[<div id="msgcns!4001C604AF3F011!165" class="bvMsg">

Blog的定义:
The name "blog" is a truncated form of "web log" according to Rebecca Blood's essay  "Weblogs: a history and perspective." Additional information: The term "blog" is used to refer to sites that can best be described as mini-directories, often populated with the site owner's personal favorites and his/her comments. Blogs often contain message boards, chat rooms, articles archives etc.
Blog或Weblog，中文称网志或部落格，或者称为博客，是一种網上一個共享空間，以日记的形式在网络上发表自己的个人内容的一种形式

我觉得英文的定义比中文的定义更清楚些.其实呢,我第一次开始玩blog的时候,我就经常摘些自己觉得好的文章直接拷贝过来,充当自己的blog,但后来觉得好像自己是在搞文摘.当时笑说自己的blog叫&lt;Jeff文摘&gt;.拷贝久了,你自己再回头看,会觉得挺无聊的.或许是因为自己的文字太少.
那么,所以这次,我一般都不拷贝,最多只是以引用的方式,关键要表达自己的观点.以前看别人的blog,很多的blog都有很好的主题,比如说软件开发,厨艺等.我本来也想说自己主要是用于发表在自己软件开发方面的.但后来发现那样,好像很单调....
blog还有个就是会太杂,太乱。类别很多，有时候就感觉这个很乱..所以,这次我也尽量少设置类别.但是今天发现,或许是我自己对自己限制的太死.日志或许就是要记录你每天自己所做的觉得有意义的事情.所以,我今天也增加了English Study的类别,因为最近中午学英语的时候,有时候觉得有些地方讲的很好,那么就可以记下来,有些虽然很简单,但经常没用就会忘掉.也算给自己个Reminder.
所以,我觉得或许自己这个共享空间可以叫我的Track吧,因为那是我学习,工作,生活的痕迹.....
<div>--<span style="font-family: Verdana;"><strong><span style="color: #006400; font-family: Georgia;"><span style="text-decoration: underline;"><span style="font-family: Garamond;">Jeff</span> <span style="font-family: Garamond;">Yu</span></span></span></strong>--</span></div>
</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>120</wp:post_id>
		<wp:post_date>2005-06-23 05:23:29</wp:post_date>
		<wp:post_date_gmt>2005-06-23 05:23:29</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>blog-or-track</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="blog"><![CDATA[Blog]]></category>
		<category domain="category" nicename="chinese"><![CDATA[Chinese]]></category>
		<category domain="category" nicename="thoughts"><![CDATA[Thoughts]]></category>
		<category domain="post_tag" nicename="%e8%87%aa%e8%a8%80%e8%87%aa%e8%af%ad"><![CDATA[自言自语]]></category>
		<wp:postmeta>
			<wp:meta_key>spaces_a43755b404d273dfcedbd14ccb4f51ab_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[http://cid-04001c604af3f011.users.api.live.net/Users(288261576051650577)/Blogs('4001C604AF3F011!102')/Entries('4001C604AF3F011!165')?authkey=X13wC75MXT0%24]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_efficient_related_posts</wp:meta_key>
			<wp:meta_value><![CDATA[a:9:{i:0;a:4:{s:2:"ID";s:3:"101";s:10:"post_title";s:35:"写Blog是否有暴露狂的症状?";s:7:"matches";s:1:"2";s:9:"permalink";s:131:"http://jeff.familyyu.net/2005/08/30/%e5%86%99blog%e6%98%af%e5%90%a6%e6%9c%89%e6%9a%b4%e9%9c%b2%e7%8b%82%e7%9a%84%e7%97%87%e7%8a%b6/";}i:1;a:4:{s:2:"ID";s:2:"41";s:10:"post_title";s:27:"梦见自己大学刚毕业";s:7:"matches";s:1:"1";s:9:"permalink";s:118:"http://jeff.familyyu.net/2006/09/02/%e6%a2%a6%e8%a7%81%e8%87%aa%e5%b7%b1%e5%a4%a7%e5%ad%a6%e5%88%9a%e6%af%95%e4%b8%9a/";}i:2;a:4:{s:2:"ID";s:2:"88";s:10:"post_title";s:35:"爱好过多=没有真正的爱好?";s:7:"matches";s:1:"1";s:9:"permalink";s:136:"http://jeff.familyyu.net/2005/12/01/%e7%88%b1%e5%a5%bd%e8%bf%87%e5%a4%9a%e6%b2%a1%e6%9c%89%e7%9c%9f%e6%ad%a3%e7%9a%84%e7%88%b1%e5%a5%bd/";}i:3;a:4:{s:2:"ID";s:3:"102";s:10:"post_title";s:13:"相信命运?";s:7:"matches";s:1:"1";s:9:"permalink";s:73:"http://jeff.familyyu.net/2005/08/30/%e7%9b%b8%e4%bf%a1%e5%91%bd%e8%bf%90/";}i:4;a:4:{s:2:"ID";s:3:"104";s:10:"post_title";s:12:"论 "坚持"";s:7:"matches";s:1:"1";s:9:"permalink";s:65:"http://jeff.familyyu.net/2005/08/27/%e8%ae%ba-%e5%9d%9a%e6%8c%81/";}i:5;a:4:{s:2:"ID";s:3:"115";s:10:"post_title";s:34:"英语口语和听力真难提高!";s:7:"matches";s:1:"1";s:9:"permalink";s:136:"http://jeff.familyyu.net/2005/07/21/%e8%8b%b1%e8%af%ad%e5%8f%a3%e8%af%ad%e5%92%8c%e5%90%ac%e5%8a%9b%e7%9c%9f%e9%9a%be%e6%8f%90%e9%ab%98/";}i:6;a:4:{s:2:"ID";s:3:"127";s:10:"post_title";s:25:"《你的灯亮着吗?》";s:7:"matches";s:1:"1";s:9:"permalink";s:109:"http://jeff.familyyu.net/2005/06/07/%e3%80%8a%e4%bd%a0%e7%9a%84%e7%81%af%e4%ba%ae%e7%9d%80%e5%90%97%e3%80%8b/";}i:7;a:4:{s:2:"ID";s:3:"134";s:10:"post_title";s:30:"对自己人生规划的思考";s:7:"matches";s:1:"1";s:9:"permalink";s:127:"http://jeff.familyyu.net/2005/05/23/%e5%af%b9%e8%87%aa%e5%b7%b1%e4%ba%ba%e7%94%9f%e8%a7%84%e5%88%92%e7%9a%84%e6%80%9d%e8%80%83/";}i:8;a:4:{s:2:"ID";s:3:"139";s:10:"post_title";s:21:"程序代码和英语";s:7:"matches";s:1:"1";s:9:"permalink";s:100:"http://jeff.familyyu.net/2005/05/19/%e7%a8%8b%e5%ba%8f%e4%bb%a3%e7%a0%81%e5%92%8c%e8%8b%b1%e8%af%ad/";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_relation_threshold</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>17</wp:comment_id>
			<wp:comment_author><![CDATA[anson]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2005-06-23 11:39:59</wp:comment_date>
			<wp:comment_date_gmt>2005-06-23 11:39:59</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[金和，NMD能不能说些有建设性的话。。。我也赞同JEFF]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>18</wp:comment_id>
			<wp:comment_author><![CDATA[金和]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2005-06-23 07:13:53</wp:comment_date>
			<wp:comment_date_gmt>2005-06-23 07:13:53</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[赞同]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>View Helper之模式</title>
		<link>http://jeff.familyyu.net/2005/06/21/view-helper%e4%b9%8b%e6%a8%a1%e5%bc%8f/</link>
		<pubDate>Tue, 21 Jun 2005 05:51:18 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang1.wordpress.com/2005/06/21/view-helper%e4%b9%8b%e6%a8%a1%e5%bc%8f</guid>
		<description></description>
		<content:encoded><![CDATA[<div id="msgcns!4001C604AF3F011!159" class="bvMsg"><p> 因为最近忙,有时候写代码写着写着,突然想起需要总结下什么内容,所以先写把标题写上,等有空得时候再来补上,这样就以后就不会漏写了.:)<br />    to be continued....</p> <div align="right">        --<font face="Verdana"><strong><font face="Georgia" color="#006400"><u><font face="Garamond">Jeff</font> <font face="Garamond">Yu</font></u></font></strong>--</font></div></div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>121</wp:post_id>
		<wp:post_date>2005-06-21 05:51:18</wp:post_date>
		<wp:post_date_gmt>2005-06-21 05:51:18</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>view-helper%e4%b9%8b%e6%a8%a1%e5%bc%8f</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="java"><![CDATA[Java]]></category>
		<wp:postmeta>
			<wp:meta_key>spaces_a43755b404d273dfcedbd14ccb4f51ab_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[http://cid-04001c604af3f011.users.api.live.net/Users(288261576051650577)/Blogs('4001C604AF3F011!102')/Entries('4001C604AF3F011!159')?authkey=X13wC75MXT0%24]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>14</wp:comment_id>
			<wp:comment_author><![CDATA[金和]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2005-06-22 01:32:52</wp:comment_date>
			<wp:comment_date_gmt>2005-06-22 01:32:52</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[干，浪费我表情]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>15</wp:comment_id>
			<wp:comment_author><![CDATA[金和]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2005-06-22 01:32:41</wp:comment_date>
			<wp:comment_date_gmt>2005-06-22 01:32:41</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[干]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>16</wp:comment_id>
			<wp:comment_author><![CDATA[anson]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2005-06-21 11:22:00</wp:comment_date>
			<wp:comment_date_gmt>2005-06-21 11:22:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[SB]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>我读《Is Design Dead》</title>
		<link>http://jeff.familyyu.net/2005/06/17/%e6%88%91%e8%af%bb%e3%80%8ais-design-dead%e3%80%8b/</link>
		<pubDate>Fri, 17 Jun 2005 12:29:22 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang1.wordpress.com/2005/06/17/%e6%88%91%e8%af%bb%e3%80%8ais-design-dead%e3%80%8b</guid>
		<description></description>
		<content:encoded><![CDATA[<div id="msgcns!4001C604AF3F011!157" class="bvMsg"><p> 《设计已死?》<a href="http://martinfowler.com/articles/designDead.htm">http://martinfowler.com/articles/designDead.htm</a>,高尔基有他的三部曲,王小波也有他的三部曲,martin fowler在他的article上也有三篇popular essay,既然我不能像他们那么猛. 但我想我也可以有个叫&quot;我读之&quot;三部曲...:)  .........to be continued ...</p> <div align="right">        --<font face="Verdana"><strong><font face="Georgia" color="#006400"><u><font face="Garamond">Jeff</font> <font face="Garamond">Yu</font></u></font></strong>--</font></div></div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>122</wp:post_id>
		<wp:post_date>2005-06-17 12:29:22</wp:post_date>
		<wp:post_date_gmt>2005-06-17 12:29:22</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e6%88%91%e8%af%bb%e3%80%8ais-design-dead%e3%80%8b</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="java"><![CDATA[Java]]></category>
		<wp:postmeta>
			<wp:meta_key>spaces_a43755b404d273dfcedbd14ccb4f51ab_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[http://cid-04001c604af3f011.users.api.live.net/Users(288261576051650577)/Blogs('4001C604AF3F011!102')/Entries('4001C604AF3F011!157')?authkey=X13wC75MXT0%24]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>13</wp:comment_id>
			<wp:comment_author><![CDATA[anson]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2005-06-19 09:15:43</wp:comment_date>
			<wp:comment_date_gmt>2005-06-19 09:15:43</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[太不厚道了，兄弟你都知道我也有三部曲，文章应该这样写：《设计已死?》http://martinfowler.com/articles/designDead.htm,大家都知道，ANSON有他的三部曲，高尔基有他的三部曲,王小波也有他的三部曲,martin fowler在他的article上也有三篇popular essay,既然我不能像他们那么猛. 但我想我也可以有个叫&quot;我读之&quot;三部曲...:)  .........to be continued ...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>我读《continuous integration》</title>
		<link>http://jeff.familyyu.net/2005/06/16/%e6%88%91%e8%af%bb%e3%80%8acontinuous-integration%e3%80%8b/</link>
		<pubDate>Thu, 16 Jun 2005 09:28:21 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang1.wordpress.com/2005/06/16/%e6%88%91%e8%af%bb%e3%80%8acontinuous-integration%e3%80%8b</guid>
		<description></description>
		<content:encoded><![CDATA[<div id="msgcns!4001C604AF3F011!156" class="bvMsg"><p> 《持续集成》<a href="http://www.martinfowler.com/articles/continuousIntegration.html">http://www.martinfowler.com/articles/continuousIntegration.html</a> ,应该说现在才去写这篇文章的读后感,可能会让人感觉到我的滞后.其实我以前就已经看过这篇文章了,前些天再看一遍. 感觉是很不错,但我不知道在国内有几家公司真正做到这一点. 经常的run unit test case. 因为现在真正去用TDD的模式开发软件的不多,再加上我个人感觉最麻烦的一块就是要操作数据库,那么对于测试数据的处理??<br />  文章里面主要提到这么几点:<br />   1. 持续集成的好处:<br />         最主要的把大家的代码从一开始就整合,那么就可以避免以后各自代码多的时候整合的问题.这有点像治病,从一有小病就开始治疗,以后就不会有什么大病.要不然,等以后大病治疗,那时的人力物力都比较大.<br />  2.经常整合集成:<br />      就像时不时的去体检下,有问题就可以发现了.<br />  3.怎么样才算一个成功的集成?<br />     每次集成无非就是把最新的代码check out出来,然后运行test case,运行完后,保存结果,如果有问题,就发mail告知...这是一个固定的流程,那么既然是确定的流程,那么最好是能自动执行这些步骤,不需要人工的参与,这才算是成功的集成.<br />  4.代码的版本控制<br />     最好把代码都统一放在一起,然后用工具控制版本管理.<br />  5.测试代码<br />     测试代码起着一个至关重要的作用,这就像体检的项目,项目越多,当然就能对你身体的病情了解的越清楚.(如果你项目才一个,比如身高,那么天天体检也没什么实际的很大意义,对于治疗病来说.)<br />  6.代码的提交<br />   ........<br />   文章里面还提到martin fowler自己公司的做法,就是在后台有个进程,每隔一段时间(5分钟)如果有人提交新代码,就开始跑一遍集成...<br />   <br />    这样做是很好,但我觉得关键还是要看测试代码的多少,还有就是操作数据库的测试案例,这点我目前我不知道非常满意的解决方案,我得再看看资料.....<br />  </p></div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>123</wp:post_id>
		<wp:post_date>2005-06-16 09:28:21</wp:post_date>
		<wp:post_date_gmt>2005-06-16 09:28:21</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e6%88%91%e8%af%bb%e3%80%8acontinuous-integration%e3%80%8b</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="java"><![CDATA[Java]]></category>
		<wp:postmeta>
			<wp:meta_key>spaces_a43755b404d273dfcedbd14ccb4f51ab_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[http://cid-04001c604af3f011.users.api.live.net/Users(288261576051650577)/Blogs('4001C604AF3F011!102')/Entries('4001C604AF3F011!156')?authkey=X13wC75MXT0%24]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Design Pattern Thinking</title>
		<link>http://jeff.familyyu.net/2005/06/13/design-pattern-thinking/</link>
		<pubDate>Mon, 13 Jun 2005 10:46:24 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang1.wordpress.com/2005/06/13/design-pattern-thinking</guid>
		<description></description>
		<content:encoded><![CDATA[<div id="msgcns!4001C604AF3F011!148" class="bvMsg">

记得自己刚开始接触到设计模式的,是在2003年11月份的时候,最早看的是从jdon上面下载的&lt;pattern in java&gt;,后来在12月份看的是《Design pattern explained》(DDE),可以说这后面这本书对我的印象非常深刻.第1本书给我的感觉是,好像说的挺好玩的,挺有意思的.而后者给我的感觉就是说这本书会分析说我们为什么会有这些模式,这些模式是怎么解决我们的问题.

说说DDE这本书吧,我记得书里面有这么一段章节:
<span style="color: #ff0000;"> Find What Is Varying and Encapsulate It
</span><span style="color: #0000ff;">In Design Patterns: Elements of Reusable Object -Oriented Software, the Gang of Four suggests the following:
Consider what should be variable in your design. This approach is the opposite of focusing on the cause of redesign. Instead of considering what might force a change to a design, consider what you want to be able to change without redesign. The focus here is on encapsulating the concept that varies, a theme of many design pat-Using inheritance this way in design patterns terns.
<span style="color: #ff0000;">Or, as I like to rephrase it, "Find what varies and encapsulate it."
These statements seem odd if you only think about encapsulation as data-hiding. They are much more sensible when you think of encapsulation as hiding classes using abstract classes.
</span>
<span style="color: #000000;">找出你可能需要改变的,或者说存在改变的地方,把他封装起来.不让外界知道更多的详细信息.这里的封装并不仅仅是封装数据,行为等,可以说封装一切.
</span>
</span><span style="color: #000000;"> 设计模式其实也就是主要针对各个不同变化的类型,采取了不同的解决方案的总和.
我个人比较推荐这本书,特别是对像我这种设计模式的初学者,里面写的很好,我每次看,都有些不同的感觉.</span>

<span style="color: #000000;"> </span><span style="color: #000000;"> .</span>................(待续)

</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>124</wp:post_id>
		<wp:post_date>2005-06-13 10:46:24</wp:post_date>
		<wp:post_date_gmt>2005-06-13 10:46:24</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>design-pattern-thinking</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="chinese"><![CDATA[Chinese]]></category>
		<category domain="post_tag" nicename="design-patterns"><![CDATA[Design Patterns]]></category>
		<category domain="category" nicename="thoughts"><![CDATA[Thoughts]]></category>
		<wp:postmeta>
			<wp:meta_key>spaces_a43755b404d273dfcedbd14ccb4f51ab_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[http://cid-04001c604af3f011.users.api.live.net/Users(288261576051650577)/Blogs('4001C604AF3F011!102')/Entries('4001C604AF3F011!148')?authkey=X13wC75MXT0%24]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_efficient_related_posts</wp:meta_key>
			<wp:meta_value><![CDATA[a:8:{i:0;a:4:{s:2:"ID";s:1:"6";s:10:"post_title";s:53:"[CXF]CXF中的两个概念:Invoker & PhaseInterceptor";s:7:"matches";s:1:"1";s:9:"permalink";s:121:"http://jeff.familyyu.net/2007/08/26/cxfcxf%e4%b8%ad%e7%9a%84%e4%b8%a4%e4%b8%aa%e6%a6%82%e5%bf%b5invoker-phaseinterceptor/";}i:1;a:4:{s:2:"ID";s:2:"10";s:10:"post_title";s:61:"[CXF]CXF当中的Configuration -- Spring2.0可扩展XML配置";s:7:"matches";s:1:"1";s:9:"permalink";s:141:"http://jeff.familyyu.net/2007/08/23/cxfcxf%e5%bd%93%e4%b8%ad%e7%9a%84configuration-spring2-0%e5%8f%af%e6%89%a9%e5%b1%95xml%e9%85%8d%e7%bd%ae/";}i:2;a:4:{s:2:"ID";s:2:"19";s:10:"post_title";s:38:"[CXF]CXF中DynamicProxy模式的应用";s:7:"matches";s:1:"1";s:9:"permalink";s:109:"http://jeff.familyyu.net/2007/07/15/cxfcxf%e4%b8%addynamicproxy%e6%a8%a1%e5%bc%8f%e7%9a%84%e5%ba%94%e7%94%a8/";}i:3;a:4:{s:2:"ID";s:2:"23";s:10:"post_title";s:46:"[CXF]CXF中Collection Parameter模式的应用";s:7:"matches";s:1:"1";s:9:"permalink";s:117:"http://jeff.familyyu.net/2007/07/14/cxfcxf%e4%b8%adcollection-parameter%e6%a8%a1%e5%bc%8f%e7%9a%84%e5%ba%94%e7%94%a8/";}i:4;a:4:{s:2:"ID";s:2:"22";s:10:"post_title";s:42:"[CXF]CXF中的AbstractFactory模式应用.";s:7:"matches";s:1:"1";s:9:"permalink";s:112:"http://jeff.familyyu.net/2007/07/14/cxfcxf%e4%b8%ad%e7%9a%84abstractfactory%e6%a8%a1%e5%bc%8f%e5%ba%94%e7%94%a8/";}i:5;a:4:{s:2:"ID";s:2:"24";s:10:"post_title";s:33:"Jeff说模式 - Interceptor模式";s:7:"matches";s:1:"1";s:9:"permalink";s:98:"http://jeff.familyyu.net/2007/07/14/jeff%e8%af%b4%e6%a8%a1%e5%bc%8f-interceptor%e6%a8%a1%e5%bc%8f/";}i:6;a:4:{s:2:"ID";s:2:"20";s:10:"post_title";s:34:"[CXF]CXF中的Observer模式应用";s:7:"matches";s:1:"1";s:9:"permalink";s:105:"http://jeff.familyyu.net/2007/07/12/cxfcxf%e4%b8%ad%e7%9a%84observer%e6%a8%a1%e5%bc%8f%e5%ba%94%e7%94%a8/";}i:7;a:4:{s:2:"ID";s:2:"37";s:10:"post_title";s:29:"Jeff说模式 - Vistor 模式";s:7:"matches";s:1:"1";s:9:"permalink";s:94:"http://jeff.familyyu.net/2006/09/03/jeff%e8%af%b4%e6%a8%a1%e5%bc%8f-vistor-%e6%a8%a1%e5%bc%8f/";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_relation_threshold</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>9</wp:comment_id>
			<wp:comment_author><![CDATA[金和]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2005-06-14 00:52:52</wp:comment_date>
			<wp:comment_date_gmt>2005-06-14 00:52:52</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[请继续！]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>小心....</title>
		<link>http://jeff.familyyu.net/2005/06/14/%e5%b0%8f%e5%bf%83/</link>
		<pubDate>Tue, 14 Jun 2005 03:41:59 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang1.wordpress.com/2005/06/14/%e5%b0%8f%e5%bf%83</guid>
		<description></description>
		<content:encoded><![CDATA[<div id="msgcns!4001C604AF3F011!151" class="bvMsg">

昨天晚上大概7点,跟往常一样,我走到公车站准备坐车回去,因为肚子比较饿,走的比较快,刚好在我前面有2个女的,她们走的比较慢,那我就想快速直接超越她们!
这个时候,靠左边的那个女的好像向右边看了下，或许是用她的斜眼看到了我。
但见,她马上跟右边的女孩说:"小心...".
那女孩马上拽紧她的包!
...........................
@#@$$#$#

或许我真的可以考虑兼职做小偷,要不然,你不做小偷,别人却以为你是小偷.对我来说我委屈,对观众来说,他们会失望.不是吗？

</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>125</wp:post_id>
		<wp:post_date>2005-06-14 03:41:59</wp:post_date>
		<wp:post_date_gmt>2005-06-14 03:41:59</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%b0%8f%e5%bf%83</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="chinese"><![CDATA[Chinese]]></category>
		<category domain="category" nicename="others"><![CDATA[Others]]></category>
		<wp:postmeta>
			<wp:meta_key>spaces_a43755b404d273dfcedbd14ccb4f51ab_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[http://cid-04001c604af3f011.users.api.live.net/Users(288261576051650577)/Blogs('4001C604AF3F011!102')/Entries('4001C604AF3F011!151')?authkey=X13wC75MXT0%24]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>10</wp:comment_id>
			<wp:comment_author><![CDATA[Epin]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2005-06-15 03:25:27</wp:comment_date>
			<wp:comment_date_gmt>2005-06-15 03:25:27</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[那我可以做潜在客户噢]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>11</wp:comment_id>
			<wp:comment_author><![CDATA[金和]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2005-06-15 01:42:32</wp:comment_date>
			<wp:comment_date_gmt>2005-06-15 01:42:32</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[anson就喜欢找jeff这种造型的拉皮条，比较安全！]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>12</wp:comment_id>
			<wp:comment_author><![CDATA[anson]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2005-06-14 15:18:08</wp:comment_date>
			<wp:comment_date_gmt>2005-06-14 15:18:08</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[这个反应比较有代表性，我觉得做小偷没什么技术含量你还可以考虑做拉皮条的。。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Session and Cookie ??</title>
		<link>http://jeff.familyyu.net/2005/06/08/session-and-cookie/</link>
		<pubDate>Wed, 08 Jun 2005 08:32:40 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang1.wordpress.com/2005/06/08/session-and-cookie</guid>
		<description></description>
		<content:encoded><![CDATA[<div id="msgcns!4001C604AF3F011!147" class="bvMsg"><p>  可以说,这篇blog是&lt;HTTP中Session实现机制&gt;的副产品,在刚写那篇blog的时候,我曾这么说过:<br /><font color="#ff0033">  <font color="#000000">&quot;原本觉得自己好像理解的蛮清楚的,可惜现在写着,自己又发现个疑问,那就是Cookie里面存放的是jsessionid呢还是存放数据?那如果存放jsessionid这个好理解,那如果存放数据的话对于安全性的话是不是会低了点呢???还得再看看.......&quot;</font><br /><br /> </font><font color="#000000">后来跟george讨论到session和cookie的时候,我就明白了.其实呢现在默认的实现一般都是Cookie里面只存放JSESSIONID,因为数据存放在客户端是不安全的.我们来看看servlet-specification里面是怎么说的</font><font color="#ff0000">.<br />  &quot;Session tracking through HTTP cookies is the most used session tracking mechanism and is required to be supported by all servlet containers. The container sends a cookie to the client. The client will then return the cookie on each subsequent request to the server, unambiguously associating therequest with a session. The name of the session tracking cookie must be JSESSIONID.&quot;<br /><br /><font color="#000000">  好的,接下来我们来讨论Session和Cookie的区别?Session是保存在服务器的数据,Cookie是保存在客户端自己的数据.我觉得我们可以很简单很粗糙的这么说.其实这两者的出现都是为了对于多个Request中的信息共享.只不过一个是客户端,一个是服务端.<br /> 对于Session的作用我们可能已经很了解了.那么Cookie的作用和工作情况是怎么样的呢?<br />  <font color="#ff0000">A cookie is a bit of information sent by a web server to a browser that can later be read back from that browser. When a </font><a></a><font color="#ff0000">browser receives a cookie, it saves the cookie and thereafter sends the cookie back to the server each time it accesses a page on that server, subject to certain rules<br />  </font><font color="#000000">Cookie是由浏览器进行保存的,那么每发送一次Request,里面的Cookie也都按照一定的规则会被发送出去.对于Cookie的定义详细的请看 <a href="http://www.cookiecentral.com/c_concept.htm">http://www.cookiecentral.com/c_concept.htm</a><br />  我摘录些主要的:<br />   </font><font color="#ff0000">Cookies are pieces of information generated by a Web server and stored in the user's computer, ready for future access. <br />  Essentially, cookies make use of user-specific information transmitted by the Web server onto the user's computer so that the information might be available for later access by itself or other servers.<br /> Cookies are based on a two-stage process. First the cookie is stored in the user's computer without their consent or knowledge.<br /> During the second stage, the cookie is clandestinely and automatically transferred from the user's machine to a Web server. </font><br /></font>  <font color="#000033">像我们经常在论坛或者登录邮箱的时候,都有选择是否保存用户名等的功能,这些都是通过Cookie的功能来实现的.<br /></font></font><font color="#ff0000">  <br />  <font color="#000000">可能有人看完后会说,你这哪里是在讲Session和Cookie的区别,你简直就是在讲Cookie的作用吗?对于这个问题,我想回答的是&quot;我的地盘听我的&quot;.:)</font><br />  </font><font color="#ff0000"><br /></font></p></div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>126</wp:post_id>
		<wp:post_date>2005-06-08 08:32:40</wp:post_date>
		<wp:post_date_gmt>2005-06-08 08:32:40</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>session-and-cookie</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="java"><![CDATA[Java]]></category>
		<wp:postmeta>
			<wp:meta_key>spaces_a43755b404d273dfcedbd14ccb4f51ab_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[http://cid-04001c604af3f011.users.api.live.net/Users(288261576051650577)/Blogs('4001C604AF3F011!102')/Entries('4001C604AF3F011!147')?authkey=X13wC75MXT0%24]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>《你的灯亮着吗?》</title>
		<link>http://jeff.familyyu.net/2005/06/07/%e3%80%8a%e4%bd%a0%e7%9a%84%e7%81%af%e4%ba%ae%e7%9d%80%e5%90%97%e3%80%8b/</link>
		<pubDate>Tue, 07 Jun 2005 04:46:43 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang1.wordpress.com/2005/06/07/%e3%80%8a%e4%bd%a0%e7%9a%84%e7%81%af%e4%ba%ae%e7%9d%80%e5%90%97%e3%80%8b</guid>
		<description></description>
		<content:encoded><![CDATA[<div id="msgcns!4001C604AF3F011!140" class="bvMsg">

早上本来想在工作之余下载《core j2ee pattern》的电子版的书,刚好顺便下载了这本《你的灯亮着吗?》,之前有听过这本书,但一直都没去理会,也就没去下载这本书来看.刚刚打开这本书,稍微看了下,被译者的序言给吸引了,译者的序写的很好吗?我不大清楚,但我只知道他的序符合我的口味,有点哲理,有点幽默.
我摘些个人觉得比较不错的段落.

<span style="color: #0000ff;"> 在我们幼年的时候，我们对世界充满了憧憬；在我们青年的时候，我们心中满怀着理想；在我们壮年的时候，我们认为自己已经坚定地将地球踩在脚下；而在我们老年的时候，我们发现突然间有了足够的时间来后悔以前所作的一切。</span>

一位少年去拜访智者。他问：我如何才能快乐地解决我所遇到的问题呢？智者告诉他四句话：把自己当成别人；把别人当成自己；把别人当成别人；把自己当成自己。智者的话道出了看待事物的最重要的立场问题。
而这，正是本书首先提出的主题：1)动手去解决问题之前，好好想想问题的来源；2)如何站在各个角度来看待面临的问题，以能够知道其真正所在；如何去尝试那个最能解决真正问题的方法，并且时刻保持警惕心；3)为什么不要把人们的解决方法误认为是问题的定义，更不要把某个问题的解决方法误认为是问题的定义，特别是这个解决方法是你自己所使用的；4)永远都不要肯定自己已经有了一个正确的定义，即使是在问题好像已经解决之后

<span style="color: #ff0000;"> 诚如作者所说,“问题其实就是你的期望和你的感受之间的差别，而且不管看上去如何，人们很少知道他们要什么⋯⋯直到⋯⋯你给了他们所需要的东西”。</span>

<span style="color: #ff0000;"> </span><span style="color: #ff0000;"><span style="color: #ff0000;">你的灯亮着吗？
序篇
问题：没有人会阅读序言
解决方法：把序言称为第一章
解决方法带来的新问题：第一章是单调沉闷的
再次解决：把第一章扔了，再把第二章称为第一章</span>
.....................
</span>

</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>127</wp:post_id>
		<wp:post_date>2005-06-07 04:46:43</wp:post_date>
		<wp:post_date_gmt>2005-06-07 04:46:43</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e3%80%8a%e4%bd%a0%e7%9a%84%e7%81%af%e4%ba%ae%e7%9d%80%e5%90%97%e3%80%8b</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="chinese"><![CDATA[Chinese]]></category>
		<category domain="category" nicename="thoughts"><![CDATA[Thoughts]]></category>
		<category domain="post_tag" nicename="%e8%87%aa%e8%a8%80%e8%87%aa%e8%af%ad"><![CDATA[自言自语]]></category>
		<wp:postmeta>
			<wp:meta_key>spaces_a43755b404d273dfcedbd14ccb4f51ab_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[http://cid-04001c604af3f011.users.api.live.net/Users(288261576051650577)/Blogs('4001C604AF3F011!102')/Entries('4001C604AF3F011!140')?authkey=X13wC75MXT0%24]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_efficient_related_posts</wp:meta_key>
			<wp:meta_value><![CDATA[a:9:{i:0;a:4:{s:2:"ID";s:2:"41";s:10:"post_title";s:27:"梦见自己大学刚毕业";s:7:"matches";s:1:"1";s:9:"permalink";s:118:"http://jeff.familyyu.net/2006/09/02/%e6%a2%a6%e8%a7%81%e8%87%aa%e5%b7%b1%e5%a4%a7%e5%ad%a6%e5%88%9a%e6%af%95%e4%b8%9a/";}i:1;a:4:{s:2:"ID";s:2:"88";s:10:"post_title";s:35:"爱好过多=没有真正的爱好?";s:7:"matches";s:1:"1";s:9:"permalink";s:136:"http://jeff.familyyu.net/2005/12/01/%e7%88%b1%e5%a5%bd%e8%bf%87%e5%a4%9a%e6%b2%a1%e6%9c%89%e7%9c%9f%e6%ad%a3%e7%9a%84%e7%88%b1%e5%a5%bd/";}i:2;a:4:{s:2:"ID";s:3:"101";s:10:"post_title";s:35:"写Blog是否有暴露狂的症状?";s:7:"matches";s:1:"1";s:9:"permalink";s:131:"http://jeff.familyyu.net/2005/08/30/%e5%86%99blog%e6%98%af%e5%90%a6%e6%9c%89%e6%9a%b4%e9%9c%b2%e7%8b%82%e7%9a%84%e7%97%87%e7%8a%b6/";}i:3;a:4:{s:2:"ID";s:3:"102";s:10:"post_title";s:13:"相信命运?";s:7:"matches";s:1:"1";s:9:"permalink";s:73:"http://jeff.familyyu.net/2005/08/30/%e7%9b%b8%e4%bf%a1%e5%91%bd%e8%bf%90/";}i:4;a:4:{s:2:"ID";s:3:"104";s:10:"post_title";s:12:"论 "坚持"";s:7:"matches";s:1:"1";s:9:"permalink";s:65:"http://jeff.familyyu.net/2005/08/27/%e8%ae%ba-%e5%9d%9a%e6%8c%81/";}i:5;a:4:{s:2:"ID";s:3:"115";s:10:"post_title";s:34:"英语口语和听力真难提高!";s:7:"matches";s:1:"1";s:9:"permalink";s:136:"http://jeff.familyyu.net/2005/07/21/%e8%8b%b1%e8%af%ad%e5%8f%a3%e8%af%ad%e5%92%8c%e5%90%ac%e5%8a%9b%e7%9c%9f%e9%9a%be%e6%8f%90%e9%ab%98/";}i:6;a:4:{s:2:"ID";s:3:"120";s:10:"post_title";s:14:"Blog or Track?";s:7:"matches";s:1:"1";s:9:"permalink";s:50:"http://jeff.familyyu.net/2005/06/23/blog-or-track/";}i:7;a:4:{s:2:"ID";s:3:"134";s:10:"post_title";s:30:"对自己人生规划的思考";s:7:"matches";s:1:"1";s:9:"permalink";s:127:"http://jeff.familyyu.net/2005/05/23/%e5%af%b9%e8%87%aa%e5%b7%b1%e4%ba%ba%e7%94%9f%e8%a7%84%e5%88%92%e7%9a%84%e6%80%9d%e8%80%83/";}i:8;a:4:{s:2:"ID";s:3:"139";s:10:"post_title";s:21:"程序代码和英语";s:7:"matches";s:1:"1";s:9:"permalink";s:100:"http://jeff.familyyu.net/2005/05/19/%e7%a8%8b%e5%ba%8f%e4%bb%a3%e7%a0%81%e5%92%8c%e8%8b%b1%e8%af%ad/";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_relation_threshold</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>6</wp:comment_id>
			<wp:comment_author><![CDATA[EVA]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2005-06-08 05:57:55</wp:comment_date>
			<wp:comment_date_gmt>2005-06-08 05:57:55</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[就是,我也不好下手!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>7</wp:comment_id>
			<wp:comment_author><![CDATA[anson]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2005-06-07 12:56:12</wp:comment_date>
			<wp:comment_date_gmt>2005-06-07 12:56:12</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[哥们，你说你天天写JAVA，叫我如何下手。。。终于可以评论了，有没英文版的？：）]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>8</wp:comment_id>
			<wp:comment_author><![CDATA[金和]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2005-06-07 06:31:51</wp:comment_date>
			<wp:comment_date_gmt>2005-06-07 06:31:51</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[很有哲理，对我一点用处都没有。人是感性的，真要做到那么理性，人活着就没有那么多意思了。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>游玩大鹏古城和南澳</title>
		<link>http://jeff.familyyu.net/2005/05/24/%e6%b8%b8%e7%8e%a9%e5%a4%a7%e9%b9%8f%e5%8f%a4%e5%9f%8e%e5%92%8c%e5%8d%97%e6%be%b3/</link>
		<pubDate>Tue, 24 May 2005 10:00:40 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang1.wordpress.com/2005/05/24/%e6%b8%b8%e7%8e%a9%e5%a4%a7%e9%b9%8f%e5%8f%a4%e5%9f%8e%e5%92%8c%e5%8d%97%e6%be%b3</guid>
		<description></description>
		<content:encoded><![CDATA[<div id="msgcns!4001C604AF3F011!128" class="bvMsg">

今天收到朋友给我发来那次5月2日去大鹏古城和南澳的照片，回想起那天去那边玩的情况。之前我们以为大鹏古城那边会很好玩，因为好像说报纸上还写了呢。没想到，过去看，除了很多的垃圾和一些历史介绍外，并没有很多的特别。：（ 。后来我们一帮人带着失望的心情就去南澳，因为听说那边的海鲜新鲜且比较便宜。没想到后来过去，觉得那边的海鲜并不便宜，而且不小心去了家服务态度很糟糕的店吃饭。
“服务员，能不能帮我们换下蝶子？”
“对不起，我很忙！”服务员回答到.
这句话是鄙人听过服务员中最牛的回答。
虽然自然风景和海鲜并不让我感到满意，但是可以跟同行的一班人一起玩，是比较开心的。因为其实人是最好的风景，不是吗？：），感谢我朋友和朋友的同事们等，至少你们让我不用在5月2日那天只是过吃饭，睡觉，看电视的生活。

</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>128</wp:post_id>
		<wp:post_date>2005-05-24 10:00:40</wp:post_date>
		<wp:post_date_gmt>2005-05-24 10:00:40</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e6%b8%b8%e7%8e%a9%e5%a4%a7%e9%b9%8f%e5%8f%a4%e5%9f%8e%e5%92%8c%e5%8d%97%e6%be%b3</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="chinese"><![CDATA[Chinese]]></category>
		<category domain="category" nicename="others"><![CDATA[Others]]></category>
		<category domain="post_tag" nicename="travel"><![CDATA[Travel]]></category>
		<wp:postmeta>
			<wp:meta_key>spaces_a43755b404d273dfcedbd14ccb4f51ab_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[http://cid-04001c604af3f011.users.api.live.net/Users(288261576051650577)/Blogs('4001C604AF3F011!102')/Entries('4001C604AF3F011!128')?authkey=X13wC75MXT0%24]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_efficient_related_posts</wp:meta_key>
			<wp:meta_value><![CDATA[a:3:{i:0;a:4:{s:2:"ID";s:2:"69";s:10:"post_title";s:12:"阳朔之行";s:7:"matches";s:1:"1";s:9:"permalink";s:73:"http://jeff.familyyu.net/2006/04/08/%e9%98%b3%e6%9c%94%e4%b9%8b%e8%a1%8c/";}i:1;a:4:{s:2:"ID";s:2:"82";s:10:"post_title";s:12:"第一次...";s:7:"matches";s:1:"1";s:9:"permalink";s:64:"http://jeff.familyyu.net/2005/12/31/%e7%ac%ac%e4%b8%80%e6%ac%a1/";}i:2;a:4:{s:2:"ID";s:3:"108";s:10:"post_title";s:20:""杀人"游戏介绍";s:7:"matches";s:1:"1";s:9:"permalink";s:91:"http://jeff.familyyu.net/2005/08/11/%e6%9d%80%e4%ba%ba%e6%b8%b8%e6%88%8f%e4%bb%8b%e7%bb%8d/";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_relation_threshold</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>2</wp:comment_id>
			<wp:comment_author><![CDATA[万兴]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2005-05-31 02:17:37</wp:comment_date>
			<wp:comment_date_gmt>2005-05-31 02:17:37</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[可能是你问到老板了。。。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>3</wp:comment_id>
			<wp:comment_author><![CDATA[anson]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2005-05-26 12:05:04</wp:comment_date>
			<wp:comment_date_gmt>2005-05-26 12:05:04</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[是真的感谢吗？南澳是澳大利亚南部吗。。：）]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>重视人还是该重视过程?</title>
		<link>http://jeff.familyyu.net/2005/06/03/%e9%87%8d%e8%a7%86%e4%ba%ba%e8%bf%98%e6%98%af%e8%af%a5%e9%87%8d%e8%a7%86%e8%bf%87%e7%a8%8b/</link>
		<pubDate>Fri, 03 Jun 2005 06:45:41 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang1.wordpress.com/2005/06/03/%e9%87%8d%e8%a7%86%e4%ba%ba%e8%bf%98%e6%98%af%e8%af%a5%e9%87%8d%e8%a7%86%e8%bf%87%e7%a8%8b</guid>
		<description></description>
		<content:encoded><![CDATA[<div id="msgcns!4001C604AF3F011!137" class="bvMsg">

<a href="http://tech.sina.com.cn/it/2005-06-02/1625625310.shtml">http://tech.sina.com.cn/it/2005-06-02/1625625310.shtml</a> Martin fowler在北京的演讲.很多人都希望说Martin fowler的这次到来能够很好的推动敏捷开发在中国的实施.我觉得目前在中国真正说挂牌说我们公司用的是敏捷开发的好像很少，很多的公司都是实施CMM。也有公司是挂CMM,而后但在内部引入TDD(测试驱动开发)等的做法.想到这里,突然觉得CMM vs ASD 有点象 EJB vs v Spring+hibernate ,一个属于所谓比较正统的,一个是来自民间的.
敏捷编程比较注重的是人,而CMM他们比较看重的是过程.就象很多大公司都希望把他们的员工培养成螺丝钉,过程都定义好了,而人过来只不过是为了配合整个过程的运作. 这或许是模仿传统产业,比如制造鞋业等。这种方法真的可行吗？回想起说印度那边的软件公司把工作任务安排到以小时来计算,我觉得很可怕,那样的话,跟机器有什么区别呢?
而在敏捷XP中,他们更推崇的是人,人是主体,而过程的存在只不过是为了更好的配合人之间的合作.我觉得自己作为一名从事IT的人员来说,我当然是更喜欢自己是做为一个主体,而并不是去配合过程的。 其实我觉得《人件》说的不就是要以人为本的意思吗？

其中有谈到说程序员经常跳槽的,我摘录在此：

<span style="color: #cc0000;"> 原仓周： </span>

<span style="color: #cc0000;">我国多是中小企业采用的软件多是定制，所以敏捷式开发的确很适合中国。敏捷开发的方法是以人为中心，对人的能力没有一个准确的评价方法，中小企业人员流动非常大，如果把过程放在第二位，当人员发生变动，如何用其他人来顶替？

</span><span style="color: #cc0000;"> MartinFowler： </span>

<span style="color: #cc0000;"> </span><span style="color: #cc0000;"> 我在西方也见到过很多类似的问题，因为敏捷开发是以人为主的过程，这个过程本身就有问题，你怎么找到合适的人，怎么留住合适的人做这样的事。有一个最基本的问题就是问自己为什么这些做得非常有效的人要离开这个地方呢？无论使用什么样的方法和技术，作为一个企业来说如果不能留住人，无论如何是不能成功的。这个过程中最主要的一点不是找到什么样的人，而是找到人员离开的原因，把人员留住才是真正有效的方法。这种现象背后肯定有很多具体原因，而这个原因每个具体项目都不同，所以很难做出很普遍的回答。我经常遇到一个问题，我发现在这个过程中如果把一个人作为随时可替代的单元，通常会加剧人员流动的现状。
</span><span style="color: #cc0000;">
<span style="color: #000000;">讨论贴地址: (<a href="http://forum.javaeye.com/viewtopic.php?t=13534">http://forum.javaeye.com/viewtopic.php?t=13534</a>)</span></span>

<span style="color: #cc0000;"> </span></div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>129</wp:post_id>
		<wp:post_date>2005-06-03 06:45:41</wp:post_date>
		<wp:post_date_gmt>2005-06-03 06:45:41</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e9%87%8d%e8%a7%86%e4%ba%ba%e8%bf%98%e6%98%af%e8%af%a5%e9%87%8d%e8%a7%86%e8%bf%87%e7%a8%8b</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="chinese"><![CDATA[Chinese]]></category>
		<category domain="category" nicename="thoughts"><![CDATA[Thoughts]]></category>
		<wp:postmeta>
			<wp:meta_key>spaces_a43755b404d273dfcedbd14ccb4f51ab_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[http://cid-04001c604af3f011.users.api.live.net/Users(288261576051650577)/Blogs('4001C604AF3F011!102')/Entries('4001C604AF3F011!137')?authkey=X13wC75MXT0%24]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>对DomainObject的思考</title>
		<link>http://jeff.familyyu.net/2005/06/02/%e5%af%b9domainobject%e7%9a%84%e6%80%9d%e8%80%83/</link>
		<pubDate>Thu, 02 Jun 2005 11:09:01 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang1.wordpress.com/2005/06/02/%e5%af%b9domainobject%e7%9a%84%e6%80%9d%e8%80%83</guid>
		<description></description>
		<content:encoded><![CDATA[<div id="msgcns!4001C604AF3F011!136" class="bvMsg"><p>   今天重新在javaeye论坛上看了DomainObject的讨论(<a href="http://forum.javaeye.com/viewtopic.php?t=11712">http://forum.javaeye.com/viewtopic.php?t=11712</a>),并且重新翻阅了martin fowler的关于贫血DomainObject(<a href="http://www.martinfowler.com/bliki/AnemicDomainModel.html">http://www.martinfowler.com/bliki/AnemicDomainModel.html</a>)的文章,再结合当时自己所做项目时,感觉自己当时很多时候写的都是贫血的DomainObject，也就是对象里面只有简单的get/set方法,而没有这个对象的一些行为.而很多时候对业务逻辑的实现放在service层来实现,(因为你service层跟Dao打交道,那么对业务的实现好像感觉比较直接些,特别是有些时候需要操作数据库)其实,我的这种思想是不对的,这么一做,那么我们的对象他的功能其实只是个数据保存器.<br />  摘自eric对于service和domain model这两层的一些描述:<br />   service layer :Defines the jobs the software is supposed to do and directs the expressive domain objects to work out problems. The tasks this layer is responsible for are meaningful to the business or necessary for interaction with the application layers of other systems. This layer is kept thin. It does not contain business rules or knowledge, but only coordinates tasks and delegates work to collaborations of domain objects in the next layer down. It does not have state reflecting the business situation, but it can have state that reflects the progress of a task for the user or the program.</p> <p><em>    </em>service层主要负责让其他层调有,比如页面表示层。这一层应该尽量薄,这一层不应该控制业务逻辑规则.<br />  domain layer:Responsible for representing concepts of the business, information about the business situation, and business rules. State that reflects the business situation is controlled and used here, even though the technical details of storing it are delegated to the infrastructure. This layer is the heart of business software.<br /><em> <br /> </em>在domain这一层应该也要实现业务的规则，逻辑，而并不只是简单的数据保存器。但是比如说这个业务规则要设计到修改数据库的时候,那么这个时候要分派给其他层,我们要保证这个domain不对Dao等存在依赖性，以便更好的复用.<br />  <br />  总得来说,我是比较同意Robbin的第二种做法.(javaeye上的那篇文章),其实我觉得如果有时候业务规则只是简单的不需要涉及到其他比如dao层的操作,那么我们经常就会放在domain object里面，但是有时候比如这个业务规则本身就比较复杂时,又或者比较经常操作dao的时候,我们可能会觉得放在service这层会比较方便,比较好操作.<br />  在这个问题上,Rod Johnson提出原则是“case by case”，可重用度高的，和domain object状态密切关联的放在domain object中，可重用度低的，和domain object状态没有密切关联的放在service中。<font color="#000000"> Robbin提出的原则是：看业务方法是否显式的依赖持久化。我觉得比较支持前者.<br />  <br />  在这个讨论中,pareth提出了实体对象和实体控制对象的说法,而且这个实体控制对象可以依赖Dao，我个人觉得这样好像有点象service层了？？？.....我不大支持这种做法.......<br />   更详细的看论坛的帖子.......</font><font color="#000033"><br /> </font></p></div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>130</wp:post_id>
		<wp:post_date>2005-06-02 11:09:01</wp:post_date>
		<wp:post_date_gmt>2005-06-02 11:09:01</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%af%b9domainobject%e7%9a%84%e6%80%9d%e8%80%83</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="java"><![CDATA[Java]]></category>
		<wp:postmeta>
			<wp:meta_key>spaces_a43755b404d273dfcedbd14ccb4f51ab_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[http://cid-04001c604af3f011.users.api.live.net/Users(288261576051650577)/Blogs('4001C604AF3F011!102')/Entries('4001C604AF3F011!136')?authkey=X13wC75MXT0%24]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>struts+spring+hibernate架构的体会</title>
		<link>http://jeff.familyyu.net/2005/06/02/strutsspringhibernate%e6%9e%b6%e6%9e%84%e7%9a%84%e4%bd%93%e4%bc%9a/</link>
		<pubDate>Thu, 02 Jun 2005 03:23:09 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang1.wordpress.com/2005/06/02/strutsspringhibernate%e6%9e%b6%e6%9e%84%e7%9a%84%e4%bd%93%e4%bc%9a</guid>
		<description></description>
		<content:encoded><![CDATA[<div id="msgcns!4001C604AF3F011!135" class="bvMsg"><p>  去年用这个架构也开发了两个项目,当然,当时只是以一个Developer的身份,而并不是以 PM or Developer Leader的身份去开发,所以对于一些细节的,没有很好的理解,或者对于一些具体的,因为不是我去参与解决,所以就不大清楚。记得当时带我的项目经理说,准备在项目结束后，写篇文章，名字叫用OpenSource的解决方案,不知道他写了没。<img height="19" src="http://spaces.msn.com/mmm2005-05-13_18.25/RTE/emoticons/smile_regular.gif" width="19" /> <br />  我们以spring做为中间层,struts来管理表示层,而hibernate主要负责orm这块,跟数据库打交道.跟数据库操作的方式是以Dao的模式,而hibernate做为Dao的实现。<br />  <br /> spring主要负责Bean的管理,负责i18n的处理,负责事务的管理.<br />  1）个人感觉spring里面的异常处理机制挺不错的。按照平常的异常处理,我们可能会创建很多个异常类,来针对不同的异常类型，比如不同的业务类型会存在不同的业务异常。但在spring中不是这么处理，他统一建立个业务异常类(这里我们是用CheckedException),然后不同的code,代表不同的业务异常类型，这样省去很多异常类.<br />  2）spring中的事务管理,我们采用的是声明性事务管理.(spring内部好像是用动态代理来实现事务管理的机制??)<br />  3）spring对bean的管理,所有的service必须有接口和实现类,而这个service的创建是有spring容器帮我们去创建的.<br />  4）其中还用到了其他一些功能,比如定时服务,是用quartz........<br /> <br />  hibernate就主要负责操作表,把表中的记录转成业务逻辑层中的对象,把业务层中的对象存入数据库表中.<br />  而struts主要是负责页面显示，和从页面中提取数据,传到业务层.<br />  这里面的关系是:   struts &lt;------&gt; spring &lt;--------&gt; hibernate <br />  说下struts:<br />   1）在struts中,对于异常的处理,我们是有个全局的处理异常类。因为我们之前会定义一个通用的业务异常类,比如BusinessException,那么,我们在struts中进行捕捉这个异常,而后转到统一的出错页面.<br />   2）struts中的actionForm，里面的类型我们一般都是用string去定义,(不知道当时是不是为了偷懒),不过发现就是你如果actionForm中类型用Date型，会有错误。所以我们当时处理Date型的数据,也是先定义为String，然后根据统一格式转成Date类型.一般的,对于每个form，我们都会定义一个actionForm<br />  3）struts中的action，他一般负责从actionForm里面或者从request里面获取到客户输入的值,然后转成model(业务对象),然后调用spring中所提供的业务方法,千万不要在action里面涉及业务逻辑对象,action可以看作是mini-servlet，他只是负责转向,不应该牵涉到业务逻辑。<br />  在spring这一层中,最好不要牵涉到直接去操作数据库,操作数据库应该都让dao去完成,而spring所要做的只是操作dao,其实,这样你就会发觉service(也就是spring管的)这一层很薄,其实这样是对的,我们要让service这一层尽量薄,因为我们关键是要在这一层管理他的事务。</p></div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>131</wp:post_id>
		<wp:post_date>2005-06-02 03:23:09</wp:post_date>
		<wp:post_date_gmt>2005-06-02 03:23:09</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>strutsspringhibernate%e6%9e%b6%e6%9e%84%e7%9a%84%e4%bd%93%e4%bc%9a</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="java"><![CDATA[Java]]></category>
		<wp:postmeta>
			<wp:meta_key>spaces_a43755b404d273dfcedbd14ccb4f51ab_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[http://cid-04001c604af3f011.users.api.live.net/Users(288261576051650577)/Blogs('4001C604AF3F011!102')/Entries('4001C604AF3F011!135')?authkey=X13wC75MXT0%24]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>对面向接口编程的思考</title>
		<link>http://jeff.familyyu.net/2005/06/01/%e5%af%b9%e9%9d%a2%e5%90%91%e6%8e%a5%e5%8f%a3%e7%bc%96%e7%a8%8b%e7%9a%84%e6%80%9d%e8%80%83/</link>
		<pubDate>Wed, 01 Jun 2005 05:41:04 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang1.wordpress.com/2005/06/01/%e5%af%b9%e9%9d%a2%e5%90%91%e6%8e%a5%e5%8f%a3%e7%bc%96%e7%a8%8b%e7%9a%84%e6%80%9d%e8%80%83</guid>
		<description></description>
		<content:encoded><![CDATA[<div id="msgcns!4001C604AF3F011!134" class="bvMsg"><p>     还记得在刚开始学习java的时候，对接口这个概念很搞不懂。为什么要有这个接口呢？接口到底有什么用？还有书里面经常提到的面向接口编程到底是怎么一回事儿呢？<br />    “在java的世界里，我们要从两方面来看待，一个是接口类，一个是实现类”，这是我刚用java做实际项目时，带我的项目经理跟我这么说过。<br />    那么到底接口和面向接口编程时怎么回事儿呢？先来看下面2段代码：<br />     ArrayList theList = new ArrayList() ;(1)<br />     theList.add(&quot;aa&quot;);<br />     theList.add(&quot;bb&quot;);<br /><br />     List theList = new ArrayList() ; (2)<br />     theList.add(&quot;aa&quot;);<br />     theList.add(&quot;bb&quot;);<br />   <br />  假设有这2段代码.(只是为了举例,没有实际的应用意义)他们之间的差别也就是第(1)和第(2)的差别.这时候你希望说对于theList里面的对象顺序和你放进去的顺序一样,因为ArrayList的实现并没有这个功能。而LinkedList有这个功能。那么，我们需要把第(1)行的代码改成LinkedList theList = new LinkedList(); 而对于第(2)我们只需要改成这样: List theList = new LinkedList(); 只需要改右半部分.<br />  让我们再来看他们之间的不同。List是一个接口(Interface)类,而ArrayList是个List的实现(Implementor)类。那么，对于第1段代码我们叫做面向实现类编程,因为ArrayList是个实现类,而我们的theList变量是针对ArrayList实现类，所以叫面向实现编程;而在第2种代码中,因为我们的变量theList是针对List这个接口,所以我们是针对接口来编程的.<br /><br />  那么,面向接口编程到底有什么好处呢？或许你觉得从上面那个简单的例子看不出来。因为你改变右边半行和改变一行,差别不大。我们再来看个例子，比如你的Dao层中有这么个类UserDao，专门负责操作数据库中T_USER表的数据.我们有两种做法，一种是直接写UserDao实现类。然后直接针对UserDao操作;第2种做法是写个UserDao接口类,再写一个UserDaoImpl实现类,然后编程的时候针对UserDao接口编程.<br />     1. UserDao dao = new UserDao();<br />     2. UserDao dao = new UserDaoImpl();<br />假设我们刚开始的时候,数据是Oracle的,那么可能现在客户觉得oracle对他来说太昂贵了,比方说就一个小论坛,还要去买oracle那么贵得数据库，太不划算.客户可能希望说把数据从oracle转到open source的mysql，那么因为换了数据库，你可能得需要改动跟数据库打交道的代码,也就是要改动UserDao的代码.如果我们用第2种的写法的话，我们只需要写个UserDaoMysql的实现UserDao的接口.<br />因为在如今IOC盛行的年代.我们一般不直接在我们的java代码里面直接去写UserDao dao = new UserDaoImpl();而是通过写配置文件,让容器注入的方式，比如象spring里面的配置文件是这么写.<br />  &lt;bean name=&quot;......UserDao&quot; class=&quot;.........UserDaoImpl&quot; /&gt;来实现,那么我们现在只需要把UserDaoImpl改成UserDaoMysql就可以实现数据库的迁移,而不用去改变我们之前写的代码,达到了代码的复用。<br />   <br />   我现在觉得接口就类似sun提出来的规范,至于实现呢？各个厂商有各个厂商的实现，我不管你。但是你一定要符合我的规范。就比如说sun提出Servlet2.3的规范,那么Tomcat和Jetty这两个服务器他们对Servlet2.3的规范实现不一样。<br /></p></div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>132</wp:post_id>
		<wp:post_date>2005-06-01 05:41:04</wp:post_date>
		<wp:post_date_gmt>2005-06-01 05:41:04</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%af%b9%e9%9d%a2%e5%90%91%e6%8e%a5%e5%8f%a3%e7%bc%96%e7%a8%8b%e7%9a%84%e6%80%9d%e8%80%83</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="java"><![CDATA[Java]]></category>
		<wp:postmeta>
			<wp:meta_key>spaces_a43755b404d273dfcedbd14ccb4f51ab_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[http://cid-04001c604af3f011.users.api.live.net/Users(288261576051650577)/Blogs('4001C604AF3F011!102')/Entries('4001C604AF3F011!134')?authkey=X13wC75MXT0%24]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>关于null值的判断和NPE(NullPoniterException)</title>
		<link>http://jeff.familyyu.net/2005/05/30/%e5%85%b3%e4%ba%8enull%e5%80%bc%e7%9a%84%e5%88%a4%e6%96%ad%e5%92%8cnpenullponiterexception/</link>
		<pubDate>Mon, 30 May 2005 02:31:24 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang1.wordpress.com/2005/05/30/%e5%85%b3%e4%ba%8enull%e5%80%bc%e7%9a%84%e5%88%a4%e6%96%ad%e5%92%8cnpenullponiterexception</guid>
		<description></description>
		<content:encoded><![CDATA[<div id="msgcns!4001C604AF3F011!130" class="bvMsg"><p>  早上来的时候,看到这篇文章，是关于说在方法体内对空值的判断(<a href="http://jroller.com/page/thuss/20050507#tired_of_checking_for_null">http://jroller.com/page/thuss/20050507#tired_of_checking_for_null</a>)，觉得挺有意思的。我记得在看《 effectvie java 》时，说最好在每个方法里面都对传过来的参数值进行空值等的判断。按理说，最好是该怎么做，但有时候觉得太麻烦了，特别是参数多的时候，很烦。 在那篇文章的评论里，有个人说建立个Check类，然后判断都用这个判断。这是不错，但是好像并没有解决根本问题，因为就算你建立了个Check类，我还是要调用，我还是觉得烦。<br />  这篇blog的作者提出的建议挺有意思，就是说，比如在定义函数的参数的时候这么写：public dealBusiness(required String aString) ,就说增加个required关键字，用来代表说aString不能为null.这个思想其实我觉得很好，因为对空值等的判断这是为了系统的需要才这么做的，我们或许应该交给容器去判断，我们只需要告诉他说不能为空。这样，我们就更能集中我们的注意力去思考我们的业务规则等。不过，这个思想虽然好，但是这么实现感觉会怪怪的。<br />   自从jdk1.5出来后，一个比较新的东西annotation programe 也已经集成在jdk里面了，那么有个读者就说，或许我们可以在annotation里面增加个类似notnull的标志，那么容器就帮我们去判断。我觉得这个建议确实很不错(但是好像annotation还不支持local variable的annotation ??)。<br />  关于这个问题，在sun的网站上，有个对此提出了调查等，讨论挺有意思的，地址是：<a href="http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=5030232">http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=5030232</a></p></div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>133</wp:post_id>
		<wp:post_date>2005-05-30 02:31:24</wp:post_date>
		<wp:post_date_gmt>2005-05-30 02:31:24</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%85%b3%e4%ba%8enull%e5%80%bc%e7%9a%84%e5%88%a4%e6%96%ad%e5%92%8cnpenullponiterexception</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="java"><![CDATA[Java]]></category>
		<wp:postmeta>
			<wp:meta_key>spaces_a43755b404d273dfcedbd14ccb4f51ab_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[http://cid-04001c604af3f011.users.api.live.net/Users(288261576051650577)/Blogs('4001C604AF3F011!102')/Entries('4001C604AF3F011!130')?authkey=X13wC75MXT0%24]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>4</wp:comment_id>
			<wp:comment_author><![CDATA[大力]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2005-06-01 01:18:59</wp:comment_date>
			<wp:comment_date_gmt>2005-06-01 01:18:59</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[hehe.....不错不错。。。小样的,java达人]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>5</wp:comment_id>
			<wp:comment_author><![CDATA[anson]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2005-05-30 12:38:14</wp:comment_date>
			<wp:comment_date_gmt>2005-05-30 12:38:14</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[解释得蛮清楚的嘛。。。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>对自己人生规划的思考</title>
		<link>http://jeff.familyyu.net/2005/05/23/%e5%af%b9%e8%87%aa%e5%b7%b1%e4%ba%ba%e7%94%9f%e8%a7%84%e5%88%92%e7%9a%84%e6%80%9d%e8%80%83/</link>
		<pubDate>Mon, 23 May 2005 09:46:35 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang1.wordpress.com/2005/05/23/%e5%af%b9%e8%87%aa%e5%b7%b1%e4%ba%ba%e7%94%9f%e8%a7%84%e5%88%92%e7%9a%84%e6%80%9d%e8%80%83</guid>
		<description></description>
		<content:encoded><![CDATA[<div id="msgcns!4001C604AF3F011!119" class="bvMsg">

一直以来，都很担心去思考这个问题，但却又经常去思考这个问题。还记得当时在初中的时候，希望自己能当个老师。可是后来到高中，却非常不想当老师，以致于大学毕业后，我放弃了当老师的选择。很多人问过我说“你的目标是什么？自己的理想是什么？”，说真的，我没有很崇高很宏伟的目标，只是想以后赚很多的钱，让自己和自己的家人生活的好一些，仅此而已。可能对于很多有志青年来说，我的这个所谓的目标看上去很肤浅，但是，这确实是我工作的主要动力。
因为希望自己以后能赚很多钱，所以我现在要开始认真学习技术。可能有人觉得我那么认真学技术是因为我兴趣。当然了，这是后话，当我在大学刚开始学计算机的时候，说实话，我也不大兴趣的，为什么后来会有兴趣呢，因为听说学好计算机会赚更多的钱，所以我花了很多时间和精力进去，所以，我也渐渐的有了兴趣了。所以，终究到底，还是钱指引着我的发展。
现在有时候无聊的时候会去想说对自己人生要怎么规划，每次想起来，都忧心肿肿。
还记得，我上大学的时候，大一，大二经常谈自己以后要怎么发展。但是大三，大四就很少谈了。不知道是不是感受到了现实的残酷，还是说自己已经麻木，或者这些都是成熟的标志。现在，有时候别人问我说，你以后想做什么？以后的路想怎么走？
我不知道，我也不想去考虑那么远的事情，我只知道这一两年我大概会做什么。。。。
记得在看一期《对话》节目中，有个嘉宾这么说“在你人生的旅途当中，有时候能成就你的未必是你事先所计划好的。”，我觉得这句话真的很对！

</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>134</wp:post_id>
		<wp:post_date>2005-05-23 09:46:35</wp:post_date>
		<wp:post_date_gmt>2005-05-23 09:46:35</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%af%b9%e8%87%aa%e5%b7%b1%e4%ba%ba%e7%94%9f%e8%a7%84%e5%88%92%e7%9a%84%e6%80%9d%e8%80%83</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="chinese"><![CDATA[Chinese]]></category>
		<category domain="category" nicename="thoughts"><![CDATA[Thoughts]]></category>
		<category domain="post_tag" nicename="%e8%87%aa%e8%a8%80%e8%87%aa%e8%af%ad"><![CDATA[自言自语]]></category>
		<wp:postmeta>
			<wp:meta_key>spaces_a43755b404d273dfcedbd14ccb4f51ab_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[http://cid-04001c604af3f011.users.api.live.net/Users(288261576051650577)/Blogs('4001C604AF3F011!102')/Entries('4001C604AF3F011!119')?authkey=X13wC75MXT0%24]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_efficient_related_posts</wp:meta_key>
			<wp:meta_value><![CDATA[a:9:{i:0;a:4:{s:2:"ID";s:2:"41";s:10:"post_title";s:27:"梦见自己大学刚毕业";s:7:"matches";s:1:"1";s:9:"permalink";s:118:"http://jeff.familyyu.net/2006/09/02/%e6%a2%a6%e8%a7%81%e8%87%aa%e5%b7%b1%e5%a4%a7%e5%ad%a6%e5%88%9a%e6%af%95%e4%b8%9a/";}i:1;a:4:{s:2:"ID";s:2:"88";s:10:"post_title";s:35:"爱好过多=没有真正的爱好?";s:7:"matches";s:1:"1";s:9:"permalink";s:136:"http://jeff.familyyu.net/2005/12/01/%e7%88%b1%e5%a5%bd%e8%bf%87%e5%a4%9a%e6%b2%a1%e6%9c%89%e7%9c%9f%e6%ad%a3%e7%9a%84%e7%88%b1%e5%a5%bd/";}i:2;a:4:{s:2:"ID";s:3:"101";s:10:"post_title";s:35:"写Blog是否有暴露狂的症状?";s:7:"matches";s:1:"1";s:9:"permalink";s:131:"http://jeff.familyyu.net/2005/08/30/%e5%86%99blog%e6%98%af%e5%90%a6%e6%9c%89%e6%9a%b4%e9%9c%b2%e7%8b%82%e7%9a%84%e7%97%87%e7%8a%b6/";}i:3;a:4:{s:2:"ID";s:3:"102";s:10:"post_title";s:13:"相信命运?";s:7:"matches";s:1:"1";s:9:"permalink";s:73:"http://jeff.familyyu.net/2005/08/30/%e7%9b%b8%e4%bf%a1%e5%91%bd%e8%bf%90/";}i:4;a:4:{s:2:"ID";s:3:"104";s:10:"post_title";s:12:"论 "坚持"";s:7:"matches";s:1:"1";s:9:"permalink";s:65:"http://jeff.familyyu.net/2005/08/27/%e8%ae%ba-%e5%9d%9a%e6%8c%81/";}i:5;a:4:{s:2:"ID";s:3:"115";s:10:"post_title";s:34:"英语口语和听力真难提高!";s:7:"matches";s:1:"1";s:9:"permalink";s:136:"http://jeff.familyyu.net/2005/07/21/%e8%8b%b1%e8%af%ad%e5%8f%a3%e8%af%ad%e5%92%8c%e5%90%ac%e5%8a%9b%e7%9c%9f%e9%9a%be%e6%8f%90%e9%ab%98/";}i:6;a:4:{s:2:"ID";s:3:"120";s:10:"post_title";s:14:"Blog or Track?";s:7:"matches";s:1:"1";s:9:"permalink";s:50:"http://jeff.familyyu.net/2005/06/23/blog-or-track/";}i:7;a:4:{s:2:"ID";s:3:"127";s:10:"post_title";s:25:"《你的灯亮着吗?》";s:7:"matches";s:1:"1";s:9:"permalink";s:109:"http://jeff.familyyu.net/2005/06/07/%e3%80%8a%e4%bd%a0%e7%9a%84%e7%81%af%e4%ba%ae%e7%9d%80%e5%90%97%e3%80%8b/";}i:8;a:4:{s:2:"ID";s:3:"139";s:10:"post_title";s:21:"程序代码和英语";s:7:"matches";s:1:"1";s:9:"permalink";s:100:"http://jeff.familyyu.net/2005/05/19/%e7%a8%8b%e5%ba%8f%e4%bb%a3%e7%a0%81%e5%92%8c%e8%8b%b1%e8%af%ad/";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_relation_threshold</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>关于MSN Spaces</title>
		<link>http://jeff.familyyu.net/2005/05/20/%e5%85%b3%e4%ba%8emsn-spaces/</link>
		<pubDate>Fri, 20 May 2005 04:56:30 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang1.wordpress.com/2005/05/20/%e5%85%b3%e4%ba%8emsn-spaces</guid>
		<description></description>
		<content:encoded><![CDATA[<div id="msgcns!4001C604AF3F011!117" class="bvMsg">

因为之前一般都是在blogcn和blogdriver上看和写Blog,但是最近才留意到msn spaces也有blog空间，我知道后，马上就从刚转移不久的blogdriver上的新家再次转移到msn spaces上来,因为我一般都会开msn，那么可以选择msn跟你空间的rss阅读器结合起来，那么如果你的好友也是用msn spaces的blog的话，他blog一更新我就能马上知道。要以前的话，我一般是用feeddemon等rss 阅读器来读取.但是现在只需要开个msn就能和好友聊天也能知道好友的blog，何乐而不为呢？虽然我不大喜欢microsoft ，但是我觉得开这个msn spaces之后，能推动更多人写blog，同时，其他blog provider也将面临一个挑战，至少，我转移了阵地

</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>135</wp:post_id>
		<wp:post_date>2005-05-20 04:56:30</wp:post_date>
		<wp:post_date_gmt>2005-05-20 04:56:30</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%85%b3%e4%ba%8emsn-spaces</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="chinese"><![CDATA[Chinese]]></category>
		<category domain="post_tag" nicename="msn"><![CDATA[MSN]]></category>
		<category domain="category" nicename="thoughts"><![CDATA[Thoughts]]></category>
		<wp:postmeta>
			<wp:meta_key>spaces_a43755b404d273dfcedbd14ccb4f51ab_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[http://cid-04001c604af3f011.users.api.live.net/Users(288261576051650577)/Blogs('4001C604AF3F011!102')/Entries('4001C604AF3F011!117')?authkey=X13wC75MXT0%24]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_efficient_related_posts</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{i:0;a:4:{s:2:"ID";s:2:"63";s:10:"post_title";s:15:"MSN@china sucks";s:7:"matches";s:1:"1";s:9:"permalink";s:51:"http://jeff.familyyu.net/2006/05/11/msnchina-sucks/";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_relation_threshold</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Web Application</title>
		<link>http://jeff.familyyu.net/2005/05/19/web-application/</link>
		<pubDate>Thu, 19 May 2005 10:28:10 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang1.wordpress.com/2005/05/19/web-application</guid>
		<description></description>
		<content:encoded><![CDATA[<div id="msgcns!4001C604AF3F011!114" class="bvMsg"><p>Web Application 这里指的是有Java环境的Container ,小型的如Tomcat ,Jetty ，大的比如Weblogic,JBoss,Websphere等.这边要关注的是WEB-INF/这个文件夹,我们用普通的url方式是访问不到里面的文件,但可以通过container来访问,所以里面可以放配置文件和我们要用到的类.那么container的装载顺序是先装载WEB-INF/classes/的目录，而后在装载WEB-INF/lib/.</p> <p>A web application is a collection of servlets, html pages, classes, and other<br />resources that make up a complete application on a web server. The web application<br />can be bundled and run on multiple containers from multiple vendors.<br />.................<br /><br />具体请参考Servlet_2.3_specification第9章 Web Application Chapter</p></div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>136</wp:post_id>
		<wp:post_date>2005-05-19 10:28:10</wp:post_date>
		<wp:post_date_gmt>2005-05-19 10:28:10</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>web-application</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="java"><![CDATA[Java]]></category>
		<wp:postmeta>
			<wp:meta_key>spaces_a43755b404d273dfcedbd14ccb4f51ab_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[http://cid-04001c604af3f011.users.api.live.net/Users(288261576051650577)/Blogs('4001C604AF3F011!102')/Entries('4001C604AF3F011!114')?authkey=X13wC75MXT0%24]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>对重构的思考</title>
		<link>http://jeff.familyyu.net/2005/05/19/%e5%af%b9%e9%87%8d%e6%9e%84%e7%9a%84%e6%80%9d%e8%80%83/</link>
		<pubDate>Thu, 19 May 2005 05:21:36 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang1.wordpress.com/2005/05/19/%e5%af%b9%e9%87%8d%e6%9e%84%e7%9a%84%e6%80%9d%e8%80%83</guid>
		<description></description>
		<content:encoded><![CDATA[<div id="msgcns!4001C604AF3F011!110" class="bvMsg"><p>《重构》是一本非常畅销的书,kent beck曾经对于这本书是这么推荐的&quot;get it ,learn it , use it &quot;!<br />可以说，我们每时每刻都在重构,只是有时候是进行重构的步伐问题。<br />  有时候,项目组会特地抽取一段时间来进行大重构,我是比较不赞同这个做法,特别是在靠近DeadLine的时候，因为毕竟你通过重构既不会增加功能，也不会提高速度（除非你重构算法）.他只是会增加代码的优雅和可读性.<br /> 其实，重构应该是每天都做的，但是一般是以小步伐来做的。那么，我们在每天写代码的时候怎么清楚自己需要重构呢？以下是kent beck and martin fowler告诉我们一些需要重构的前兆:(我摘取在这边，也是让自己对需要重构的代码更敏感，更好的理解When to refactor )<br /><br />The outline is :<br /><br />3.1 Duplicated Code（重复的代码）<br />3.2 Long Method（过长函数）<br />3.3 Large Class（过大类）<br />3.4 Long Parameter List（过长参数列）<br />3.5 Divergent Change（发散式变化）<br />3.6 Shotgun Surgery（霰弹式修改）<br />3.7 Feature Envy（依恋情结）<br />3.8 Data Clumps（数据泥团）<br />3.9 Primitive Obsession（基本型别偏执）<br />3.10 Switch Statements（switch惊悚现身）<br />3.11 Parallel Inheritance Hierarchies（平行继承体系）<br />3.12 Lazy Class（冗赘类）<br />3.13 Speculative Generality（夸夸其谈未来性）--也就是太多的继承关系--over desgin<br />3.14 Temporary Field（令人迷惑的暂时值域）<br />3.15 Message Chains（过度耦合的消息链）<br />3.16 Middle Man（中间转手人）<br />3.17 Inappropriate Intimacy（狎昵关系）<br />3.18 Alternative Classes with Different Interfaces（异曲同功的类）<br />3.19 Incomplete Library Class（不完美的程序库类）<br />3.20 Data Class（纯稚的数据类）<br />3.21 Refused Bequest（被拒绝的遗赠）<br />3.22 Comments（过多的注释）<br /><br /><br />-------以上outline摘自:http://www.matrix.org.cn/blog/martin/archives/001115.html#more</p></div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>137</wp:post_id>
		<wp:post_date>2005-05-19 05:21:36</wp:post_date>
		<wp:post_date_gmt>2005-05-19 05:21:36</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%af%b9%e9%87%8d%e6%9e%84%e7%9a%84%e6%80%9d%e8%80%83</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="java"><![CDATA[Java]]></category>
		<wp:postmeta>
			<wp:meta_key>spaces_a43755b404d273dfcedbd14ccb4f51ab_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[http://cid-04001c604af3f011.users.api.live.net/Users(288261576051650577)/Blogs('4001C604AF3F011!102')/Entries('4001C604AF3F011!110')?authkey=X13wC75MXT0%24]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>重构条件判断语句</title>
		<link>http://jeff.familyyu.net/2005/05/19/%e9%87%8d%e6%9e%84%e6%9d%a1%e4%bb%b6%e5%88%a4%e6%96%ad%e8%af%ad%e5%8f%a5/</link>
		<pubDate>Thu, 19 May 2005 05:20:48 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang1.wordpress.com/2005/05/19/%e9%87%8d%e6%9e%84%e6%9d%a1%e4%bb%b6%e5%88%a4%e6%96%ad%e8%af%ad%e5%8f%a5</guid>
		<description></description>
		<content:encoded><![CDATA[<div id="msgcns!4001C604AF3F011!109" class="bvMsg"><p>Martin fowler在《重构》书中提到到当你碰到一系列的条件判断语句或者switch语句的时候，你应该用多态来重构它，但是有些情况是不能这样解决的。比如看下面一段代码：<br /><br />String result = null ;<br />if ( code == 1 )<br />     result = &quot;code1&quot; ;<br />else if (code ==  2 )<br />     result = &quot;code2&quot; ;<br />else if ....<br /><br />那么，当碰到这种情况的时候，（因为我个人对一系列的if ...else if .....else if ....或者swith语句可以说是非常的厌恶），我就先用一个Map来重构.<br /><br />static &#123;<br />   Map configMap = new HashMap() ;<br />   configMap.put(&quot;1&quot;,&quot;code1&quot;);<br />   configMap.put(&quot;2&quot;,&quot;code2&quot;);<br />&#125;</p> <p>那么，如果要为了以后更好的扩展和不改动代码的话，就把这些值放入xml的配置文件中，类似下面:</p> <p>&lt;entry key=&quot;1&quot; value=&quot;code1&quot; /&gt;<br />&lt;entry key=&quot;2&quot; value=&quot;code2&quot; /&gt;<br />........</p></div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>138</wp:post_id>
		<wp:post_date>2005-05-19 05:20:48</wp:post_date>
		<wp:post_date_gmt>2005-05-19 05:20:48</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e9%87%8d%e6%9e%84%e6%9d%a1%e4%bb%b6%e5%88%a4%e6%96%ad%e8%af%ad%e5%8f%a5</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="java"><![CDATA[Java]]></category>
		<wp:postmeta>
			<wp:meta_key>spaces_a43755b404d273dfcedbd14ccb4f51ab_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[http://cid-04001c604af3f011.users.api.live.net/Users(288261576051650577)/Blogs('4001C604AF3F011!102')/Entries('4001C604AF3F011!109')?authkey=X13wC75MXT0%24]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Google已成为众牛人想去的公司.</title>
		<link>http://jeff.familyyu.net/2005/09/14/google%e5%b7%b2%e6%88%90%e4%b8%ba%e4%bc%97%e7%89%9b%e4%ba%ba%e6%83%b3%e5%8e%bb%e7%9a%84%e5%85%ac%e5%8f%b8/</link>
		<pubDate>Wed, 14 Sep 2005 16:03:59 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang1.wordpress.com/2005/09/14/google%e5%b7%b2%e6%88%90%e4%b8%ba%e4%bc%97%e7%89%9b%e4%ba%ba%e6%83%b3%e5%8e%bb%e7%9a%84%e5%85%ac%e5%8f%b8</guid>
		<description></description>
		<content:encoded><![CDATA[<div id="msgcns!4001C604AF3F011!240" class="bvMsg">
<div>这段时间,Google是越来越猛,确切的说,应该是自从Google上市后，就制造了Google的神话，再随着李开复离开微软加入Google的消息,以至于说当微软的员工辞职的时候，他们的同事就会问说,是不是你收到Google的Offer了？？，还有个消息报道说,Google里面的管理和对员工个性的发展大概只有在以前的贝尔试验室里面才有,据说Google对里面的员工，给100美元，这个钱用于他自己对工作位置的个性设计。。
今天看到一个很搞笑的新闻，说微软发mail给Eric Raymond说，希望他来微软工作？Raymond何许人也？他是Open Source的Guru, 这 10 年来不遗余力地鼓吹 Open Source、推动 Netscape 开源、揭露 M$ 的万圣节备忘录...具体的地址是: <a href="http://www.pcworld.idg.com.au/index.php/id;1056209188;fp;2;fpid;1">http://www.pcworld.idg.com.au/index.php/id;1056209188;fp;2;fpid;1</a>
里面有段Raymond的回复很搞笑：
<span style="color: #ff0000;">"What were you going to do with the rest of your afternoon, offer jobs to Richard Stallman and Linus Torvalds? Or were you going to stick to something easier, like talking Pope Benedict into presiding at a Satanist orgy?" he wrote. "I've in fact been something pretty close to your company's worst nightmare since about 1997."
</span><span style="color: #000000;"> 里面还说，他最近在跟Google的公司协商,如果可以的话，他愿意在Google里面工作,照这么看来，在美国人当中，Google已经远超微软的魅力了...</span></div>
<div></div>
</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>99</wp:post_id>
		<wp:post_date>2005-09-14 16:03:59</wp:post_date>
		<wp:post_date_gmt>2005-09-14 16:03:59</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>google%e5%b7%b2%e6%88%90%e4%b8%ba%e4%bc%97%e7%89%9b%e4%ba%ba%e6%83%b3%e5%8e%bb%e7%9a%84%e5%85%ac%e5%8f%b8</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="chinese"><![CDATA[Chinese]]></category>
		<category domain="post_tag" nicename="google"><![CDATA[Google]]></category>
		<category domain="category" nicename="thoughts"><![CDATA[Thoughts]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>spaces_a43755b404d273dfcedbd14ccb4f51ab_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[http://cid-04001c604af3f011.users.api.live.net/Users(288261576051650577)/Blogs('4001C604AF3F011!102')/Entries('4001C604AF3F011!240')?authkey=X13wC75MXT0%24]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_efficient_related_posts</wp:meta_key>
			<wp:meta_value><![CDATA[a:0:{}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_relation_threshold</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Mysql中文问题的解决.</title>
		<link>http://jeff.familyyu.net/2005/09/13/mysql%e4%b8%ad%e6%96%87%e9%97%ae%e9%a2%98%e7%9a%84%e8%a7%a3%e5%86%b3/</link>
		<pubDate>Tue, 13 Sep 2005 16:30:50 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang1.wordpress.com/2005/09/13/mysql%e4%b8%ad%e6%96%87%e9%97%ae%e9%a2%98%e7%9a%84%e8%a7%a3%e5%86%b3</guid>
		<description></description>
		<content:encoded><![CDATA[<div id="msgcns!4001C604AF3F011!239" class="bvMsg">

1.<span style="font-family: Arial;">创建database的时候，使用gbk编码: create database test default character set gbk collate gbk_chinese_ci;
</span>

<span style="font-family: Arial;"> 2. 假设我新建的数据库是testdb，那么我连接数据库的url应该为：
jdbc:mysql://localhost:3306/testdb?useUnicode=true&amp;characterEncoding=gbk
此时要注意：如果我是把这个url写在JAVA代码中，就直接这样写。但如果是在xml配置文件中（如struts-config.xml,web.xml等），要把其中的&amp;改为&amp;amp;才行，否则会出错。也就是：
jdbc:mysql://localhost:3306/testdb?useUnicode=true&amp;amp;characterEncoding=gbk;</span>

<span style="font-family: Arial;"> </span><span style="font-family: Arial;"> 3.写个EncodingFilter对Response设置charset为GBK,然后在web.xml中进行配置Filter.</span>

</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>100</wp:post_id>
		<wp:post_date>2005-09-13 16:30:50</wp:post_date>
		<wp:post_date_gmt>2005-09-13 16:30:50</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>mysql%e4%b8%ad%e6%96%87%e9%97%ae%e9%a2%98%e7%9a%84%e8%a7%a3%e5%86%b3</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="chinese"><![CDATA[Chinese]]></category>
		<category domain="category" nicename="database"><![CDATA[Database]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>spaces_a43755b404d273dfcedbd14ccb4f51ab_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[http://cid-04001c604af3f011.users.api.live.net/Users(288261576051650577)/Blogs('4001C604AF3F011!102')/Entries('4001C604AF3F011!239')?authkey=X13wC75MXT0%24]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>写Blog是否有暴露狂的症状?</title>
		<link>http://jeff.familyyu.net/2005/08/30/%e5%86%99blog%e6%98%af%e5%90%a6%e6%9c%89%e6%9a%b4%e9%9c%b2%e7%8b%82%e7%9a%84%e7%97%87%e7%8a%b6/</link>
		<pubDate>Tue, 30 Aug 2005 12:50:47 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang1.wordpress.com/2005/08/30/%e5%86%99blog%e6%98%af%e5%90%a6%e6%9c%89%e6%9a%b4%e9%9c%b2%e7%8b%82%e7%9a%84%e7%97%87%e7%8a%b6</guid>
		<description></description>
		<content:encoded><![CDATA[<div id="msgcns!4001C604AF3F011!236" class="bvMsg">
<div>按理说,blog是以往把自己的写日记的习惯写到网络上,但是一旦把自己的blog公开,就相当于说把自己的日记公开?那么自己这么做是否有着潜意识的暴露狂的症状呢?? 有时候我很想把自己内心的想法写出来,但又不大愿意..因为我不希望太多人看到我的弱点,我不喜欢别人的同情,不喜欢别人的可怜. 我要坚强,至少要伪装成坚强.或许这就是所谓的男人,所谓男人里骨子里的那种傲气.
有好几次我想把自己的blog设置成只有自己才能看的,但后来又都放开了!或许我真的有点暴露狂症状!!</div>
</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>101</wp:post_id>
		<wp:post_date>2005-08-30 12:50:47</wp:post_date>
		<wp:post_date_gmt>2005-08-30 12:50:47</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%86%99blog%e6%98%af%e5%90%a6%e6%9c%89%e6%9a%b4%e9%9c%b2%e7%8b%82%e7%9a%84%e7%97%87%e7%8a%b6</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="blog"><![CDATA[Blog]]></category>
		<category domain="category" nicename="chinese"><![CDATA[Chinese]]></category>
		<category domain="category" nicename="thoughts"><![CDATA[Thoughts]]></category>
		<category domain="post_tag" nicename="%e8%87%aa%e8%a8%80%e8%87%aa%e8%af%ad"><![CDATA[自言自语]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>spaces_a43755b404d273dfcedbd14ccb4f51ab_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[http://cid-04001c604af3f011.users.api.live.net/Users(288261576051650577)/Blogs('4001C604AF3F011!102')/Entries('4001C604AF3F011!236')?authkey=X13wC75MXT0%24]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_efficient_related_posts</wp:meta_key>
			<wp:meta_value><![CDATA[a:9:{i:0;a:4:{s:2:"ID";s:3:"120";s:10:"post_title";s:14:"Blog or Track?";s:7:"matches";s:1:"2";s:9:"permalink";s:50:"http://jeff.familyyu.net/2005/06/23/blog-or-track/";}i:1;a:4:{s:2:"ID";s:2:"41";s:10:"post_title";s:27:"梦见自己大学刚毕业";s:7:"matches";s:1:"1";s:9:"permalink";s:118:"http://jeff.familyyu.net/2006/09/02/%e6%a2%a6%e8%a7%81%e8%87%aa%e5%b7%b1%e5%a4%a7%e5%ad%a6%e5%88%9a%e6%af%95%e4%b8%9a/";}i:2;a:4:{s:2:"ID";s:2:"88";s:10:"post_title";s:35:"爱好过多=没有真正的爱好?";s:7:"matches";s:1:"1";s:9:"permalink";s:136:"http://jeff.familyyu.net/2005/12/01/%e7%88%b1%e5%a5%bd%e8%bf%87%e5%a4%9a%e6%b2%a1%e6%9c%89%e7%9c%9f%e6%ad%a3%e7%9a%84%e7%88%b1%e5%a5%bd/";}i:3;a:4:{s:2:"ID";s:3:"102";s:10:"post_title";s:13:"相信命运?";s:7:"matches";s:1:"1";s:9:"permalink";s:73:"http://jeff.familyyu.net/2005/08/30/%e7%9b%b8%e4%bf%a1%e5%91%bd%e8%bf%90/";}i:4;a:4:{s:2:"ID";s:3:"104";s:10:"post_title";s:12:"论 "坚持"";s:7:"matches";s:1:"1";s:9:"permalink";s:65:"http://jeff.familyyu.net/2005/08/27/%e8%ae%ba-%e5%9d%9a%e6%8c%81/";}i:5;a:4:{s:2:"ID";s:3:"115";s:10:"post_title";s:34:"英语口语和听力真难提高!";s:7:"matches";s:1:"1";s:9:"permalink";s:136:"http://jeff.familyyu.net/2005/07/21/%e8%8b%b1%e8%af%ad%e5%8f%a3%e8%af%ad%e5%92%8c%e5%90%ac%e5%8a%9b%e7%9c%9f%e9%9a%be%e6%8f%90%e9%ab%98/";}i:6;a:4:{s:2:"ID";s:3:"127";s:10:"post_title";s:25:"《你的灯亮着吗?》";s:7:"matches";s:1:"1";s:9:"permalink";s:109:"http://jeff.familyyu.net/2005/06/07/%e3%80%8a%e4%bd%a0%e7%9a%84%e7%81%af%e4%ba%ae%e7%9d%80%e5%90%97%e3%80%8b/";}i:7;a:4:{s:2:"ID";s:3:"134";s:10:"post_title";s:30:"对自己人生规划的思考";s:7:"matches";s:1:"1";s:9:"permalink";s:127:"http://jeff.familyyu.net/2005/05/23/%e5%af%b9%e8%87%aa%e5%b7%b1%e4%ba%ba%e7%94%9f%e8%a7%84%e5%88%92%e7%9a%84%e6%80%9d%e8%80%83/";}i:8;a:4:{s:2:"ID";s:3:"139";s:10:"post_title";s:21:"程序代码和英语";s:7:"matches";s:1:"1";s:9:"permalink";s:100:"http://jeff.familyyu.net/2005/05/19/%e7%a8%8b%e5%ba%8f%e4%bb%a3%e7%a0%81%e5%92%8c%e8%8b%b1%e8%af%ad/";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_relation_threshold</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>相信命运?</title>
		<link>http://jeff.familyyu.net/2005/08/30/%e7%9b%b8%e4%bf%a1%e5%91%bd%e8%bf%90/</link>
		<pubDate>Tue, 30 Aug 2005 12:43:04 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang1.wordpress.com/2005/08/30/%e7%9b%b8%e4%bf%a1%e5%91%bd%e8%bf%90</guid>
		<description></description>
		<content:encoded><![CDATA[<div id="msgcns!4001C604AF3F011!235" class="bvMsg">
<div>"你相信命运吗?",这样的问题一般都是出自女生之口,因为对于一个成熟的男人来说,这个问题问的肤浅. 还好我目前暂时不是一个成熟的男人,所以还可问问. 我记得在看&lt;Lost&gt;那部篇的时候有这么个场景: John对Jack说的一段对话. (John是个饱经沧桑的老人,Jack是个年轻有为的外科医生.)</div>
<div>"这就是我们的不同,你做每件事情都要有理由,你相信科学,但我不是,我相信的是命运...!"
整部片中,应该说因为John这个角色的加入,使得让大家更觉得神秘,或许因为他相信的是命运,如果他也相信科学的话,或许神秘度就减少了很多.</div>
<div>我也发现其实当个人在某方面比较差的时候,这个时候,他往往会给自己这么个台阶,"在这件事情上,在这方面,我相信命运!",又或者说这是一个借口....</div>
</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>102</wp:post_id>
		<wp:post_date>2005-08-30 12:43:04</wp:post_date>
		<wp:post_date_gmt>2005-08-30 12:43:04</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e7%9b%b8%e4%bf%a1%e5%91%bd%e8%bf%90</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="chinese"><![CDATA[Chinese]]></category>
		<category domain="category" nicename="thoughts"><![CDATA[Thoughts]]></category>
		<category domain="post_tag" nicename="%e8%87%aa%e8%a8%80%e8%87%aa%e8%af%ad"><![CDATA[自言自语]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>spaces_a43755b404d273dfcedbd14ccb4f51ab_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[http://cid-04001c604af3f011.users.api.live.net/Users(288261576051650577)/Blogs('4001C604AF3F011!102')/Entries('4001C604AF3F011!235')?authkey=X13wC75MXT0%24]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_efficient_related_posts</wp:meta_key>
			<wp:meta_value><![CDATA[a:9:{i:0;a:4:{s:2:"ID";s:2:"41";s:10:"post_title";s:27:"梦见自己大学刚毕业";s:7:"matches";s:1:"1";s:9:"permalink";s:118:"http://jeff.familyyu.net/2006/09/02/%e6%a2%a6%e8%a7%81%e8%87%aa%e5%b7%b1%e5%a4%a7%e5%ad%a6%e5%88%9a%e6%af%95%e4%b8%9a/";}i:1;a:4:{s:2:"ID";s:2:"88";s:10:"post_title";s:35:"爱好过多=没有真正的爱好?";s:7:"matches";s:1:"1";s:9:"permalink";s:136:"http://jeff.familyyu.net/2005/12/01/%e7%88%b1%e5%a5%bd%e8%bf%87%e5%a4%9a%e6%b2%a1%e6%9c%89%e7%9c%9f%e6%ad%a3%e7%9a%84%e7%88%b1%e5%a5%bd/";}i:2;a:4:{s:2:"ID";s:3:"101";s:10:"post_title";s:35:"写Blog是否有暴露狂的症状?";s:7:"matches";s:1:"1";s:9:"permalink";s:131:"http://jeff.familyyu.net/2005/08/30/%e5%86%99blog%e6%98%af%e5%90%a6%e6%9c%89%e6%9a%b4%e9%9c%b2%e7%8b%82%e7%9a%84%e7%97%87%e7%8a%b6/";}i:3;a:4:{s:2:"ID";s:3:"104";s:10:"post_title";s:12:"论 "坚持"";s:7:"matches";s:1:"1";s:9:"permalink";s:65:"http://jeff.familyyu.net/2005/08/27/%e8%ae%ba-%e5%9d%9a%e6%8c%81/";}i:4;a:4:{s:2:"ID";s:3:"115";s:10:"post_title";s:34:"英语口语和听力真难提高!";s:7:"matches";s:1:"1";s:9:"permalink";s:136:"http://jeff.familyyu.net/2005/07/21/%e8%8b%b1%e8%af%ad%e5%8f%a3%e8%af%ad%e5%92%8c%e5%90%ac%e5%8a%9b%e7%9c%9f%e9%9a%be%e6%8f%90%e9%ab%98/";}i:5;a:4:{s:2:"ID";s:3:"120";s:10:"post_title";s:14:"Blog or Track?";s:7:"matches";s:1:"1";s:9:"permalink";s:50:"http://jeff.familyyu.net/2005/06/23/blog-or-track/";}i:6;a:4:{s:2:"ID";s:3:"127";s:10:"post_title";s:25:"《你的灯亮着吗?》";s:7:"matches";s:1:"1";s:9:"permalink";s:109:"http://jeff.familyyu.net/2005/06/07/%e3%80%8a%e4%bd%a0%e7%9a%84%e7%81%af%e4%ba%ae%e7%9d%80%e5%90%97%e3%80%8b/";}i:7;a:4:{s:2:"ID";s:3:"134";s:10:"post_title";s:30:"对自己人生规划的思考";s:7:"matches";s:1:"1";s:9:"permalink";s:127:"http://jeff.familyyu.net/2005/05/23/%e5%af%b9%e8%87%aa%e5%b7%b1%e4%ba%ba%e7%94%9f%e8%a7%84%e5%88%92%e7%9a%84%e6%80%9d%e8%80%83/";}i:8;a:4:{s:2:"ID";s:3:"139";s:10:"post_title";s:21:"程序代码和英语";s:7:"matches";s:1:"1";s:9:"permalink";s:100:"http://jeff.familyyu.net/2005/05/19/%e7%a8%8b%e5%ba%8f%e4%bb%a3%e7%a0%81%e5%92%8c%e8%8b%b1%e8%af%ad/";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_relation_threshold</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>论 &quot;坚持&quot;</title>
		<link>http://jeff.familyyu.net/2005/08/27/%e8%ae%ba-%e5%9d%9a%e6%8c%81/</link>
		<pubDate>Sat, 27 Aug 2005 02:49:13 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang1.wordpress.com/2005/08/27/%e8%ae%ba-%e5%9d%9a%e6%8c%81</guid>
		<description></description>
		<content:encoded><![CDATA[<div id="msgcns!4001C604AF3F011!233" class="bvMsg">
<div>任何一件事情的成功都要靠坚持,越大的成功越需要坚持. 其实做任何事情最难的也就是坚持,大家一直会去找窍门,找捷径,原因是大家坚持不了. 我不记得在那本书里看到说,"你穷,是因为你 Too Lazy". 还记得数学里面的"小概率定理",就是一件事原本的成功率很低,但是你一直努力,一直坚持,那么最后你肯定会成功.
很多人为什么能坚持下来呢?因为他有很强的信念,他总是说" I can do it". 就因为有很强的信念,他们才会一直坚持,一直努力.
成功 = 信念 + 坚持 + 努力.</div>
</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>104</wp:post_id>
		<wp:post_date>2005-08-27 02:49:13</wp:post_date>
		<wp:post_date_gmt>2005-08-27 02:49:13</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e8%ae%ba-%e5%9d%9a%e6%8c%81</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="chinese"><![CDATA[Chinese]]></category>
		<category domain="category" nicename="thoughts"><![CDATA[Thoughts]]></category>
		<category domain="post_tag" nicename="%e8%87%aa%e8%a8%80%e8%87%aa%e8%af%ad"><![CDATA[自言自语]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>spaces_a43755b404d273dfcedbd14ccb4f51ab_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[http://cid-04001c604af3f011.users.api.live.net/Users(288261576051650577)/Blogs('4001C604AF3F011!102')/Entries('4001C604AF3F011!233')?authkey=X13wC75MXT0%24]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_efficient_related_posts</wp:meta_key>
			<wp:meta_value><![CDATA[a:9:{i:0;a:4:{s:2:"ID";s:2:"41";s:10:"post_title";s:27:"梦见自己大学刚毕业";s:7:"matches";s:1:"1";s:9:"permalink";s:118:"http://jeff.familyyu.net/2006/09/02/%e6%a2%a6%e8%a7%81%e8%87%aa%e5%b7%b1%e5%a4%a7%e5%ad%a6%e5%88%9a%e6%af%95%e4%b8%9a/";}i:1;a:4:{s:2:"ID";s:2:"88";s:10:"post_title";s:35:"爱好过多=没有真正的爱好?";s:7:"matches";s:1:"1";s:9:"permalink";s:136:"http://jeff.familyyu.net/2005/12/01/%e7%88%b1%e5%a5%bd%e8%bf%87%e5%a4%9a%e6%b2%a1%e6%9c%89%e7%9c%9f%e6%ad%a3%e7%9a%84%e7%88%b1%e5%a5%bd/";}i:2;a:4:{s:2:"ID";s:3:"101";s:10:"post_title";s:35:"写Blog是否有暴露狂的症状?";s:7:"matches";s:1:"1";s:9:"permalink";s:131:"http://jeff.familyyu.net/2005/08/30/%e5%86%99blog%e6%98%af%e5%90%a6%e6%9c%89%e6%9a%b4%e9%9c%b2%e7%8b%82%e7%9a%84%e7%97%87%e7%8a%b6/";}i:3;a:4:{s:2:"ID";s:3:"102";s:10:"post_title";s:13:"相信命运?";s:7:"matches";s:1:"1";s:9:"permalink";s:73:"http://jeff.familyyu.net/2005/08/30/%e7%9b%b8%e4%bf%a1%e5%91%bd%e8%bf%90/";}i:4;a:4:{s:2:"ID";s:3:"115";s:10:"post_title";s:34:"英语口语和听力真难提高!";s:7:"matches";s:1:"1";s:9:"permalink";s:136:"http://jeff.familyyu.net/2005/07/21/%e8%8b%b1%e8%af%ad%e5%8f%a3%e8%af%ad%e5%92%8c%e5%90%ac%e5%8a%9b%e7%9c%9f%e9%9a%be%e6%8f%90%e9%ab%98/";}i:5;a:4:{s:2:"ID";s:3:"120";s:10:"post_title";s:14:"Blog or Track?";s:7:"matches";s:1:"1";s:9:"permalink";s:50:"http://jeff.familyyu.net/2005/06/23/blog-or-track/";}i:6;a:4:{s:2:"ID";s:3:"127";s:10:"post_title";s:25:"《你的灯亮着吗?》";s:7:"matches";s:1:"1";s:9:"permalink";s:109:"http://jeff.familyyu.net/2005/06/07/%e3%80%8a%e4%bd%a0%e7%9a%84%e7%81%af%e4%ba%ae%e7%9d%80%e5%90%97%e3%80%8b/";}i:7;a:4:{s:2:"ID";s:3:"134";s:10:"post_title";s:30:"对自己人生规划的思考";s:7:"matches";s:1:"1";s:9:"permalink";s:127:"http://jeff.familyyu.net/2005/05/23/%e5%af%b9%e8%87%aa%e5%b7%b1%e4%ba%ba%e7%94%9f%e8%a7%84%e5%88%92%e7%9a%84%e6%80%9d%e8%80%83/";}i:8;a:4:{s:2:"ID";s:3:"139";s:10:"post_title";s:21:"程序代码和英语";s:7:"matches";s:1:"1";s:9:"permalink";s:100:"http://jeff.familyyu.net/2005/05/19/%e7%a8%8b%e5%ba%8f%e4%bb%a3%e7%a0%81%e5%92%8c%e8%8b%b1%e8%af%ad/";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_relation_threshold</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>29</wp:comment_id>
			<wp:comment_author><![CDATA[anson]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2005-08-30 12:11:44</wp:comment_date>
			<wp:comment_date_gmt>2005-08-30 12:11:44</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[你穷,是因为你 Too Lazy这话，TOO FUNNY：）]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>The Lost</title>
		<link>http://jeff.familyyu.net/2005/08/22/the-lost/</link>
		<pubDate>Mon, 22 Aug 2005 15:26:52 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang1.wordpress.com/2005/08/22/the-lost</guid>
		<description></description>
		<content:encoded><![CDATA[<div id="msgcns!4001C604AF3F011!232" class="bvMsg">
<div>
<div>这个周末趁着下雨的天气,看完了&lt;&lt;Lost&gt;&gt;的Season1, 这确实是部不错的片, 关键在于悬念设置的很好. 主要是讲一部从悉尼飞往美国的飞机在半途失事,而后有48个survivor在一个岛上所经历的一些事情,这个神秘的岛,导演以边经历岛上的生活,边回忆的方式来叙述整个故事,当然了,最大的亮点还是在于对悬念的设置....这个岛上充满了太多的神奇事情:</div>
<div>比如说, John本来是要靠轮椅行动的,但是飞机失事后,他的脚却好了,John为什么会在梦里能看到第2天发生的事情,,还比如"4,5,8,13,,,"为什么这几个数字总是能带个人很多钱,但同时让这个人的身边总是发生很多的不幸,还比如说为什么岛上的人要抓黑人的小孩Walt,,等等一连串的谜,当然,这在第一季中都还没有答案.:( ,这48个幸存者其实就是一个社会的小缩影..
里面也有些挺好玩的场面,比如说,在飞机刚失事的时候,Charlie在自己四个手指所捆扎的白布上写了四个字"FATE",刚开始大家都以为只要过不久,就会有人来拯救他们,当大家发现不会有人来救的时候,Charlie就把"FATE"改成"LATE" . ;-)
Season2将在9月份在abc播出,到时候不知道会不会把这些谜解释的很完美呢?又或者这个导演抑或编剧是个虎头蛇尾的人???呵呵</div>
</div>
</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>105</wp:post_id>
		<wp:post_date>2005-08-22 15:26:52</wp:post_date>
		<wp:post_date_gmt>2005-08-22 15:26:52</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>the-lost</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="chinese"><![CDATA[Chinese]]></category>
		<category domain="category" nicename="others"><![CDATA[Others]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>spaces_a43755b404d273dfcedbd14ccb4f51ab_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[http://cid-04001c604af3f011.users.api.live.net/Users(288261576051650577)/Blogs('4001C604AF3F011!102')/Entries('4001C604AF3F011!232')?authkey=X13wC75MXT0%24]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Profling and Seraph</title>
		<link>http://jeff.familyyu.net/2005/08/18/profling-and-seraph/</link>
		<pubDate>Thu, 18 Aug 2005 13:29:38 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang1.wordpress.com/2005/08/18/profling-and-seraph</guid>
		<description></description>
		<content:encoded><![CDATA[<div id="msgcns!4001C604AF3F011!231" class="bvMsg"><div> 今天无意中发现这两个opensource jar,好像还不错.</div>
<div> Profling: 性能测试工具,比如我们经常要测试下调用这个服务需要多长时间,要自己手工写之间的时间差，但是这个工具会帮助我们做到这点，具体的我也尚未研究,不过感觉是不错，值得推荐，我最近比较小型有用的软件.</div>
<div> Seraph,这是一个简单的权限管理jar..</div>
<div> 这两个软件的网址是: <a href="http://opensource.atlassian.com/">http://opensource.atlassian.com/</a> . </div></div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>106</wp:post_id>
		<wp:post_date>2005-08-18 13:29:38</wp:post_date>
		<wp:post_date_gmt>2005-08-18 13:29:38</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>profling-and-seraph</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="java"><![CDATA[Java]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>spaces_a43755b404d273dfcedbd14ccb4f51ab_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[http://cid-04001c604af3f011.users.api.live.net/Users(288261576051650577)/Blogs('4001C604AF3F011!102')/Entries('4001C604AF3F011!231')?authkey=X13wC75MXT0%24]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>再谈</title>
		<link>http://jeff.familyyu.net/2005/08/15/%e5%86%8d%e8%b0%88/</link>
		<pubDate>Mon, 15 Aug 2005 17:11:43 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang1.wordpress.com/2005/08/15/%e5%86%8d%e8%b0%88</guid>
		<description></description>
		<content:encoded><![CDATA[<div id="msgcns!4001C604AF3F011!229" class="bvMsg"><div>
<p style="text-indent:11.25pt;"><font face="宋体, Simsun"><font size="2"><span lang="ZH-CN" style="font-family:宋体;">这本书应该是我目前为止读过的最有趣的一本书</span><span>, </span><span lang="ZH-CN" style="font-family:宋体;">里面是多插图</span><span>, </span><span lang="ZH-CN" style="font-family:宋体;">言语幽默</span><span> , </span><span lang="ZH-CN" style="font-family:宋体;">而且里面还经常采用拟人的手法</span><span>,</span><span lang="ZH-CN" style="font-family:宋体;">比如说</span><span>Abstract Factory </span><span lang="ZH-CN" style="font-family:宋体;">和</span><span> Factory Method </span><span lang="ZH-CN" style="font-family:宋体;">模式之间的对话</span><span>,</span><span lang="ZH-CN" style="font-family:宋体;">当然了</span><span>,</span><span lang="ZH-CN" style="font-family:宋体;">这并不是说讲的深度不够</span><span>,</span><span lang="ZH-CN" style="font-family:宋体;">恰恰相反</span><span>,</span><span lang="ZH-CN" style="font-family:宋体;">他把问题说的非常透彻</span><span>.</span></font></font></p>
<p style="text-indent:11.25pt;"><font face="宋体, Simsun"><font size="2"><span><span> </span></span><span lang="ZH-CN" style="font-family:宋体;">这本书和我以前所看过的计算机书籍有很大的不同</span><span>, </span><span lang="ZH-CN" style="font-family:宋体;">它同时以一个读书笔记又或者说以黑板式的教学方式来说</span><span>. </span><span lang="ZH-CN" style="font-family:宋体;">其实呢</span><span>, </span><span lang="ZH-CN" style="font-family:宋体;">我想说的是</span><span>, </span><span lang="ZH-CN" style="font-family:宋体;">我在看这本书的时候并不是感觉在看书</span><span>, </span><span lang="ZH-CN" style="font-family:宋体;">而是感觉坐在教室里听课</span><span>. </span><span lang="ZH-CN" style="font-family:宋体;">真的</span><span>, </span><span lang="ZH-CN" style="font-family:宋体;">如果我有机会教授</span><span>Design Pattern</span><span lang="ZH-CN" style="font-family:宋体;">的课程</span><span>, </span><span lang="ZH-CN" style="font-family:宋体;">这本书是我的首选课本</span><span>!! (</span><span lang="ZH-CN" style="font-family:宋体;">感觉我在卖这本书的广告</span><span>??</span><span lang="ZH-CN" style="font-family:宋体;">不妨告诉你个秘密</span><span>, </span><span lang="ZH-CN" style="font-family:宋体;">我真的没收到这本书的任何小费</span><span>.)</span></font></font></p>
<p style="text-indent:11.25pt;"><font face="宋体, Simsun"><font size="2"><span lang="ZH-CN" style="font-family:宋体;">如果用简单一句话来表达读完这本书的感受</span><span>,</span><span lang="ZH-CN" style="font-family:宋体;">我想说的是</span><span>,”</span><span lang="ZH-CN" style="font-family:宋体;">不知道内地什么时候出这本书的影印版</span><span>,</span><span lang="ZH-CN" style="font-family:宋体;">我好去买</span><span>”.(</span><span lang="ZH-CN" style="font-family:宋体;">买不起原版的人含泪说道</span><span>.)</span></font></font></p>
<p style="text-indent:11.25pt;"><font face="宋体, Simsun"><font size="2"><span lang="ZH-CN" style="font-family:宋体;">下面是以我的理解来说设计模式和理解这本书</span><span>.</span></font></font></p>
<p style="text-indent:11.25pt;"><font face="宋体, Simsun"><font size="2"><span lang="ZH-CN" style="font-family:宋体;">设计模式其实是一个产物</span><span>,</span><span lang="ZH-CN" style="font-family:宋体;">是什么的产物呢</span><span>? </span><span lang="ZH-CN" style="font-family:宋体;">是运用</span><span>OO</span><span lang="ZH-CN" style="font-family:宋体;">原则解决某个具体问题</span><span>(Context)</span><span lang="ZH-CN" style="font-family:宋体;">的产物</span><span>. </span><span lang="ZH-CN" style="font-family:宋体;">那么</span><span>OO</span><span lang="ZH-CN" style="font-family:宋体;">原则是什么东西呢</span><span>? OO</span><span lang="ZH-CN" style="font-family:宋体;">原则也是一个产物</span><span>? </span><span lang="ZH-CN" style="font-family:宋体;">那又是什么的产物呢</span><span>? </span><span lang="ZH-CN" style="font-family:宋体;">是为了以后能更容易扩展代码</span><span>,</span><span lang="ZH-CN" style="font-family:宋体;">使得软件更容易维护</span><span>. </span><span lang="ZH-CN" style="font-family:宋体;">大家就是为了更容易达到这个目的而总结出来的一些经验</span><span>. </span></font></font></p>
<p style="text-indent:11.25pt;"><font face="宋体, Simsun"><font size="2"><span lang="ZH-CN" style="font-family:宋体;">俗话说</span><span>:”</span><span lang="ZH-CN" style="font-family:宋体;">攻城容易</span><span>,</span><span lang="ZH-CN" style="font-family:宋体;">守城难</span><span>!”, </span><span lang="ZH-CN" style="font-family:宋体;">写个软件容易</span><span>, </span><span lang="ZH-CN" style="font-family:宋体;">但要长时间的维护这个软件来适应需求等</span><span>,</span><span lang="ZH-CN" style="font-family:宋体;">那就难了</span><span>.</span></font></font></p>
<p style="text-indent:11.25pt;"><font face="宋体, Simsun"><font size="2"><span lang="ZH-CN" style="font-family:宋体;">我们就从</span><span>OO</span><span lang="ZH-CN" style="font-family:宋体;">具有哪些特性</span><span>(OO Basic) </span><span lang="ZH-CN" style="font-family:宋体;">以及</span><span>OO</span><span lang="ZH-CN" style="font-family:宋体;">的一些原则</span><span> (OO Principle),</span><span lang="ZH-CN" style="font-family:宋体;">来看设计模式是如何应用</span><span>OO Basic</span><span lang="ZH-CN" style="font-family:宋体;">来实现一些</span><span> OO Principle.</span></font></font></p>
<h2><a><font face="Times New Roman"><span><span><font color="#000000"><font size="5">1.1.</font><span style="font:7pt 'Times New Roman';">         </span></font></span></span><span dir="ltr"><span><font color="#000000" size="5">OO Basic</font></span></span></font></a><span></span></h2>
<p style="text-indent:-18pt;"><span style="font-family:Symbol;"><span><font face="Symbol" size="3">·</font><span style="font:7pt 'Times New Roman';">         </span></span></span><span dir="ltr"><font size="3"><font face="Times New Roman">Abstraction<span>  </span></font></font></span></p>
<p style="text-indent:-18pt;"><span style="font-family:Symbol;"><span><font face="Symbol" size="3">·</font><span style="font:7pt 'Times New Roman';">         </span></span></span><span dir="ltr"><font size="3"><font face="Times New Roman">Inheritance<span>   </span></font></font></span></p>
<p style="text-indent:-18pt;"><span style="font-family:Symbol;"><span><font face="Symbol" size="3">·</font><span style="font:7pt 'Times New Roman';">         </span></span></span><span dir="ltr"><font face="Times New Roman" size="3">Polymorphism</font></span></p>
<p style="text-indent:-18pt;"><span style="font-family:Symbol;"><span><font face="Symbol" size="3">·</font><span style="font:7pt 'Times New Roman';">         </span></span></span><span dir="ltr"><font face="Times New Roman" size="3">Encapsulation</font></span></p>
<h2><a><font face="Times New Roman"><span><span><font color="#000000"><font size="5">1.2.</font><span style="font:7pt 'Times New Roman';">         </span></font></span></span><span dir="ltr"><span><font color="#000000" size="5">OO Principle</font></span></span></font></a><span></span></h2>
<p style="text-indent:-18pt;"><span style="font-family:Symbol;"><span><font face="Symbol" size="3">·</font><span style="font:7pt 'Times New Roman';">         </span></span></span><span dir="ltr"><font face="Times New Roman" size="3">Identify the aspect of your application that vary and separate them from what stays the same.</font></span></p>
<p style="text-indent:-18pt;"><span style="font-family:Symbol;"><span><font face="Symbol" size="3">·</font><span style="font:7pt 'Times New Roman';">         </span></span></span><span dir="ltr"><font face="Times New Roman" size="3">Program to an interface, not an implementation.</font></span></p>
<p style="text-indent:-18pt;"><span style="font-family:Symbol;"><span><font face="Symbol" size="3">·</font><span style="font:7pt 'Times New Roman';">         </span></span></span><span dir="ltr"><font face="Times New Roman" size="3">Favor composition over inheritance.</font></span></p>
<p style="text-indent:-18pt;"><span style="font-family:Symbol;"><span><font face="Symbol" size="3">·</font><span style="font:7pt 'Times New Roman';">         </span></span></span><span dir="ltr"><font face="Times New Roman" size="3">Strive for loosely coupled designs between objects that interact.</font></span></p>
<p style="text-indent:-18pt;"><span style="font-family:Symbol;"><span><font face="Symbol" size="3">·</font><span style="font:7pt 'Times New Roman';">         </span></span></span><span dir="ltr"><font face="Times New Roman" size="3">Classes should be open for extension but closed for modification.</font></span></p>
<p style="text-indent:-18pt;"><span style="font-family:Symbol;"><span><font face="Symbol" size="3">·</font><span style="font:7pt 'Times New Roman';">         </span></span></span><span dir="ltr"><font face="Times New Roman" size="3">Depend on Abstraction. Do not depend on concrete classes.</font></span></p>
<p style="text-indent:-18pt;"><span style="font-family:Symbol;"><span><font face="Symbol" size="3">·</font><span style="font:7pt 'Times New Roman';">         </span></span></span><span dir="ltr"><font face="Times New Roman" size="3">Principle of Least knowledge – talk only to your immediate friends.</font></span></p>
<p style="text-indent:-18pt;"><span style="font-family:Symbol;"><span><font face="Symbol" size="3">·</font><span style="font:7pt 'Times New Roman';">         </span></span></span><span dir="ltr"><font face="Times New Roman" size="3">Don’t call us, we will call you.</font></span></p>
<p style="text-indent:-18pt;"><span style="font-family:Symbol;"><span><font face="Symbol" size="3">·</font><span style="font:7pt 'Times New Roman';">         </span></span></span><span dir="ltr"><font face="Times New Roman" size="3">A class should have one reason to change.</font></span></p>
<p><span><font face="Times New Roman" size="3"> </font></span></p>
<h2><a><font face="Times New Roman"><span><span><font color="#000000"><font size="5">1.3.</font><span style="font:7pt 'Times New Roman';">         </span></font></span></span><span dir="ltr"><span><font color="#000000" size="5">Design Patterns</font></span></span></font></a><span></span></h2>
<h3><a><font face="Times New Roman"><span><span><font color="#000000"><em><font size="3">1.3.1.</font></em><span style="font:7pt 'Times New Roman';">                  </span></font></span></span><span dir="ltr"><em><font color="#000000" size="3">Strategy Pattern</font></em></span></font></a><span></span><span></span></h3>
<p><font face="宋体" size="2">Defines a family of algorithms, encapsulates each one, and make them interchangeable. Strategy lets the algorithm vary independently from client that uses it.</font></p>
<h3><font face="Times New Roman"><span><span><em><font size="3">1.3.2.</font></em><span style="font:7pt 'Times New Roman';">                  </span></span></span><span dir="ltr"><span><em><font size="3">Observer</font></em></span></span></font></h3>
<p><font face="宋体" size="2">Defines a one-to-many dependency between objects so that when object change state, all its dependents are notified and updated automatically.</font></p>
<h3><font face="Times New Roman"><span><span><em><font size="3">1.3.3.</font></em><span style="font:7pt 'Times New Roman';">                  </span></span></span><span dir="ltr"><span><em><font size="3">Decorator</font></em></span></span></font></h3>
<p><font face="宋体" size="2">Attach additional responsibilities to an object dynamically. Decorators provide a flexible alternative to subclassing for extending functionality.</font></p>
<h3><font face="Times New Roman"><span><span><em><font size="3">1.3.4.</font></em><span style="font:7pt 'Times New Roman';">                  </span></span></span><span dir="ltr"><span><em><font size="3">Abstract Factory</font></em></span></span></font></h3>
<p><font face="宋体" size="2">Provide an interface for creating families of related or dependent objects without specifying their concrete classes.</font></p>
<h3><font face="Times New Roman"><span><span><em><font size="3">1.3.5.</font></em><span style="font:7pt 'Times New Roman';">                  </span></span></span><span dir="ltr"><span><em><font size="3">Factory Method</font></em></span></span></font></h3>
<p><font face="宋体" size="2">Define an interface for creating an object, but let subclass decide which class to instantiate. Factory Method let a class defer instantiation to the subclass.</font></p>
<h3><font face="Times New Roman"><span><span><em><font size="3">1.3.6.</font></em><span style="font:7pt 'Times New Roman';">                  </span></span></span><span dir="ltr"><span><em><font size="3">Singleton</font></em></span></span></font></h3>
<p><font face="宋体" size="2">Ensure a class only has one instance and provide a global point of access to it.</font></p>
<h3><font face="Times New Roman"><span><span><em><font size="3">1.3.7.</font></em><span style="font:7pt 'Times New Roman';">                  </span></span></span><span dir="ltr"><span><em><font size="3">Command</font></em></span></span></font></h3>
<p><font face="宋体" size="2">Encapsulates a request as an object, thereby letting you parameterize clients with different requests, queue or log requests, and support undoable operations.</font></p>
<h3><font face="Times New Roman"><span><span><em><font size="3">1.3.8.</font></em><span style="font:7pt 'Times New Roman';">                  </span></span></span><span dir="ltr"><span><em><font size="3">Adapter</font></em></span></span></font></h3>
<p><font size="2"><font face="宋体">Converts the interface of a class into another interface the client expects. Adapter lets classes work together that couldn</font><span style="font-family:'Times New Roman';">’</span><font face="宋体">t otherwise because of incompatible interfaces.</font></font></p>
<h3><font face="Times New Roman"><span><span><em><font size="3">1.3.9.</font></em><span style="font:7pt 'Times New Roman';">                  </span></span></span><span dir="ltr"><span><em><font size="3">Facade</font></em></span></span></font></h3>
<p><font size="2"><font face="宋体">Provides a unified interface to a set of interface in a subsystem. Fa</font><span style="font-family:'Times New Roman';">ç</span><font face="宋体">ade defines a higher-level interface that makes the subsystem easier to use.</font></font></p>
<h3><font face="Times New Roman"><span><span><em><font size="3">1.3.10.</font></em><span style="font:7pt 'Times New Roman';">              </span></span></span><span dir="ltr"><span><em><font size="3">Template Method</font></em></span></span></font></h3>
<p><font size="2"><font face="宋体">Define the skeleton of an algorithm in an operation deferring some steps to subclasses. Template Method lets subclasses redefine certain steps of an algorithm without changing the algorithm</font><span style="font-family:'Times New Roman';">’</span><font face="宋体">s structure.</font></font></p>
<h3><font face="Times New Roman"><span><span><em><font size="3">1.3.11.</font></em><span style="font:7pt 'Times New Roman';">              </span></span></span><span dir="ltr"><span><em><font size="3">Iterator</font></em></span></span></font></h3>
<p><font face="宋体" size="2">Provide a way to access the elements of an aggregate object sequentially without exposing its underlying representation.</font></p>
<h3><font face="Times New Roman"><span><span><em><font size="3">1.3.12.</font></em><span style="font:7pt 'Times New Roman';">              </span></span></span><span dir="ltr"><span><em><font size="3">Composite</font></em></span></span></font></h3>
<p><font face="宋体" size="2">Compose objects into tree structures to represent part-whole hierarchies. Composite lets clients treat individual objects and composition of objects uniformly.</font></p>
<h3><font face="Times New Roman"><span><span><em><font size="3">1.3.13.</font></em><span style="font:7pt 'Times New Roman';">              </span></span></span><span dir="ltr"><span><em><font size="3">State</font></em></span></span></font></h3>
<p><font face="宋体" size="2">Allow an object to alter its behavior when its internal state changes. The object will appear to change its class.</font></p>
<h3><font face="Times New Roman"><span><span><em><font size="3">1.3.14.</font></em><span style="font:7pt 'Times New Roman';">              </span></span></span><span dir="ltr"><span><em><font size="3">Proxy</font></em></span></span></font></h3>
<p><font size="2"><font face="宋体">Provide a surrogate or placeholder for another object to control access to it.<span>       </span></font></font><span dir="ltr"><span style="font-size:10pt;font-family:Tahoma;"><br /></span></span></p></div></div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>107</wp:post_id>
		<wp:post_date>2005-08-15 17:11:43</wp:post_date>
		<wp:post_date_gmt>2005-08-15 17:11:43</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%86%8d%e8%b0%88</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="java"><![CDATA[Java]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>spaces_a43755b404d273dfcedbd14ccb4f51ab_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[http://cid-04001c604af3f011.users.api.live.net/Users(288261576051650577)/Blogs('4001C604AF3F011!102')/Entries('4001C604AF3F011!229')?authkey=X13wC75MXT0%24]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>28</wp:comment_id>
			<wp:comment_author><![CDATA[anson]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2005-08-17 11:01:26</wp:comment_date>
			<wp:comment_date_gmt>2005-08-17 11:01:26</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[只是俺已经跳出IT了，不然感觉这书确实还不错]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>&quot;杀人&quot;游戏介绍</title>
		<link>http://jeff.familyyu.net/2005/08/11/%e6%9d%80%e4%ba%ba%e6%b8%b8%e6%88%8f%e4%bb%8b%e7%bb%8d/</link>
		<pubDate>Thu, 11 Aug 2005 06:38:36 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang1.wordpress.com/2005/08/11/%e6%9d%80%e4%ba%ba%e6%b8%b8%e6%88%8f%e4%bb%8b%e7%bb%8d</guid>
		<description></description>
		<content:encoded><![CDATA[<div id="msgcns!4001C604AF3F011!228" class="bvMsg">
<div>这是一个智力推理游戏,人越多越好玩的游戏.大家enjoy的是整个推断的过程,逻辑思维.上个星期去南澳JuDiao沙玩的时候,晚上从12点玩到了凌晨6点多..., 同时这也是个很好消磨时间的游戏.:)</div>
<div>游戏规则是这样的.
每个人分一张扑克牌,比如说拿到大鬼牌的人是杀手.(每个人只能看自己的牌)
有个法官.(这个人有点像主持人的意思,他是不分牌的,一般是由比较知道游戏规则的人当的)</div>
<div>当大家看完牌后,
法官说了声:"天黑了..." .
这时候大家都闭上眼睛.
法官说"杀手现身"
那个手握大鬼的人睁开眼睛，然后用手指了一个人。(这个就是他要杀的人)
指完之后,他再闭上眼睛.

此后，法官说“天亮了。。。”,大家都睁开眼睛。
然后法官说，谁（也就刚刚被杀手指的人）被杀手杀死了，希望大家赶快找出杀手.
然后那个刚被杀死的人他先猜下是谁杀害自己的.(我们也叫遗言.;-) ),在这之后,那个“死人”就不能再说话了。
接下去每个人都推断自己觉得谁会是杀手，如果自己不是杀手，要说明自己不是杀手.(此刻真正的杀手当然也说自己不是杀手，舆论群众)，每个人都发表评论完后，开始投票，觉得谁会是杀手，投票数最多的人将被杀死。
而后法官会告诉说刚刚这个被杀死的人是杀手或者是被冤杀，比如是冤杀，则杀手继续重复杀人动作。。。。。如果到最后只剩下3个人的时候，杀手就胜利了!&nbsp;

这个游戏越玩后面越有意思，因为大家越有经验，越分析的有道理，比如可以通过观察表情，通过别人的分析言语判断，又或者通过那个被冤杀的人当时是谁投票等等.....

不错的消磨时间的游戏！！

</div>
</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>108</wp:post_id>
		<wp:post_date>2005-08-11 06:38:36</wp:post_date>
		<wp:post_date_gmt>2005-08-11 06:38:36</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e6%9d%80%e4%ba%ba%e6%b8%b8%e6%88%8f%e4%bb%8b%e7%bb%8d</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="chinese"><![CDATA[Chinese]]></category>
		<category domain="category" nicename="others"><![CDATA[Others]]></category>
		<category domain="post_tag" nicename="travel"><![CDATA[Travel]]></category>
		<wp:postmeta>
			<wp:meta_key>spaces_a43755b404d273dfcedbd14ccb4f51ab_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[http://cid-04001c604af3f011.users.api.live.net/Users(288261576051650577)/Blogs('4001C604AF3F011!102')/Entries('4001C604AF3F011!228')?authkey=X13wC75MXT0%24]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_efficient_related_posts</wp:meta_key>
			<wp:meta_value><![CDATA[a:3:{i:0;a:4:{s:2:"ID";s:2:"69";s:10:"post_title";s:12:"阳朔之行";s:7:"matches";s:1:"1";s:9:"permalink";s:73:"http://jeff.familyyu.net/2006/04/08/%e9%98%b3%e6%9c%94%e4%b9%8b%e8%a1%8c/";}i:1;a:4:{s:2:"ID";s:2:"82";s:10:"post_title";s:12:"第一次...";s:7:"matches";s:1:"1";s:9:"permalink";s:64:"http://jeff.familyyu.net/2005/12/31/%e7%ac%ac%e4%b8%80%e6%ac%a1/";}i:2;a:4:{s:2:"ID";s:3:"128";s:10:"post_title";s:27:"游玩大鹏古城和南澳";s:7:"matches";s:1:"1";s:9:"permalink";s:118:"http://jeff.familyyu.net/2005/05/24/%e6%b8%b8%e7%8e%a9%e5%a4%a7%e9%b9%8f%e5%8f%a4%e5%9f%8e%e5%92%8c%e5%8d%97%e6%be%b3/";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_relation_threshold</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>在Linux和Windows上安装CVS</title>
		<link>http://jeff.familyyu.net/2005/08/11/%e5%9c%a8linux%e5%92%8cwindows%e4%b8%8a%e5%ae%89%e8%a3%85cvs/</link>
		<pubDate>Thu, 11 Aug 2005 06:11:28 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang1.wordpress.com/2005/08/11/%e5%9c%a8linux%e5%92%8cwindows%e4%b8%8a%e5%ae%89%e8%a3%85cvs</guid>
		<description></description>
		<content:encoded><![CDATA[<div id="msgcns!4001C604AF3F011!226" class="bvMsg">
<div>在Linux上安装CVS,关键要看这么几个文件:</div>
<div>在/etc/service文件中是否有:
<span style="color: #ff0000;"> cvspserver      2401/tcp                        # CVS client/server operations
cvspserver      2401/udp                        # CVS client/server operations
<span style="color: #000000;">到/etc/xinetd.d/目录下建立这么个文件,文件名随便.里面包含这些:</span></span></div>
<div><span style="color: #ff0000;"> service cvspserver
{
disable         = no
socket_type     = stream
wait            = no
user            = root
server          = /usr/bin/cvs
server_args     = -f --allow-root=/home/cvsroot pserver
log_on_success  += USERID
log_on_failure  += USERID
flags           = REUSE
}
</span><span style="color: #000000;">加个cvsroot的用户,而后执行:</span></div>
<div>cvs -d /home/cvsroot init
service xinetd restart
最后,执行
netstat -l | grep cvspserver
如果能看到
tcp 0 0 *:cvspserver *:* LISTEN</div>
<div>表明成功!

详细: <a href="http://www.linuxfans.org/nuke/modules.php?name=Forums&amp;file=viewtopic&amp;t=92177">http://www.linuxfans.org/nuke/modules.php?name=Forums&amp;file=viewtopic&amp;t=92177</a>&nbsp;

Windows上安装cvsnt,只需在他的consol pannel里的repository里面设置你要放的目录和ip地址,就可以了.

</div>
</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>109</wp:post_id>
		<wp:post_date>2005-08-11 06:11:28</wp:post_date>
		<wp:post_date_gmt>2005-08-11 06:11:28</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%9c%a8linux%e5%92%8cwindows%e4%b8%8a%e5%ae%89%e8%a3%85cvs</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="chinese"><![CDATA[Chinese]]></category>
		<category domain="category" nicename="others"><![CDATA[Others]]></category>
		<wp:postmeta>
			<wp:meta_key>spaces_a43755b404d273dfcedbd14ccb4f51ab_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[http://cid-04001c604af3f011.users.api.live.net/Users(288261576051650577)/Blogs('4001C604AF3F011!102')/Entries('4001C604AF3F011!226')?authkey=X13wC75MXT0%24]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>一些不错的软件!</title>
		<link>http://jeff.familyyu.net/2005/08/04/%e4%b8%80%e4%ba%9b%e4%b8%8d%e9%94%99%e7%9a%84%e8%bd%af%e4%bb%b6/</link>
		<pubDate>Thu, 04 Aug 2005 05:51:42 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang1.wordpress.com/2005/08/04/%e4%b8%80%e4%ba%9b%e4%b8%8d%e9%94%99%e7%9a%84%e8%bd%af%e4%bb%b6</guid>
		<description></description>
		<content:encoded><![CDATA[<div id="msgcns!4001C604AF3F011!225" class="bvMsg">
<ul>
	<li> Cygwin -- 可以在Windows平台上建立起Linux的Bash.</li>
	<li> Emacs  -- 据说是世界上最成功的编辑器,也有人说是天才用的编辑器,我还记得03年还花了一周时间去学这个编辑器,后来没用,也就慢慢的忘记了. 这个也有Windows的版本,有机会也再下载来玩玩.</li>
	<li> WordNet -- 基于认知语言学的英语词典. (我现在在找个英文字典软件,用英文解释英文的. 不过目前只找到这个.)</li>
	<li> FeedDemon -- 读Rss的,还真好用.:)</li>
	<li> FreeMinder -- 据说还不错,只是我目前还不大领悟其中奥妙.</li>
</ul>
<div></div>
</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>110</wp:post_id>
		<wp:post_date>2005-08-04 05:51:42</wp:post_date>
		<wp:post_date_gmt>2005-08-04 05:51:42</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e4%b8%80%e4%ba%9b%e4%b8%8d%e9%94%99%e7%9a%84%e8%bd%af%e4%bb%b6</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="chinese"><![CDATA[Chinese]]></category>
		<category domain="category" nicename="others"><![CDATA[Others]]></category>
		<wp:postmeta>
			<wp:meta_key>spaces_a43755b404d273dfcedbd14ccb4f51ab_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[http://cid-04001c604af3f011.users.api.live.net/Users(288261576051650577)/Blogs('4001C604AF3F011!102')/Entries('4001C604AF3F011!225')?authkey=X13wC75MXT0%24]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>&quot;Head First Design Pattern&quot; book</title>
		<link>http://jeff.familyyu.net/2005/07/29/headfirstdesignpattern/</link>
		<pubDate>Fri, 29 Jul 2005 10:19:04 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang1.wordpress.com/2005/07/29/%e6%8e%a8%e8%8d%90</guid>
		<description></description>
		<content:encoded><![CDATA[<div id="msgcns!4001C604AF3F011!223" class="bvMsg"> 早几个星期前下载了这本书,前段时间都在写些表示层总结的文章和对Struts and Xwork代码的学习,所以没去看下载来的几本好书. such as "Code complete", "Domain Driven Design", "Head First Design Pattern",. 或许由于这几天连续看代码累的缘故.下午我不想看代码.于是就看了"Head First Desgin Pattern",还真是本好书.书里以情景对话的形式,以及多插图的方式,幽默的写法,让我不知不觉的读完了第1章,而且很自然的应用了Strategy模式.看完第1章你大概会有这样的感觉,我本来也是这么解决这个问题的,原来这种做法叫Strategy啊....
台湾已经有人在翻译这本书了,内地我好像还没看到.这本书的评价很高.不过现在网络上流传的电子版是扫描版的.(真是辛苦了那个人,同时,看扫描版还真的有点累,不过这本书的内容值得我们这么做.:)
Hope You Will Like This Book .:) ]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>111</wp:post_id>
		<wp:post_date>2005-07-29 10:19:04</wp:post_date>
		<wp:post_date_gmt>2005-07-29 10:19:04</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>headfirstdesignpattern</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="java"><![CDATA[Java]]></category>
		<wp:postmeta>
			<wp:meta_key>spaces_a43755b404d273dfcedbd14ccb4f51ab_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[http://cid-04001c604af3f011.users.api.live.net/Users(288261576051650577)/Blogs('4001C604AF3F011!102')/Entries('4001C604AF3F011!223')?authkey=X13wC75MXT0%24]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[%e6%8e%a8%e8%8d%90]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>深圳的治安真是乱</title>
		<link>http://jeff.familyyu.net/2005/07/28/%e6%b7%b1%e5%9c%b3%e7%9a%84%e6%b2%bb%e5%ae%89%e7%9c%9f%e6%98%af%e4%b9%b1/</link>
		<pubDate>Thu, 28 Jul 2005 05:39:56 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang1.wordpress.com/2005/07/28/%e6%b7%b1%e5%9c%b3%e7%9a%84%e6%b2%bb%e5%ae%89%e7%9c%9f%e6%98%af%e4%b9%b1</guid>
		<description></description>
		<content:encoded><![CDATA[<div id="msgcns!4001C604AF3F011!219" class="bvMsg">
<div>昨天晚上7点多,我们公司的同事在公司附件的楼下的公车站被人抢劫并被打伤.想想歹徒真是猖狂.....自己以后要小心点!学余世维,对任何事情都谨慎,注意观察!</div>
</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>112</wp:post_id>
		<wp:post_date>2005-07-28 05:39:56</wp:post_date>
		<wp:post_date_gmt>2005-07-28 05:39:56</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e6%b7%b1%e5%9c%b3%e7%9a%84%e6%b2%bb%e5%ae%89%e7%9c%9f%e6%98%af%e4%b9%b1</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="chinese"><![CDATA[Chinese]]></category>
		<category domain="category" nicename="others"><![CDATA[Others]]></category>
		<wp:postmeta>
			<wp:meta_key>spaces_a43755b404d273dfcedbd14ccb4f51ab_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[http://cid-04001c604af3f011.users.api.live.net/Users(288261576051650577)/Blogs('4001C604AF3F011!102')/Entries('4001C604AF3F011!219')?authkey=X13wC75MXT0%24]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>26</wp:comment_id>
			<wp:comment_author><![CDATA[Epin]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2005-07-29 04:58:11</wp:comment_date>
			<wp:comment_date_gmt>2005-07-29 04:58:11</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[当然你不可以算入老弱病残一类，嗯，孕倒是可以考虑的]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>27</wp:comment_id>
			<wp:comment_author><![CDATA[anson]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2005-07-29 02:28:13</wp:comment_date>
			<wp:comment_date_gmt>2005-07-29 02:28:13</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[我觉得你没必要担心歹徒也是有职业道德，他不会对老弱病残下手。。。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>搬进新家咯!!</title>
		<link>http://jeff.familyyu.net/2005/07/25/%e6%90%ac%e8%bf%9b%e6%96%b0%e5%ae%b6%e5%92%af/</link>
		<pubDate>Mon, 25 Jul 2005 01:16:44 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang1.wordpress.com/2005/07/25/%e6%90%ac%e8%bf%9b%e6%96%b0%e5%ae%b6%e5%92%af</guid>
		<description></description>
		<content:encoded><![CDATA[<div id="msgcns!4001C604AF3F011!209" class="bvMsg">
<div>昨天终于搬家了.前天早上找中介看了套3房1厅的房子,幸运的是,我们对那套房子挺满意的.全家私家电,有空调,月租1600,觉得价格方面还可以.所以我们当天就定了下来.然后昨天就搬进去住了.这家的房东是有车一族,而且好像还好几套房子....
昨天早上卖了刚过来深圳时候买的一些二手床,热水器,床头柜.原来买的时候花了270,昨天居然只能卖80元,还搭进了我同学刚买的10元的凳子.:( , 没想到2手市场还真TMD黑,贬值太快了吧!!!!!
不过因为对于现在所住的房子还挺满意的,所以想就算了,这回终于可以度过这个夏天了,,,,,准备再过段时间去配台电脑,然后拉个ADSL,生活质量就提高上去了.</div>
</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>113</wp:post_id>
		<wp:post_date>2005-07-25 01:16:44</wp:post_date>
		<wp:post_date_gmt>2005-07-25 01:16:44</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e6%90%ac%e8%bf%9b%e6%96%b0%e5%ae%b6%e5%92%af</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="chinese"><![CDATA[Chinese]]></category>
		<category domain="category" nicename="others"><![CDATA[Others]]></category>
		<wp:postmeta>
			<wp:meta_key>spaces_a43755b404d273dfcedbd14ccb4f51ab_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[http://cid-04001c604af3f011.users.api.live.net/Users(288261576051650577)/Blogs('4001C604AF3F011!102')/Entries('4001C604AF3F011!209')?authkey=X13wC75MXT0%24]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>22</wp:comment_id>
			<wp:comment_author><![CDATA[anson]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2005-07-29 02:29:12</wp:comment_date>
			<wp:comment_date_gmt>2005-07-29 02:29:12</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[都几点了，还做梦]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>23</wp:comment_id>
			<wp:comment_author><![CDATA[Jeff]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2005-07-27 01:09:35</wp:comment_date>
			<wp:comment_date_gmt>2005-07-27 01:09:35</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[to Epin_chen: 这是真的吗?非常兴趣..你有空把她们的照片发给我,我突然想到皇帝选妃的场面了.:)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>24</wp:comment_id>
			<wp:comment_author><![CDATA[Epin]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2005-07-26 04:30:34</wp:comment_date>
			<wp:comment_date_gmt>2005-07-26 04:30:34</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[哈哈，是啊，马上部门就要来至少三四十个应届毕业生啦，可以慢慢挑啦！即使不满意，转手出去也可以赚的不少介绍费吧，呵呵！有兴趣吗？]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>25</wp:comment_id>
			<wp:comment_author><![CDATA[anson]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2005-07-25 12:23:51</wp:comment_date>
			<wp:comment_date_gmt>2005-07-25 12:23:51</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[乔迁之喜。还欠个女人吧。。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>我的CS老矣!?</title>
		<link>http://jeff.familyyu.net/2005/07/23/%e6%88%91%e7%9a%84cs%e8%80%81%e7%9f%a3/</link>
		<pubDate>Sat, 23 Jul 2005 11:10:26 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang1.wordpress.com/2005/07/23/%e6%88%91%e7%9a%84cs%e8%80%81%e7%9f%a3</guid>
		<description></description>
		<content:encoded><![CDATA[<div id="msgcns!4001C604AF3F011!207" class="bvMsg">
<div>很久没打CS了，今天晚上来网吧打AWP的那张地图,成绩惨不忍睹．打到8:20的时候，我终于难受到退出去了.:(
回想到去年对CS的狂热，每天吃完晚饭就上去开战，我当时称那个时段为 "Happy Time" . :) 现在已经很久没去打CS了．
或许我的CS真的是老了，可能会有人偷偷告诉我"我觉得你的CS从未年轻过." ,我就知道总有那么些人嫉妒我当时的辉煌，罢了，罢了，我不与尔等一般见识.!</div>
</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>114</wp:post_id>
		<wp:post_date>2005-07-23 11:10:26</wp:post_date>
		<wp:post_date_gmt>2005-07-23 11:10:26</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e6%88%91%e7%9a%84cs%e8%80%81%e7%9f%a3</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="chinese"><![CDATA[Chinese]]></category>
		<category domain="category" nicename="others"><![CDATA[Others]]></category>
		<wp:postmeta>
			<wp:meta_key>spaces_a43755b404d273dfcedbd14ccb4f51ab_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[http://cid-04001c604af3f011.users.api.live.net/Users(288261576051650577)/Blogs('4001C604AF3F011!102')/Entries('4001C604AF3F011!207')?authkey=X13wC75MXT0%24]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>21</wp:comment_id>
			<wp:comment_author><![CDATA[anson]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2005-07-24 16:03:22</wp:comment_date>
			<wp:comment_date_gmt>2005-07-24 16:03:22</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[以前就没有一次能干过我的现在更差了不提了。。。我让你一只手好了]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>英语口语和听力真难提高!</title>
		<link>http://jeff.familyyu.net/2005/07/21/%e8%8b%b1%e8%af%ad%e5%8f%a3%e8%af%ad%e5%92%8c%e5%90%ac%e5%8a%9b%e7%9c%9f%e9%9a%be%e6%8f%90%e9%ab%98/</link>
		<pubDate>Thu, 21 Jul 2005 05:20:55 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang1.wordpress.com/2005/07/21/%e8%8b%b1%e8%af%ad%e5%8f%a3%e8%af%ad%e5%92%8c%e5%90%ac%e5%8a%9b%e7%9c%9f%e9%9a%be%e6%8f%90%e9%ab%98</guid>
		<description></description>
		<content:encoded><![CDATA[<div id="msgcns!4001C604AF3F011!205" class="bvMsg">
<div>经过这么将近2个月的听力训练.(每天中午半个小时听力),感觉没什么进步.:(.. ,觉得要学好英语,特别是口语和听力,环境真的是太重要了,因为毕竟每天没什么机会用英文交流,虽然每天看很多英文资料.或许这就是一个典型的英语哑巴人......</div>
</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>115</wp:post_id>
		<wp:post_date>2005-07-21 05:20:55</wp:post_date>
		<wp:post_date_gmt>2005-07-21 05:20:55</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e8%8b%b1%e8%af%ad%e5%8f%a3%e8%af%ad%e5%92%8c%e5%90%ac%e5%8a%9b%e7%9c%9f%e9%9a%be%e6%8f%90%e9%ab%98</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="chinese"><![CDATA[Chinese]]></category>
		<category domain="category" nicename="thoughts"><![CDATA[Thoughts]]></category>
		<category domain="post_tag" nicename="%e8%87%aa%e8%a8%80%e8%87%aa%e8%af%ad"><![CDATA[自言自语]]></category>
		<wp:postmeta>
			<wp:meta_key>spaces_a43755b404d273dfcedbd14ccb4f51ab_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[http://cid-04001c604af3f011.users.api.live.net/Users(288261576051650577)/Blogs('4001C604AF3F011!102')/Entries('4001C604AF3F011!205')?authkey=X13wC75MXT0%24]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_efficient_related_posts</wp:meta_key>
			<wp:meta_value><![CDATA[a:9:{i:0;a:4:{s:2:"ID";s:2:"41";s:10:"post_title";s:27:"梦见自己大学刚毕业";s:7:"matches";s:1:"1";s:9:"permalink";s:118:"http://jeff.familyyu.net/2006/09/02/%e6%a2%a6%e8%a7%81%e8%87%aa%e5%b7%b1%e5%a4%a7%e5%ad%a6%e5%88%9a%e6%af%95%e4%b8%9a/";}i:1;a:4:{s:2:"ID";s:2:"88";s:10:"post_title";s:35:"爱好过多=没有真正的爱好?";s:7:"matches";s:1:"1";s:9:"permalink";s:136:"http://jeff.familyyu.net/2005/12/01/%e7%88%b1%e5%a5%bd%e8%bf%87%e5%a4%9a%e6%b2%a1%e6%9c%89%e7%9c%9f%e6%ad%a3%e7%9a%84%e7%88%b1%e5%a5%bd/";}i:2;a:4:{s:2:"ID";s:3:"101";s:10:"post_title";s:35:"写Blog是否有暴露狂的症状?";s:7:"matches";s:1:"1";s:9:"permalink";s:131:"http://jeff.familyyu.net/2005/08/30/%e5%86%99blog%e6%98%af%e5%90%a6%e6%9c%89%e6%9a%b4%e9%9c%b2%e7%8b%82%e7%9a%84%e7%97%87%e7%8a%b6/";}i:3;a:4:{s:2:"ID";s:3:"102";s:10:"post_title";s:13:"相信命运?";s:7:"matches";s:1:"1";s:9:"permalink";s:73:"http://jeff.familyyu.net/2005/08/30/%e7%9b%b8%e4%bf%a1%e5%91%bd%e8%bf%90/";}i:4;a:4:{s:2:"ID";s:3:"104";s:10:"post_title";s:12:"论 "坚持"";s:7:"matches";s:1:"1";s:9:"permalink";s:65:"http://jeff.familyyu.net/2005/08/27/%e8%ae%ba-%e5%9d%9a%e6%8c%81/";}i:5;a:4:{s:2:"ID";s:3:"120";s:10:"post_title";s:14:"Blog or Track?";s:7:"matches";s:1:"1";s:9:"permalink";s:50:"http://jeff.familyyu.net/2005/06/23/blog-or-track/";}i:6;a:4:{s:2:"ID";s:3:"127";s:10:"post_title";s:25:"《你的灯亮着吗?》";s:7:"matches";s:1:"1";s:9:"permalink";s:109:"http://jeff.familyyu.net/2005/06/07/%e3%80%8a%e4%bd%a0%e7%9a%84%e7%81%af%e4%ba%ae%e7%9d%80%e5%90%97%e3%80%8b/";}i:7;a:4:{s:2:"ID";s:3:"134";s:10:"post_title";s:30:"对自己人生规划的思考";s:7:"matches";s:1:"1";s:9:"permalink";s:127:"http://jeff.familyyu.net/2005/05/23/%e5%af%b9%e8%87%aa%e5%b7%b1%e4%ba%ba%e7%94%9f%e8%a7%84%e5%88%92%e7%9a%84%e6%80%9d%e8%80%83/";}i:8;a:4:{s:2:"ID";s:3:"139";s:10:"post_title";s:21:"程序代码和英语";s:7:"matches";s:1:"1";s:9:"permalink";s:100:"http://jeff.familyyu.net/2005/05/19/%e7%a8%8b%e5%ba%8f%e4%bb%a3%e7%a0%81%e5%92%8c%e8%8b%b1%e8%af%ad/";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_relation_threshold</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>决定搬家了...</title>
		<link>http://jeff.familyyu.net/2005/07/19/%e5%86%b3%e5%ae%9a%e6%90%ac%e5%ae%b6%e4%ba%86/</link>
		<pubDate>Tue, 19 Jul 2005 04:24:39 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang1.wordpress.com/2005/07/19/%e5%86%b3%e5%ae%9a%e6%90%ac%e5%ae%b6%e4%ba%86</guid>
		<description></description>
		<content:encoded><![CDATA[<div id="msgcns!4001C604AF3F011!203" class="bvMsg">
<div>昨晚居然从10点停电停到了1点,丫的,让我错看&lt;lost&gt;不说,这么大热的天,没电实在是太恐怖了,5分钟进出一次浴室,I couldnot bear it again.如果找房子找的顺利,这个周末的周日就搬走...然后买空调..至于那一个月的押金,肯定是要不回来了,哎...深圳的房东就TMD现实,一点人情味儿都没!!!</div>
</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>116</wp:post_id>
		<wp:post_date>2005-07-19 04:24:39</wp:post_date>
		<wp:post_date_gmt>2005-07-19 04:24:39</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%86%b3%e5%ae%9a%e6%90%ac%e5%ae%b6%e4%ba%86</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="chinese"><![CDATA[Chinese]]></category>
		<category domain="category" nicename="others"><![CDATA[Others]]></category>
		<wp:postmeta>
			<wp:meta_key>spaces_a43755b404d273dfcedbd14ccb4f51ab_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[http://cid-04001c604af3f011.users.api.live.net/Users(288261576051650577)/Blogs('4001C604AF3F011!102')/Entries('4001C604AF3F011!203')?authkey=X13wC75MXT0%24]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>20</wp:comment_id>
			<wp:comment_author><![CDATA[金和]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2005-07-20 00:31:00</wp:comment_date>
			<wp:comment_date_gmt>2005-07-20 00:31:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[TMD，哪里都是一样的。有本事就找个不用押金的。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>深圳的天气真是热....</title>
		<link>http://jeff.familyyu.net/2005/07/18/%e6%b7%b1%e5%9c%b3%e7%9a%84%e5%a4%a9%e6%b0%94%e7%9c%9f%e6%98%af%e7%83%ad/</link>
		<pubDate>Mon, 18 Jul 2005 07:40:49 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang1.wordpress.com/2005/07/18/%e6%b7%b1%e5%9c%b3%e7%9a%84%e5%a4%a9%e6%b0%94%e7%9c%9f%e6%98%af%e7%83%ad</guid>
		<description></description>
		<content:encoded><![CDATA[<div id="msgcns!4001C604AF3F011!201" class="bvMsg">
<div>这两天的天气还真是热,昨天晚上睡到1:45,结果还是因为太热(风扇已经开到最高档了.:( )醒过来,后来只好再去冲个凉,再回去睡觉.本来想买个空调,但现在租的房子是农民房,就算买了,他也不一定会让我安装,这一切的一切只好等换房子再说了,房子9月份到期...这么热的天,让我想起了刚毕业的那个暑假,那个福州的天气热的我晚上也都睡不着,当时也是开两个风扇....没用空调的夏天 ,,,,恐怖的说!</div>
</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>117</wp:post_id>
		<wp:post_date>2005-07-18 07:40:49</wp:post_date>
		<wp:post_date_gmt>2005-07-18 07:40:49</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e6%b7%b1%e5%9c%b3%e7%9a%84%e5%a4%a9%e6%b0%94%e7%9c%9f%e6%98%af%e7%83%ad</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="chinese"><![CDATA[Chinese]]></category>
		<category domain="category" nicename="others"><![CDATA[Others]]></category>
		<wp:postmeta>
			<wp:meta_key>spaces_a43755b404d273dfcedbd14ccb4f51ab_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[http://cid-04001c604af3f011.users.api.live.net/Users(288261576051650577)/Blogs('4001C604AF3F011!102')/Entries('4001C604AF3F011!201')?authkey=X13wC75MXT0%24]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>19</wp:comment_id>
			<wp:comment_author><![CDATA[金和]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2005-07-18 08:33:46</wp:comment_date>
			<wp:comment_date_gmt>2005-07-18 08:33:46</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[我现在有空调很happy，又开始担心到月底空调费会不会超过千把块。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>我和小强有个战争</title>
		<link>http://jeff.familyyu.net/2005/07/13/%e6%88%91%e5%92%8c%e5%b0%8f%e5%bc%ba%e6%9c%89%e4%b8%aa%e6%88%98%e4%ba%89/</link>
		<pubDate>Wed, 13 Jul 2005 04:58:20 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang1.wordpress.com/2005/07/13/%e6%88%91%e5%92%8c%e5%b0%8f%e5%bc%ba%e6%9c%89%e4%b8%aa%e6%88%98%e4%ba%89</guid>
		<description></description>
		<content:encoded><![CDATA[<div id="msgcns!4001C604AF3F011!197" class="bvMsg">
<div>深圳的小强真是多..关键是这边连未成年的小强都敢跑出来作案.昨天晚上看了一下,小强多的让我吓了一身冷汗,今天晚上准备去买些杀伤性武器,誓与小强作战到底.</div>
<div>"想抢占我的地盘,NO DOOR!"</div>
</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>118</wp:post_id>
		<wp:post_date>2005-07-13 04:58:20</wp:post_date>
		<wp:post_date_gmt>2005-07-13 04:58:20</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e6%88%91%e5%92%8c%e5%b0%8f%e5%bc%ba%e6%9c%89%e4%b8%aa%e6%88%98%e4%ba%89</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="chinese"><![CDATA[Chinese]]></category>
		<category domain="category" nicename="others"><![CDATA[Others]]></category>
		<wp:postmeta>
			<wp:meta_key>spaces_a43755b404d273dfcedbd14ccb4f51ab_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[http://cid-04001c604af3f011.users.api.live.net/Users(288261576051650577)/Blogs('4001C604AF3F011!102')/Entries('4001C604AF3F011!197')?authkey=X13wC75MXT0%24]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>在深圳</title>
		<link>http://jeff.familyyu.net/2005/07/12/%e5%9c%a8%e6%b7%b1%e5%9c%b3/</link>
		<pubDate>Tue, 12 Jul 2005 02:44:42 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang1.wordpress.com/2005/07/12/%e5%9c%a8%e6%b7%b1%e5%9c%b3</guid>
		<description></description>
		<content:encoded><![CDATA[<div id="msgcns!4001C604AF3F011!193" class="bvMsg">
<div>这次来到深圳,可以说是实践了年轻时的想象.记得,以前想象说一个人背个背包,然后带些钱,出去闯.而今这么做了,并没有儿时想象中的很爽或者很酷.其实,就刚开始过来的一两星期,可能需要处理的事情比较多,比较繁琐,而后如果工作和住所一旦确定下.其实,并无多大区别.
在深圳工作生活和工作段时间后,什么感觉呢？感觉这边比较节奏会比较快,一天很快就过去.上班时间是8:30--6:00 OR (9:00 -- 6:30),每天都要8个小时工作时间.还有就是这边的电视节目比较好看.;-)。不过,给我最大的感觉是，这边的差不多的公司一般会组织比较多的活动。在我们公司,打出员工要 "Work hard,Play hard". 很多人以为来深圳可能会积累更多钱,就我自己今年来看,肯定不会积攒多少钱,这边虽然工作稍微高了些,但消费也高.而且来这边后,一到周末,一般会想去哪里活动,不像在福州,最多就去打打篮球,要不就在宿舍看看电视,看看书。所以消费的费用又要多很多。
这边的技术力量,应该从整体来说,肯定要比福州强.但是我目前所在的公司的技术和我之前在的公司,技术实力应该差不多。又或者是因为有些技术架构不同的原因.不过我之前公司的两个老板技术实力确实很强。这点,就算我到了深圳,我还是有这种感觉.:-).不过这边公司的软件过程管理的比较好些.虽然是我个人不大喜欢的CMM模式,但是毕竟在中国用XP管理的公司很少,或许现在的时机不够成熟.Martin fowler曾经说,有些人疑惑说这种情况是否因为XP没有类似CMM那样有等级的分法？Martin fowler说有等级分法的XP就不是XP了,因为那是他的特性.
说着说着,又说到技术.一说到技术,我又在仅有的半桶水里面瞎亢奋... :-(
记得去年在马尾的时候,有时候到星期天的时候,自己一个人在宿舍里看着外面的山水的时候,自己在思考着说,自己是否因为太注重当今物质的东西,而错过了很多自然的风景呢......</div>
<div>来深圳后,自己也不像以前那么拼命的研究技术了(又或许过了那个年轻的阶段??),技术是为解决某种问题而存在的,所以,很多时候,只需要了解技术,不需要每个都精通,不可能也无须。
最后,我觉得,工作只是工作,工作并不是生活,生活有很多部分组成的,其中很重要的一部分就是玩.:)</div>
<div></div>
</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>119</wp:post_id>
		<wp:post_date>2005-07-12 02:44:42</wp:post_date>
		<wp:post_date_gmt>2005-07-12 02:44:42</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%9c%a8%e6%b7%b1%e5%9c%b3</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="chinese"><![CDATA[Chinese]]></category>
		<category domain="post_tag" nicename="shenzhen"><![CDATA[Shenzhen]]></category>
		<category domain="category" nicename="thoughts"><![CDATA[Thoughts]]></category>
		<wp:postmeta>
			<wp:meta_key>spaces_a43755b404d273dfcedbd14ccb4f51ab_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[http://cid-04001c604af3f011.users.api.live.net/Users(288261576051650577)/Blogs('4001C604AF3F011!102')/Entries('4001C604AF3F011!193')?authkey=X13wC75MXT0%24]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_efficient_related_posts</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{i:0;a:4:{s:2:"ID";s:2:"92";s:10:"post_title";s:16:"深圳, Sin City";s:7:"matches";s:1:"1";s:9:"permalink";s:64:"http://jeff.familyyu.net/2005/10/27/%e6%b7%b1%e5%9c%b3-sin-city/";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_relation_threshold</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>二月思绪整理录</title>
		<link>http://jeff.familyyu.net/2006/02/15/%e4%ba%8c%e6%9c%88%e6%80%9d%e7%bb%aa%e6%95%b4%e7%90%86%e5%bd%95/</link>
		<pubDate>Wed, 15 Feb 2006 15:59:45 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang1.wordpress.com/2006/02/15/%e4%ba%8c%e6%9c%88%e6%80%9d%e7%bb%aa%e6%95%b4%e7%90%86%e5%bd%95</guid>
		<description></description>
		<content:encoded><![CDATA[<div id="msgcns!4001C604AF3F011!341" class="bvMsg">
<div>
<div>最近一直没什么心情研究技术,总觉得有一大堆东西等着去做,但却每天回家都没去做,比如刚买的好几本书也都还没怎么看,最近炒的热热火火的Ruby on rail等等. 每天晚上回来一般就下面条吃,然后跟舍友一起挑帝国,我发觉游戏真是消遣时间的好方法,玩个两三局就到十二点了.</div>
<div>最近呢也一直在盘算着最好是能找个免费的wiki空间,这样可以跟别人一起合写文档等,其实我现在不大喜欢blog,感觉功能太弱了,就比如不能传word文档附件啊,而且我最近也比较喜欢用wiki markup来写文章,很方便,而且效果还很好看,我找到一个商业的,但是对于个人是免费的enterprise wiki (confluence: <a href="http://www.atlassian.com/software/confluence/">http://www.atlassian.com/software/confluence/</a>),功能异常强大,贼好使...本来想把这推荐给公司,因为公司刚好就缺这个管理文档的东西,但是毕竟这不是open source的; 我呢也找到一个免费的wiki空间,上 pbwiki (http://<a href="http://www.pbwiki.com/">www.pbwiki.com</a>)申请的,但是相比confluence,那就差多了.</div>
<div>这段时间过得有点浑浑噩噩,没有很清楚的思路,回来吧,就一起打游戏(找到了在大学时候,宿舍人一起打游戏的感觉),完了呢,就睡觉,有时候吧,有时间了也不知道做什么,或许是事儿太多的时候你也不知道做哪件,烦心的事儿吧,也有......,所以,有时候干脆就想用游戏来获取短暂的快乐吧.:)</div>
<div>说是总结,好歹也得有个展望未来吧,那接下去的呢,就是一是把买回来的书看看,把Java的知识,一些Open source的framework等等梳理梳理,最好是能写几个读后感出来;同时呢,也研究下Ruby on rail,毕竟这年头太多人研究这个了,我看blog上有个老外说,"It is great to get paid by developing ruby.",所以呢,我也就准备凑个数上去瞅瞅看,免得以后落伍了;再者呢,我现在已经在自己的电脑上安装了confluence,以后或许会用这个来写一些文档,其实,自己或许也可以尝试着做个这样的,但是或许刚开始比较有动力,后来就没了,而且这个软件功能这么强大,也很难做....最多我目前有希望得就是模仿他这个自己做做看,用梨叔的话,那就是说"主要是锻炼队伍.:)"</div>
<div>好了,先就总结这么多吧.</div>
</div>
</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>79</wp:post_id>
		<wp:post_date>2006-02-15 15:59:45</wp:post_date>
		<wp:post_date_gmt>2006-02-15 15:59:45</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e4%ba%8c%e6%9c%88%e6%80%9d%e7%bb%aa%e6%95%b4%e7%90%86%e5%bd%95</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="chinese"><![CDATA[Chinese]]></category>
		<category domain="category" nicename="thoughts"><![CDATA[Thoughts]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>spaces_a43755b404d273dfcedbd14ccb4f51ab_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[http://cid-04001c604af3f011.users.api.live.net/Users(288261576051650577)/Blogs('4001C604AF3F011!102')/Entries('4001C604AF3F011!341')?authkey=X13wC75MXT0%24]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Off to celebrate Lunar Year</title>
		<link>http://jeff.familyyu.net/2006/01/25/off-to-celebrate-lunar-year/</link>
		<pubDate>Wed, 25 Jan 2006 16:45:31 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang1.wordpress.com/2006/01/25/off-to-celebrate-lunar-year</guid>
		<description></description>
		<content:encoded><![CDATA[<div id="msgcns!4001C604AF3F011!337" class="bvMsg">
<div>Happy Chinese New Year, Hope all of you have a good time. ;)</div>
</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>80</wp:post_id>
		<wp:post_date>2006-01-25 16:45:31</wp:post_date>
		<wp:post_date_gmt>2006-01-25 16:45:31</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>off-to-celebrate-lunar-year</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="others"><![CDATA[Others]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>spaces_a43755b404d273dfcedbd14ccb4f51ab_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[http://cid-04001c604af3f011.users.api.live.net/Users(288261576051650577)/Blogs('4001C604AF3F011!102')/Entries('4001C604AF3F011!337')?authkey=X13wC75MXT0%24]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Joel On Software</title>
		<link>http://jeff.familyyu.net/2006/01/01/joel-on-software/</link>
		<pubDate>Sun, 01 Jan 2006 18:49:10 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang1.wordpress.com/2006/01/01/joel-on-software</guid>
		<description></description>
		<content:encoded><![CDATA[<div id="msgcns!4001C604AF3F011!316" class="bvMsg"><div> Joel On Software (<a href="http://www.joelonsoftware.com/">http://www.joelonsoftware.com/</a>),里面有些文章我觉得挺好的,有本书叫&lt;Joel说软件&gt;,就是把这个网站的一些文章摘录,然后出书,但我没看过.下面列列我看过的一些文章.</div>
<div> 
<hr />
</div>
<div> The Law of Leaky Abstractions (<a href="http://www.joelonsoftware.com/articles/LeakyAbstractions.html">http://www.joelonsoftware.com/articles/LeakyAbstractions.html</a>)</div>
<div>   写软件,其实就是玩&quot;抽象&quot;,怎么说呢?我们现在写的Java程序,其实就是已经经过了封装,理论上来说,比如最开始得用机器语言来编写,现在我们可以用高级语言来,这个过程就是高级语言对机器语言进行了抽象封装,但是,每一次的抽象,都会存在着抽象的泄漏(Leaky Abstraction),这篇文章说的就是这个问题.</div>
<div>
<hr />
The Perils of JavaSchools(<a href="http://www.joelonsoftware.com/printerFriendly/articles/ThePerilsofJavaSchools.html">http://www.joelonsoftware.com/printerFriendly/articles/ThePerilsofJavaSchools.html</a>)</div>
<div>  这篇文章是说,随着语言的发展等,比如现在的Java,入门的比较容易,而且实际编程中很少涉及到比如链表,递归等传统比较难的部分.所以在学校,学生对这些不重视.(据说早期因为这些比较难的课程,很多人学到一半,就开始转系或者退学的),但是这些其实正是编程的基础,为什么我们现在比较少用到呢,因为已经有人帮我们抽象了,封装了.</div>
<div>  理论上有人帮我们抽象了,封装了,我们这样调用的就更方便了,更容易了.但是同时因此却更少人关注底层的了,很多人都关注OOP等这些概念了.</div>
<div>  我感觉其实他就是说现在学生对算法,数据结构等的不够重视,其实, 想想我自己当年学习这些的时候,也都没认真学,说白了，感觉主要是自己当时浮躁,老是学些那种外面比较流行的语言啊等的，对基础的不是很重视,不过回顾自己工作几年,我到现在确实都很少用到递归,更别说其他复杂的算法等...</div>
<div>  针对这篇文章,TSS有个帖子专门讨论(<a href="http://www.theserverside.com/news/thread.tss?thread_id=38301">http://www.theserverside.com/news/thread.tss?thread_id=38301</a>).</div></div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>81</wp:post_id>
		<wp:post_date>2006-01-01 18:49:10</wp:post_date>
		<wp:post_date_gmt>2006-01-01 18:49:10</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>joel-on-software</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="java"><![CDATA[Java]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>spaces_a43755b404d273dfcedbd14ccb4f51ab_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[http://cid-04001c604af3f011.users.api.live.net/Users(288261576051650577)/Blogs('4001C604AF3F011!102')/Entries('4001C604AF3F011!316')?authkey=X13wC75MXT0%24]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>第一次...</title>
		<link>http://jeff.familyyu.net/2005/12/31/%e7%ac%ac%e4%b8%80%e6%ac%a1/</link>
		<pubDate>Sat, 31 Dec 2005 17:57:47 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang1.wordpress.com/2005/12/31/%e7%ac%ac%e4%b8%80%e6%ac%a1</guid>
		<description></description>
		<content:encoded><![CDATA[<div id="msgcns!4001C604AF3F011!313" class="bvMsg">
<div>今天,确切的说是昨天,去过店游玩.总得来说,我自己感觉今天的组织不是很成功,可能是因为租不到自行车导致到后面的行程有点乱,感觉这次队伍人群有点分散, 所以没有多少集体活动..</div>
<div>但是,这次是我第一次在车上主持游戏,也算圆了我主持梦啊,哈哈,据观众反应,效果不错.;).</div>
<div>我这次主持能这么成功,除了和前个晚上和Troy做了功课外,还和当时有几个老外他们的表演有关系,因为他们很干脆,不会扭扭捏捏,所以,这样很容易把大家的气氛弄起来,当然了,还和我的不紧张的心里因素也是分不开滴.(有人开始吐了??我想到会有人吐,只是没想到吐得这么快?)</div>
<div>在脑海中回想下主持风格,我发现有这么几种.</div>
<div>1. 吴宗宪,康康等的路线,穿插着些荤笑话.</div>
<div>2. 经常像奥斯卡颁奖晚会上的那种风格,就是讽刺一些政治,连串引入最近发生的一些事情,还有自嘲等.</div>
<div>我个人觉得第1种的风格看多了,会觉得没劲,没啥意思.而且第1种风格最好是多个一起主持,好弄成一唱一和.我其实更喜欢的是第2种的风格,这两次看奥斯卡颁奖晚会的时候,我都挺喜欢看刚开始主持人表演的那段,第2种的风格一般是一个主持人的,所以这种风格适合在车上刚开始的破冰...</div>
<div>不过感觉我现在的主持风格就是有点: 讽刺 + 自嘲. (我也没想到主持一次就有风格了,哈哈)</div>
<div>不过做主持人,始终要记住,你是个配角,你不能说太多话,你只是负责过渡.要不就会变得有点本末倒置,就会惹人眼了,所以,在车上做游戏的时候,除了开场进入主题的时候,需要多说话后,中间的要尽量做到,好笑又简洁,如果说的不好笑,也一定要简洁.因为只有让大家互动, 气氛才会真正的起来.
这是我第一次主持东西,所以我花了些时间来做这个功课,我发现我一般第一次做东西的时候，都做的比较好。</div>
<div>比如:第一次做红烧鱼;第一次做红萝卜炒肉;第一次做莆田卤面.
再比如:写2006年的第一次Blog.. :)</div>
<div></div>
<div>附录:昨天玩的车上游戏,For Your Reference.</div>
<div>-------------------------------------------------------------------------------------------------</div>
<div><span style="color: #ff0000;"> 问三个问题，第一个问题是：说出你最喜欢乘坐的交通工具，第二个问题：说出你最喜欢的动物。第三个问题是：说出你最爱说的口头禅。
说了一圈后，你再说：“我们接下来做一个连环游戏。大家记得自己刚才说的话吗？现在我们将自己刚才说的答案连成一句话。这句话的格式是这样的：我乘做着。。。（最喜欢的那个交通工具），遇见了。。。（最爱的那个动物），我对他说：。。。我爱你。那个动物说：。。。（你的那个口头禅）</span></div>
<div><span style="color: #ff0000;"> </span><span style="color: #000000;">我们做游戏的时候,加上用他们自己的方言再说遍,效果更好.:)</span></div>
<div>我们做游戏的时候,有个答案是这样的:</div>
<div><span style="color: #ff0000;">我乘做着飞机,遇见了狗，我对他说：狗,我爱你。狗说：做到你满意为止.</span></div>
<div><span style="color: #ff0000;"> </span><span style="color: #000000;">一阵暴笑..</span></div>
<div>-------------------------------------------------------------------------------------------------</div>
<div></div>
</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>82</wp:post_id>
		<wp:post_date>2005-12-31 17:57:47</wp:post_date>
		<wp:post_date_gmt>2005-12-31 17:57:47</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e7%ac%ac%e4%b8%80%e6%ac%a1</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="chinese"><![CDATA[Chinese]]></category>
		<category domain="category" nicename="others"><![CDATA[Others]]></category>
		<category domain="post_tag" nicename="travel"><![CDATA[Travel]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>spaces_a43755b404d273dfcedbd14ccb4f51ab_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[http://cid-04001c604af3f011.users.api.live.net/Users(288261576051650577)/Blogs('4001C604AF3F011!102')/Entries('4001C604AF3F011!313')?authkey=X13wC75MXT0%24]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_efficient_related_posts</wp:meta_key>
			<wp:meta_value><![CDATA[a:3:{i:0;a:4:{s:2:"ID";s:2:"69";s:10:"post_title";s:12:"阳朔之行";s:7:"matches";s:1:"1";s:9:"permalink";s:73:"http://jeff.familyyu.net/2006/04/08/%e9%98%b3%e6%9c%94%e4%b9%8b%e8%a1%8c/";}i:1;a:4:{s:2:"ID";s:3:"108";s:10:"post_title";s:20:""杀人"游戏介绍";s:7:"matches";s:1:"1";s:9:"permalink";s:91:"http://jeff.familyyu.net/2005/08/11/%e6%9d%80%e4%ba%ba%e6%b8%b8%e6%88%8f%e4%bb%8b%e7%bb%8d/";}i:2;a:4:{s:2:"ID";s:3:"128";s:10:"post_title";s:27:"游玩大鹏古城和南澳";s:7:"matches";s:1:"1";s:9:"permalink";s:118:"http://jeff.familyyu.net/2005/05/24/%e6%b8%b8%e7%8e%a9%e5%a4%a7%e9%b9%8f%e5%8f%a4%e5%9f%8e%e5%92%8c%e5%8d%97%e6%be%b3/";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_relation_threshold</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>King Kong (金刚)</title>
		<link>http://jeff.familyyu.net/2005/12/29/king-kong-%e9%87%91%e5%88%9a/</link>
		<pubDate>Thu, 29 Dec 2005 14:25:08 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang1.wordpress.com/2005/12/29/king-kong-%e9%87%91%e5%88%9a</guid>
		<description></description>
		<content:encoded><![CDATA[<div id="msgcns!4001C604AF3F011!311" class="bvMsg">
<div>前两个晚上看完了长达3个小时的金刚,是指环王的导演翻拍旧片.不过早的那片我是没看过,感觉这部片还行,但就是有点长(难道这导演不习惯拍短片?),里面的声音效果不错,不知道是不是我下载盗版的问题,画片有时候看的不是很清晰,如果是正版的,我想画片效果也是很不错的.</div>
<div>这部影片主要讲述了一只巨型大猩猩和一个美女的故事(真正的美女与野兽?),主要是突出这个大猩猩的人性,比如当女主角安为他翻跟斗时候，他笑的样子;当安逃离他后,他为了救安,跟两恐龙决斗后,对安的故意不理睬;和安在冰上的嬉戏;其中有个唯美的场景就是猩猩和安在一起看夕阳的场景....给我感觉是这部影片挺感人的,或许是当今社会的现实,冷漠,虚伪,所以才让人感觉到真情的难得.</div>
<div>最后,这只大猩猩死了,被纽约上空的飞机等杀死了,影片中的导演角色人看到猩猩死的时候,说了这么句话: "It was the beauty kill the beast". 因为这只黑猩猩如若一直呆在那个原始森林中,他本可以没事儿的,他就是为了安,才被抓到纽约,才导致最后的死亡!</div>
<div></div>
</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>83</wp:post_id>
		<wp:post_date>2005-12-29 14:25:08</wp:post_date>
		<wp:post_date_gmt>2005-12-29 14:25:08</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>king-kong-%e9%87%91%e5%88%9a</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="chinese"><![CDATA[Chinese]]></category>
		<category domain="post_tag" nicename="king-kong"><![CDATA[King Kong]]></category>
		<category domain="category" nicename="others"><![CDATA[Others]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>spaces_a43755b404d273dfcedbd14ccb4f51ab_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[http://cid-04001c604af3f011.users.api.live.net/Users(288261576051650577)/Blogs('4001C604AF3F011!102')/Entries('4001C604AF3F011!311')?authkey=X13wC75MXT0%24]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_efficient_related_posts</wp:meta_key>
			<wp:meta_value><![CDATA[a:0:{}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_relation_threshold</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>43</wp:comment_id>
			<wp:comment_author><![CDATA[zzyi_2005]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2006-02-23 06:22:49</wp:comment_date>
			<wp:comment_date_gmt>2006-02-23 06:22:49</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[再去电影院看一次吧，的确是部好片～～]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>44</wp:comment_id>
			<wp:comment_author><![CDATA[anson]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2005-12-30 06:12:02</wp:comment_date>
			<wp:comment_date_gmt>2005-12-30 06:12:02</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[ANSON推荐，纯属精品。靠，跟你说要去电影院看。。。别省这个钱嘛]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Label...</title>
		<link>http://jeff.familyyu.net/2005/12/28/label/</link>
		<pubDate>Wed, 28 Dec 2005 02:13:29 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang1.wordpress.com/2005/12/28/label</guid>
		<description></description>
		<content:encoded><![CDATA[<div id="msgcns!4001C604AF3F011!301" class="bvMsg">

Pack it, Label it, Put it in the memory stack.

</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>84</wp:post_id>
		<wp:post_date>2005-12-28 02:13:29</wp:post_date>
		<wp:post_date_gmt>2005-12-28 02:13:29</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>label</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="others"><![CDATA[Others]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>spaces_a43755b404d273dfcedbd14ccb4f51ab_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[http://cid-04001c604af3f011.users.api.live.net/Users(288261576051650577)/Blogs('4001C604AF3F011!102')/Entries('4001C604AF3F011!301')?authkey=X13wC75MXT0%24]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>42</wp:comment_id>
			<wp:comment_author><![CDATA[anson]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2005-12-28 11:59:02</wp:comment_date>
			<wp:comment_date_gmt>2005-12-28 11:59:02</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[label what?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>沉默的大多数</title>
		<link>http://jeff.familyyu.net/2005/12/10/%e6%b2%89%e9%bb%98%e7%9a%84%e5%a4%a7%e5%a4%9a%e6%95%b0/</link>
		<pubDate>Sat, 10 Dec 2005 17:06:57 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang1.wordpress.com/2005/12/10/%e6%b2%89%e9%bb%98%e7%9a%84%e5%a4%a7%e5%a4%9a%e6%95%b0</guid>
		<description></description>
		<content:encoded><![CDATA[<div id="msgcns!4001C604AF3F011!295" class="bvMsg">
<div>今晚回来的时候,特地重新搜索了王小波的&lt;沉默的大多数&gt;(<a href="http://gd.cnread.net/cnread1/xdwx/w/wangxiaobo/qt/023.htm">http://gd.cnread.net/cnread1/xdwx/w/wangxiaobo/qt/023.htm</a>)文章来看,里面有这么一段话:</div>

<hr />

<div>在我周围，像我这种性格的人特多──在公众场合什么都不说，到了私下里则妙语连珠，换言之，对信得过的人什么都说，对信不过的人什么都不说。起初我以为这是因为经历了严酷的时期(文革)，后来才发现，这是中国人的通病。&nbsp;

<hr />

</div>
说实话,我也是差不多这种性格的人,如果刚开始陌生的朋友,我一般不会怎么聊天,但是碰到熟的,我就会大吹特吹,特别是越好的朋友,我玩笑开的越大.(有时候也经常玩笑性的讽刺,但是很多人都不喜欢这种方式,或许我以后只能更多的讽刺自己,但这或许又让人感觉我自卑,所以看来,只好用口水淹没掉这些话),所以,从王小波的理论上,我应该是属于沉默的大多数;但我发觉我自己好像又不是那么回事儿,今晚坐车回来的时候,一个同事在讨论着一个观点,我边睡边听着,我原本不想多说的,但是后来还是没忍住,后来还是大谈特谈,于他争执了一番.这个说明了我还是沉默的不够,如果把我归入沉默的大多数的话?
我今晚后来回想的时候,觉得自己其实没必要去跟他辩解,因为这样,毫无意义,我根本改变不了他的观点,他也无法改变我的观点,那么,从物理角度上来说,我这做的是无用功.既然是无用功,那我何必要做呢? ,那么我这种思想不就属于典型的沉默的大多数了吗?
从王小波的&lt;沉默的大多数&gt;这篇文章的目的来说,他是要批判这种沉默的人,那么我应该做何选择呢?我不知道,但我目前觉得,我更喜欢当沉默的大多数,也或许正是由于沉默的人好当,所以才有了大多数,毕竟,我也只是一个很普通的再不能普通的一个人.

最后,我还想说的是,<span style="color: #ff0000;">谈什么,别谈政治,别空谈,要谈就实质的东西</span><span style="color: #ff0000;">...</span>很多人一直觉得,男人就得关注政治和军事,因为这两样才能真正的体现出你的man,但我对这两样都不怎么感兴趣,在这和平年代,军事我是没法兴趣,也或许是由于我看似单薄的身体; 政治,我也没怎么兴趣,因为总觉得那是跟目前的我相差好远.每个人生下来或许需要做的最重要的事,就是找到自己的位置,找到自己真正所兴趣的一个东西.对我个人而言,政治和军事,这两者对目前的我确实没有吸引力,或许这也注定了我目前没法表现出我man的一面.

</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>85</wp:post_id>
		<wp:post_date>2005-12-10 17:06:57</wp:post_date>
		<wp:post_date_gmt>2005-12-10 17:06:57</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e6%b2%89%e9%bb%98%e7%9a%84%e5%a4%a7%e5%a4%9a%e6%95%b0</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="chinese"><![CDATA[Chinese]]></category>
		<category domain="category" nicename="thoughts"><![CDATA[Thoughts]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>spaces_a43755b404d273dfcedbd14ccb4f51ab_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[http://cid-04001c604af3f011.users.api.live.net/Users(288261576051650577)/Blogs('4001C604AF3F011!102')/Entries('4001C604AF3F011!295')?authkey=X13wC75MXT0%24]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>39</wp:comment_id>
			<wp:comment_author><![CDATA[xiaolu]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2006-04-16 00:33:40</wp:comment_date>
			<wp:comment_date_gmt>2006-04-16 00:33:40</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[做个沉默的人会比较安全
 
 ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>40</wp:comment_id>
			<wp:comment_author><![CDATA[敏敏]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2005-12-29 13:52:59</wp:comment_date>
			<wp:comment_date_gmt>2005-12-29 13:52:59</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[我现在觉得沉没是件好事~元旦快乐！]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>41</wp:comment_id>
			<wp:comment_author><![CDATA[anson]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2005-12-11 12:53:06</wp:comment_date>
			<wp:comment_date_gmt>2005-12-11 12:53:06</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[看完俩篇文章，我脑子里老是想到一句话，“All you need is love。”这其实也是甲克虫乐队的一首歌。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>我在戏里,无法自拔.</title>
		<link>http://jeff.familyyu.net/2005/12/10/%e6%88%91%e5%9c%a8%e6%88%8f%e9%87%8c%e6%97%a0%e6%b3%95%e8%87%aa%e6%8b%94/</link>
		<pubDate>Sat, 10 Dec 2005 16:43:31 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang1.wordpress.com/2005/12/10/%e6%88%91%e5%9c%a8%e6%88%8f%e9%87%8c%e6%97%a0%e6%b3%95%e8%87%aa%e6%8b%94</guid>
		<description></description>
		<content:encoded><![CDATA[<div id="msgcns!4001C604AF3F011!294" class="bvMsg">
<div><span style="color: #000000;">&nbsp;

<hr />

</span></div>
<div><span style="color: #ff0000;">我像一个优伶，时哭时笑着，久而久之，也不知道悲喜是自己的，还是一种表演，很多人在看着我，他们在叫好，但我很孤独，我生活在自己的幻想中，我幻想着生活是个巨大的舞台,我幻想着在这个舞台上,我是主角.但真正现实生活中的我又孤独，因为我只是一个普通的不能再普通的一个配角!</span></div>
<div><span style="color: #ff0000;">&nbsp;

<hr />

</span></div>
<span style="color: #000000;">上面这段话,我写在我Blog的左边"我陷在戏里面"的栏目里,而我现在再一次的做为一篇Blog写在这里,是觉得,我觉得上面这段话真的很能描述我自己对自己的一些看法,或许是由于我以前电影,连续剧看多的缘故,我一直把生活当作了一个舞台,在这个舞台里,我经常的会去想娱乐这个舞台,所以,我非常喜欢这句话:</span><span style="color: #ff0000;">我像一个优伶，时哭时笑着，久而久之，也不知道悲喜是自己的，还是一种表演</span><span style="color: #ff0000;">.</span><span style="color: #000000;">是的,我真的不知道,,我也不知道自己什么时候才能正视自己的生活,什么时候才不去当一个优伶..只能希望这个时候会来的早些!</span>

</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>86</wp:post_id>
		<wp:post_date>2005-12-10 16:43:31</wp:post_date>
		<wp:post_date_gmt>2005-12-10 16:43:31</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e6%88%91%e5%9c%a8%e6%88%8f%e9%87%8c%e6%97%a0%e6%b3%95%e8%87%aa%e6%8b%94</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="chinese"><![CDATA[Chinese]]></category>
		<category domain="category" nicename="thoughts"><![CDATA[Thoughts]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>spaces_a43755b404d273dfcedbd14ccb4f51ab_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[http://cid-04001c604af3f011.users.api.live.net/Users(288261576051650577)/Blogs('4001C604AF3F011!102')/Entries('4001C604AF3F011!294')?authkey=X13wC75MXT0%24]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>独自等待</title>
		<link>http://jeff.familyyu.net/2005/12/06/%e7%8b%ac%e8%87%aa%e7%ad%89%e5%be%85/</link>
		<pubDate>Tue, 06 Dec 2005 16:11:52 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang1.wordpress.com/2005/12/06/%e7%8b%ac%e8%87%aa%e7%ad%89%e5%be%85</guid>
		<description></description>
		<content:encoded><![CDATA[<div id="msgcns!4001C604AF3F011!292" class="bvMsg">
<div>今天晚上看了部片,是昨晚兄弟给我推荐的,片名儿叫&lt;独自等待&gt;,主演是夏雨,李冰冰.看完整部片子,怎么说呢?感觉不错,属于挺搞笑的类型,适合一些情场新手 (newbie)看的,里面有些话还是挺经典点的...</div>
<div>比如片中的李静(暗恋陈文的女孩儿)对陈文说: "你昨晚表现的太拍马屁了,别为什么妞改变自己,不值得!".</div>
<div>因为前个晚上刘荣(陈文喜欢的女孩儿)问陈文说"你喝什么酒,我喝百威".</div>
<div>"我也喝百威!"陈文附和道.</div>
<div>"你最讨厌喝百威,你是喝喜力",李静在刘荣去拿酒的时候,跟座位上的陈文说.</div>
<div>节选这个场景,可能会有人认为我是个大男人主义者.但我感觉,每个人的个性,特点都是不一样的,也正因为不一样,才显得你的不同.如果改变了,那你就不是自己了,而且我感觉,最算能改变,也只是暂时的,在你的目的达成后,你又会恢复你原本的样子,毕竟改变一个人太难了.</div>
<div>这部电影里面充满了北方腔调,而且感觉北方的哥们聚在一起比较豪爽,我喜欢看佟大伪演的片,里面很大一部分就是因为他说话充满了北京腔,然后听他们对骂觉得挺搞笑的,或许相对南方人来说,多了些豪爽,多了些直接.... ;-)</div>
<div>这部片的故事其实没什么新意,讲的就是一个三角的关系,李静暗恋陈文5年多,陈文一直把李静当哥们,然后陈文追刘荣,但没追成功.最后,李静离开去南方,陈文最后孤身一人.在电影的最后,显示这么一句话: "献给从你身边溜走的那个人!",这部片主要的好看在于言语的搞笑,然后大家分析陈文追刘荣过程的好玩...</div>
<div>记得以前在大学看片的时候,经常会记些比较经典的话语,吹牛的时候说,我丫看片的时候还做笔记呢.当时的想法就是,留着以后看可以用的就用上,只是到今天,我还都没用上,更郁闷的是,到今天,我也都忘了.典型的属于,没用就忘了的....</div>
<div>从没写过电影的评论,这算是一种尝试....</div>
<div></div>
<div></div>
</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>87</wp:post_id>
		<wp:post_date>2005-12-06 16:11:52</wp:post_date>
		<wp:post_date_gmt>2005-12-06 16:11:52</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e7%8b%ac%e8%87%aa%e7%ad%89%e5%be%85</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="chinese"><![CDATA[Chinese]]></category>
		<category domain="category" nicename="others"><![CDATA[Others]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>spaces_a43755b404d273dfcedbd14ccb4f51ab_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[http://cid-04001c604af3f011.users.api.live.net/Users(288261576051650577)/Blogs('4001C604AF3F011!102')/Entries('4001C604AF3F011!292')?authkey=X13wC75MXT0%24]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>38</wp:comment_id>
			<wp:comment_author><![CDATA[anson]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2005-12-07 05:10:18</wp:comment_date>
			<wp:comment_date_gmt>2005-12-07 05:10:18</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[ANSON推荐，纯属精品]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>爱好过多=没有真正的爱好?</title>
		<link>http://jeff.familyyu.net/2005/12/01/%e7%88%b1%e5%a5%bd%e8%bf%87%e5%a4%9a%e6%b2%a1%e6%9c%89%e7%9c%9f%e6%ad%a3%e7%9a%84%e7%88%b1%e5%a5%bd/</link>
		<pubDate>Thu, 01 Dec 2005 16:17:01 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang1.wordpress.com/2005/12/01/%e7%88%b1%e5%a5%bd%e8%bf%87%e5%a4%9a%e6%b2%a1%e6%9c%89%e7%9c%9f%e6%ad%a3%e7%9a%84%e7%88%b1%e5%a5%bd</guid>
		<description></description>
		<content:encoded><![CDATA[<div id="msgcns!4001C604AF3F011!290" class="bvMsg">
<div>看了王垠的&lt;清华梦的粉碎&gt;(<a href="http://spaces.msn.com/members/shredderyin/Blog/cns!1pNgrecZe7kpwGw00VyMrS9w!638.entry">http://spaces.msn.com/members/shredderyin/Blog/cns!1pNgrecZe7kpwGw00VyMrS9w!638.entry</a>),文章中说到他渐渐的恢复了自信和正常的生活是从爱上滑板开始的.是的,每个人都要有些自己的兴趣,比如王垠对滑板的兴趣,这样,当遭受到挫折的时候,可以通过去做自己最兴趣的事情,从那里重新拾起对生活的热爱,重新建立自己的信心.</div>
<div>那么,就我个人而言,我有存在自己最兴趣的事情吗?还记得在中学的时候,当我心情郁闷的时候,我会以写日记来让自己的心情好过些,因为写过后,心情就会平静些.后来上大学的时候,就会选择听音乐,有时候把自己关在一个房间里,静静的听音乐.但现在呢?现在如果心情郁闷的时候,我会静静的躺在床上,让睡眠来处理? 说实话,我个人感觉自己的兴趣和爱好还是很多的,我喜欢阅读,打乒乓球,打篮球,旅游,音乐等等,但是总感觉没有存在一个东西让我像王垠热爱滑板那么的入迷,难道说爱好过多相当于没有真正的爱好吗?我不知道,也许,我真正缺少的或许不是什么爱好,而是缺少能让我自信的,能让我真正全身心的领域.可能有的人会问,计算机不是吗? 说实话,我是挺喜欢编程的,挺喜欢电脑的,但或许因为它是我的工作,所以它不是的....</div>
<div>突然想起自己最近对摄影挺感兴趣的,或许我可以把这个当作我真正的爱好,或许..........</div>
</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>88</wp:post_id>
		<wp:post_date>2005-12-01 16:17:01</wp:post_date>
		<wp:post_date_gmt>2005-12-01 16:17:01</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e7%88%b1%e5%a5%bd%e8%bf%87%e5%a4%9a%e6%b2%a1%e6%9c%89%e7%9c%9f%e6%ad%a3%e7%9a%84%e7%88%b1%e5%a5%bd</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="chinese"><![CDATA[Chinese]]></category>
		<category domain="category" nicename="thoughts"><![CDATA[Thoughts]]></category>
		<category domain="post_tag" nicename="%e8%87%aa%e8%a8%80%e8%87%aa%e8%af%ad"><![CDATA[自言自语]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>spaces_a43755b404d273dfcedbd14ccb4f51ab_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[http://cid-04001c604af3f011.users.api.live.net/Users(288261576051650577)/Blogs('4001C604AF3F011!102')/Entries('4001C604AF3F011!290')?authkey=X13wC75MXT0%24]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_efficient_related_posts</wp:meta_key>
			<wp:meta_value><![CDATA[a:9:{i:0;a:4:{s:2:"ID";s:2:"41";s:10:"post_title";s:27:"梦见自己大学刚毕业";s:7:"matches";s:1:"1";s:9:"permalink";s:118:"http://jeff.familyyu.net/2006/09/02/%e6%a2%a6%e8%a7%81%e8%87%aa%e5%b7%b1%e5%a4%a7%e5%ad%a6%e5%88%9a%e6%af%95%e4%b8%9a/";}i:1;a:4:{s:2:"ID";s:3:"101";s:10:"post_title";s:35:"写Blog是否有暴露狂的症状?";s:7:"matches";s:1:"1";s:9:"permalink";s:131:"http://jeff.familyyu.net/2005/08/30/%e5%86%99blog%e6%98%af%e5%90%a6%e6%9c%89%e6%9a%b4%e9%9c%b2%e7%8b%82%e7%9a%84%e7%97%87%e7%8a%b6/";}i:2;a:4:{s:2:"ID";s:3:"102";s:10:"post_title";s:13:"相信命运?";s:7:"matches";s:1:"1";s:9:"permalink";s:73:"http://jeff.familyyu.net/2005/08/30/%e7%9b%b8%e4%bf%a1%e5%91%bd%e8%bf%90/";}i:3;a:4:{s:2:"ID";s:3:"104";s:10:"post_title";s:12:"论 "坚持"";s:7:"matches";s:1:"1";s:9:"permalink";s:65:"http://jeff.familyyu.net/2005/08/27/%e8%ae%ba-%e5%9d%9a%e6%8c%81/";}i:4;a:4:{s:2:"ID";s:3:"115";s:10:"post_title";s:34:"英语口语和听力真难提高!";s:7:"matches";s:1:"1";s:9:"permalink";s:136:"http://jeff.familyyu.net/2005/07/21/%e8%8b%b1%e8%af%ad%e5%8f%a3%e8%af%ad%e5%92%8c%e5%90%ac%e5%8a%9b%e7%9c%9f%e9%9a%be%e6%8f%90%e9%ab%98/";}i:5;a:4:{s:2:"ID";s:3:"120";s:10:"post_title";s:14:"Blog or Track?";s:7:"matches";s:1:"1";s:9:"permalink";s:50:"http://jeff.familyyu.net/2005/06/23/blog-or-track/";}i:6;a:4:{s:2:"ID";s:3:"127";s:10:"post_title";s:25:"《你的灯亮着吗?》";s:7:"matches";s:1:"1";s:9:"permalink";s:109:"http://jeff.familyyu.net/2005/06/07/%e3%80%8a%e4%bd%a0%e7%9a%84%e7%81%af%e4%ba%ae%e7%9d%80%e5%90%97%e3%80%8b/";}i:7;a:4:{s:2:"ID";s:3:"134";s:10:"post_title";s:30:"对自己人生规划的思考";s:7:"matches";s:1:"1";s:9:"permalink";s:127:"http://jeff.familyyu.net/2005/05/23/%e5%af%b9%e8%87%aa%e5%b7%b1%e4%ba%ba%e7%94%9f%e8%a7%84%e5%88%92%e7%9a%84%e6%80%9d%e8%80%83/";}i:8;a:4:{s:2:"ID";s:3:"139";s:10:"post_title";s:21:"程序代码和英语";s:7:"matches";s:1:"1";s:9:"permalink";s:100:"http://jeff.familyyu.net/2005/05/19/%e7%a8%8b%e5%ba%8f%e4%bb%a3%e7%a0%81%e5%92%8c%e8%8b%b1%e8%af%ad/";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_relation_threshold</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>37</wp:comment_id>
			<wp:comment_author><![CDATA[莉莉]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2005-12-02 10:10:53</wp:comment_date>
			<wp:comment_date_gmt>2005-12-02 10:10:53</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[日记是一种很好的方式，但不知什么时候开始我已经不再写日记了……]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>长帖 ( 澳洲的兄弟,还记得吗?:) )</title>
		<link>http://jeff.familyyu.net/2005/10/09/%e9%95%bf%e5%b8%96-%e6%be%b3%e6%b4%b2%e7%9a%84%e5%85%84%e5%bc%9f%e8%bf%98%e8%ae%b0%e5%be%97%e5%90%97/</link>
		<pubDate>Sun, 09 Oct 2005 15:38:17 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang1.wordpress.com/2005/10/09/%e9%95%bf%e5%b8%96-%e6%be%b3%e6%b4%b2%e7%9a%84%e5%85%84%e5%bc%9f%e8%bf%98%e8%ae%b0%e5%be%97%e5%90%97</guid>
		<description></description>
		<content:encoded><![CDATA[<div id="msgcns!4001C604AF3F011!255" class="bvMsg">
<div>
<div style="overflow: auto; direction: ltr; height: 600px; border: black 1px solid;">
<div style="direction: ltr;">
<div>（序）
很多时候，女人都会说男人对她们不够真心.但是，她们又何尝不知道，男人的如此也是完全出自女人之手.男人的第一次是玩不起的,当他们付出全部的爱时,又有几人能得女人的爱呢,至少我没有.当我想真心去爱一个女的，我失败了；我只是无聊的，想随便玩玩的时候，我却一次又一次的成功.我不知道为什么.难道这就是叫要得到就得先付出,不过这其实也证实了"男人不坏，女人不爱"之真理.
(一)</div>
<div>青-是我第一个暗恋的人.细想起来,存在大脑中对青的第一次印象,应该是在初二,那是在中午,我经过走廊要去食堂吃饭的时候,听见隔壁班的数学老师对一个刚走过,背着一个书包的女生说"青,你数学竞赛获奖了".她只是"哦"的一声,看了一下老师，脸上也没什么喜悦的表情，就走了.当时也没去注意她这个人，只是觉得，她还挺酷的.
和青的真正认识,是在初三,应该多亏了那个所谓的"重点班".我是在一个三级不达标的学校念书,在这个年代，每个学校都追求着升学率,
所以就有了重点班的诞生!说是进了重点班,对我来说也没什么变化，除了穿了件新买的衣服和多交了几百重点班的费用外.或许说真正有差别的就在于调了些学校里面比较好的老师,和新的座位方案---男女搭配座.
很巧,青,分配在了我的右边.那时候，我才认真打量了她,觉得她挺漂亮的.(其实,确切的说,只是脸蛋长的不错,如果那时候就知道看女生其实更重要要看身材的话,或许我就不大会喜欢上她了),但她给我的第一感觉不是漂亮,而是多病.我们的第一次谈话，是她在自习课的时候,叫我帮她一起交作业.下课了,我就看见她趴在桌子上,我就跟她说,下课了,你作业给我，我一起拿去交吧.她抬起头看了我一下,递给我作业本，说了声"谢谢",就又趴下了.</div>
<div>"体弱,多病"是当时她给我的感觉.但是,慢慢地,我就感觉到她是很可爱的人,尤其是笑的时候带着两个酒窝!那个星期六的下午,我们全班大扫除,大家都在忙着大扫除,
而我依旧跟往常一样,偷懒.此时，我看到她也在偷懒.就走了过去:
"我说人家在劳动,你怎么可以在这边偷懒",我问道.
"哦,那你在干吗呢?"她反问道.
"我啊,我是在研究偷懒的人是怎么偷懒的?"
"是吗?"她噘着嘴问道.
"当然了,我从来不骗漂亮的女生!"
"你去死吧,你!"她笑着说,露出了两个可爱的小酒窝.
当然了，到现在为止,我也不知道她当时是听出我在说她不漂亮呢,还是说她漂亮呢.
从那以后,我很经常地偷看她,也经常开玩笑,当然,更多的是口头上的互相攻击.而当每次跟她发生口角后,却总是觉得很开心.
我到现在也不知道自己当时为什么那么喜欢跟她逗嘴.或许喜欢不需要理由.很快地,初三毕业了,她去读一所中专,而我则继续念高中,
刚开始的时候,我们书信很经常，但后来随着高中学业的繁重,我们的书信也渐渐的少了.上到大学后,就几乎没有她的消息了.有好几次初中同学聚会,但好像都没有她的消息.我也不知道她当时是怎么看我的.但她是我第一个暗恋的人.</div>
<div>(二)
有人说，人生就是为了找寻爱的过程，每个人的人生都要找到三个人，第一个是你最爱的人，第二个是最爱你的人，第三个是共度一生的人。
我现在觉得，如果你要找个最爱的人，你可能要用到贪心算法(那就是当你爱的人越多的时候,你才能感觉到谁才是你最爱的人!).但是当你找到你最爱的人的时候,你却发现你已经错过她了,无法和她共度一生了.多么的矛盾与可悲.
应该说在高中阶段,一方面是面临着考试的压力,一方面时间也不允许我往那方面想.因为毕竟在中国,有没有考上大学区别是非常大的.
那时候想,大学就犹如天堂.在大学里你可以大胆地谈恋爱,大胆地喝酒,大胆地抽烟,(甚至可以大胆地杀人,比如马加爵:))......但其实却不是那么回事儿.
不过在这里,我碰见了绿-----一个到现在为止,对我感情观影响最大的一个女孩.
刚进大学的第二天,学校还没开课,闲来无事,准备到附近遛遛.刚下楼,正在考虑往哪个方向走,这时,突然感到肩膀受到袭击,但见一个女的站在我旁边,说道:"同学,物理系楼往哪走啊?"我回过头,打量了一下,一个挺漂亮的面孔,大眼园脸,学生式发型.本来是挺不错的,但好像声音和行为粗了些.我楞了一下,指了指正前方那栋楼,说:"你新来的吧,那就是."她撅了撅嘴,说:"你不也是."(因为当时只有大一的才住那边的公寓).我尴尬地笑了笑,接着她甩了甩头发就走了.第一印象:有点土气,发质不错,喜欢暴力.
这个世界原来真的很小,后来发现她居然是我的同班同学.第一天我们班集合点名,去听新生报告会,看到了很多新面孔,这时我们这堆"狼"正左 顾右盼,讨论着"猎物",听到一舍友说道:"你看,那个女的脸蛋身材都还不错啊."我定睛一看,惊叹了一声,原来就是绿.(当然那时候不知道她的名 字).我对那个舍友说:"千万不要被外在的东西迷惑住,说不准儿是"野蛮女友型"的,".不知道是不是我的声音太大了,她刚好转过头瞟了我一下, 那张挂着不可一世的表情的脸,至今我仍然记得.
记得运动会前俩个月,我们俩都被选为年级接力20*200的主力选手,每天都在一起训练.我们渐渐的也比较熟了,但我一直把她当哥们,因为我个人不大喜欢声音低沉和喜欢暴力的女孩子当女朋友,我喜欢那种小鸟依人的,温柔的女生.
训练强度很大,有一次训练完,我见她累得快趴下了,过去调侃道:
"靠你丫也挺能跑的"
"不行了,老了,想当年我年轻的时候,那才叫猛啊"她苦笑道.
"那阿姨,要不要我背你."
"好啊."还马上装出真的要骑上来样子.可把我给吓了一下.
接着就听到一阵银铃般的笑声.
后来，我一直跟他以哥们相称.也叫她帮向美女推销自己等..
快乐的时光总是短暂的,不知不觉,大一在我们嘻笑怒骂间过去了,不过那时单纯,没提过感情的事,只觉得能跟她玩的挺开心的.大二刚过来,突然 冒出很多对,她旁边也围了追逐者,刚开始我也没在意,还经常帮隔壁班一个男生送情书给她.(因为当时我跟她的关系算是铁哥们),不过久而久之 ,有时候看到她在班上跟其他男生说说话我会觉得心里不舒服,并且特别每次帮别的男生送情书或者礼物之类,我都会觉得好怕,不过我还是经常 试探性地开玩笑:"怎么样,这个帅哥不错,接受吗,接受的话,我跟他说去."每次都是以她的"白眼"告终.但心里却挺开心的.</div>
<div>夏天来了,暑假她留在学校,据说是要找家教,所以没回去,我也留在学校,(据说也是找家教),
由于学校人很少,我们经常结伴去吃饭,游泳,看电影.......,
不过还是以哥们的身份相处,但是当我感觉到自己喜欢她的感觉愈日俱真的时候,我 想我应该大胆地向她表白了,
查了查日历,再过10天就是七夕了,望了望天空,吼了声:"不就表白,谁怕谁!"

一想到表白,脑子里空空如也.平常很少看爱情剧,也从没碰过言情小说.一阵紧张过后,准备恶补一番.废寝忘食地看了16部港台言情片,10部日本言情片,10部韩国的,并且在网上看了所有泡妞大全之类的文章后,决定开始实行表白A计划.
七夕到了,我从早上一起床,就开始看手表.终于熬到晚上.
看看时间差不多了,那时没手机,去小卖部挂了个电话给她,"在干吗啊"
我问道."没什么,看书呢".
"哦,那出来一下,有事找你."
"什么事这么神秘啊,电话说不行嘛?"
"电话说不清楚啊,你出来一下嘛."
"那好吧,你在*楼下等我."
"好的".
过了5分钟,我如愿以偿地看到那副熟悉的笑脸,:"什么事啊?"
我看了她一下,:"走走吧".
她觉得我神色有点怪异,也没说什么.跟着我漫步着,
接着就是一阵长时间沉默,她终于忍不住了,:"你怎么了?"
我也停下来,看着地上,磨蹭着脚,说:"我想,我喜欢上一个女孩子了,但我不知道怎么跟她说,而且也不知道她喜不喜欢我."
说完,我瞥了她一眼,她好像有点紧张,问道:"哪个女生?我认识嘛?"
"应该认识地,喏,我这还有她照片呢."我边说边拿个盒子出来(里面装着个镜子),"你瞧瞧."
她一脸严肃地接过盒子,看了一下.先是惊讶,接着大笑:"你开什么玩笑啊.....".
我不慌不忙从路边的草从中拿出玫瑰花,(我早已经准备好了,而且都算好在哪个地方表白了)
我用最真诚的眼光(忘了加"自认为",:))望着她,说:"真的,我真的喜欢上你了,做我女朋友,好嘛?"
她看了我一下,确定我不是在开玩笑,怯生生地说道:"我们不是哥们吗,这么突然....,让我想想,好吗?"</div>
<div>我心跳马上加速,盯着她说,:"想想?你这是接受我还是拒绝我吗?"(本人认为这辈子说过最蠢的话非这句莫属.)
她推开玫瑰花,若有所思地说道:"其实我们现在不是挺好的吗,你确定是喜欢我吗,会不会是错觉呢?"
我看着她的眼睛,坚定地说:"是!!我喜欢你."
她马上说:"是不是我们最近走得太近了,所以....."
"不是的,我很清楚自己的感觉,是不是真的喜欢一个人,我绝对分得清楚."
她幽幽地说道:"我......还小......现在还不想谈.....,不然我们先做朋友吧.....".("我们做朋友吧"这句话使我从今以后对"做朋友"这几个字都极其敏感.)
我看了她一眼,顿时明白了,把往远处那束花使劲一扔,转身扭头就跑,甩下一句话:"甭提了...."
.....</div>
<div>跑到学生街,我有点后悔了,好像自己太冲动了点,不知道她现在会不会很伤心,会不会呆呆地站在那边,会不会哭....
想到这些,我赶紧又跑回去了,可是看到路上空空地,并没有她的身影,心里一阵紧张,四处张望,
呀,还好,旁边楼前的一块草地上不正坐着那个熟悉的身影嘛,我就走过去,看见她好像在想什么,连我走到她身边都不知道,
我也没说话,默默地在她旁边坐下去.这时,她察觉到了,认真地看了看我,抓着我的手臂说:"你怎么这样对我啊.....刚路上那么多人..."
我没看她,盯着远方说:"渴吗,我去买俩瓶饮料."然后站了起来,朝前面一家杂货店走去,听到她在背后叫道:"我不渴啊."
不过我依旧没转头,费劲地走着,尽力让自己的背影看起来很坚定...
"给我俩罐可乐,不,等等,俩瓶康师傅绿茶吧."虽然精神有点恍惚,不过还是记起她喜欢喝绿茶.
付完钱,走出去,眼角瞥见她正朝这边看,
我不敢看她,只好装做凝视着前方,把拿着饮料放在背后的手放背后,踱过去,
把右手那瓶,递给她.她抬头认真看了我一眼,说:"谢谢."
我就继续坐在她旁边.沉默着.
其实不是我故意不说话,我真的不知道要说什么,只觉得说什么都不适合.
过了几分钟,她开口了:"你还好吧?"
""你说呢."
"我不想以后我们见面如同陌路人,行吗?"
"我想...也许可以吧,我....我会努力的."
"其实我觉得我跟你玩得挺来的,很喜欢跟你在一起啊.."
"是吗?那...."
"不然这样吧,我们还是先当朋友,过一段再说,行吗?"
她边说边用乞求的眼神看着我,(那种眼神估计没人能抗拒得了,至少当时的我无法抗拒)并且用手轻轻地摇着我的手臂.
"我可以说不吗."我苦笑着说."你笑了,就当你答应了,来再笑一个,嘿嘿..."
这时突然意识到其实只要她在身边,那就是幸福.或许不用太在意身份.(后来才知道大错特错了,当然这是后话了.)
我看着她,尽量装做很轻松地笑了起来,:"那好吧..."
不过我万万想不到,也就这句话,让我苦了三年多,应该还不止.....</div>
<div>那个晚上我失眠了,在我的记忆中,那是我第一次为了个女孩子失眠.(我想我这么说你们肯定不相信,所以我决定不争辩.)</div>
<div>(三)
说真的,至始至终都认为自己是个极其花心的人,但到现在为止,我也弄不清楚自己当时会坚持那么久,会爱她爱的那么深.或许这就是一个在中国的教育体系制度下,压抑了三年的感情的人的爆发.我想火山爆发也大概是如此之缘由吧.

其实,当你们做不成情人的时候,就干脆连朋友都不要做.如果还是朋友的话,那么你们两人当中必有一人在默默的承受着痛苦.哪方呢?我想,应该就是谁感情动得越真,谁就越痛苦.她的一个普通的微笑,她那一句普通的话语,一个普通得不在普通的动作,在你的眼里,耳朵里,那绝对不普通了.你会用心思去揣摩她,接着你就走火入魔了.....</div>
<div>想笑　来伪装掉下的眼泪
点点头　承认自己会怕黑
我只求　能借一点的时间来陪
你却连同情都不给
想哭　来试探自己麻痹了没
全世界　好像只有我疲惫
无所谓　反正难过就敷衍走一回
但愿绝望和无奈远走高飞
天灰灰　会不会
让我忘了你是谁
夜越黑　梦违背
难追难回味
我的世界将被摧毁
也许事与愿违
累不累　睡不睡
单影无人相依偎
夜越黑　梦违背
有谁肯安慰
我的世界将被摧毁
也许颓废也是
.........</div>
<div>从那晚后,我就正式加入追她的行列,做着一般男生追女孩子必做的事,---就像晚自习至少得坐她旁边半个多小时,问些无聊的问题,诸如她今天干吗了,吃了啥了.....虽然现在想起来觉得蛮傻的,但是那时真的是乐此不疲.</div>
<div>据说追女孩子时,有五大节日---她的生日,你的生日,情人节,圣诞节,三八节,千万要把握住,我当时虽傻了点,不过这点还是知道的.
记得那次,我约她吃饭,吃完饭,我们就在校园逛逛."喂,小孩子,我突然记起一件事."
她抬头看了看我:"什么事啊."
"好像下周有个美女生日啊?"
她会意地一笑,:"哦?哪位美女啊?"
"你不知道啊,那就不是了,可能我记错了."我邪邪地笑道.
"哼,记错就算了"她白了我一眼.
"好了,说正经的,那你想要什么礼物呢?"
"想要什么礼物都可以吗?"
"我尽量吧...."
"喏,你看,就那个吧...."她指着天上那轮圆月说道.
"啊,月亮吗?"
"怎么,办不到了?"她挑衅道.
"怎么可能,好!下周送给你."我想了想说.
这就注定了下周的我没好日子过了,我左思右想,如果拿个脸盆装满水,然后让
月亮倒映在水里,不过这个做法也太土了吧.第二天就是她生日了,我想我得赶快想个方案.
第二天一大早,我就爬起来,把这个月生活费全部取出来,立即坐车到*城市最繁华的"精品一条街",
想好好挑一个新奇的"月亮"礼物给她,
不过走了一个上午,没看见一个满意的.
中午吃完饭,决定了一件事,就是把精品店里所有与"月亮"有关的礼物都买下来.
做完这个错误决定后,我的手里多了一个大麻袋,
里面装着---月亮水晶,月亮娃娃,月亮钥匙扣,月亮贺卡.....花了我大约7,800块.
不过我总觉得少点什么,看了下手表,已经下午4点多了,
离她那个生日PARTY(其实也就几个人聚在一起吃蛋糕)还有4个小时,
想想,时间尚早,就慢慢走回学校,或许途中可以想到新创意.
接着就开始扛着麻袋,慢慢走着.那天正是星期天,路上情侣蛮多的,想到我那渺茫的爱情,一阵黯然.
不过正在这时,看到一家挺大的蛋糕店,装饰挺豪华的,但好像没什么生意,三四个售货员站在那边侃大山,
对了,过生日,应该买个蛋糕送她.我就走进去,看了看柜台,好像都没有什么有新意的蛋糕,
不过,那时灵机一动,"小姐,这边有没卖月亮的蛋糕."
"什么?"其中一位问道.
"跟月亮有关的蛋糕啊."
"啊?哦,好像没有啊."这时四个售货员都注意到我,齐刷刷地往这边看过来,.....</div>
<div>这时四个售货员都注意到我,齐刷刷地往这边看过来,
我被看得有点不好意思，就转过身想走出去，
也许是我当时憔悴的面孔吧，或者是我那个硕大的麻袋，又或者是那无力的步伐，。。。引起了她们的好奇心，
总之，她们叫住了我：“这位先生，请等等。”
我转过头，只见其中一个走出来一边打量着我，
一边说道：“你能说具体一点嘛，或许我们可以帮到你？”
我看了看其他几位，她们好象都很期待我能讲点什么。（后来想想，也许是她们那时无聊吧，跟你们一样想听故事。：））
我很难拒绝这些带着期盼的眼光，：“好吧，你们帮我出出主意吧，事情是这样的。。。。”
就这样，我把“ 月亮礼物”来龙去脉叙述了一遍，
“你们帮我想想还有什么办法，好吗”。
奇怪，她们都不约而同低下头，接着互相对视着，
过了2，3分钟，有个看上去挺可爱的女孩子，抿着嘴说：“你女朋友真幸福，我都有点被感动了。。。”
这时，我看到她眼眶中闪烁着一些亮光。
又听到另一个女孩子说：“是啊，如果她知道的话，肯定。。。。”
突然又说出不来了。
“对了，你可以自己画一幅月亮，然后我把它传真给我们师傅，看看能不能帮你赶出来。”
一位看上去比较成熟，与其它几位穿着不同套装的女孩子（估计是这个分店负责人）说道。
“对啊。。”另外三个同时喊道。
“好啊，这个主意不错。。。”我也马上回应。
她们马上拿来纸和笔，而且在旁边七嘴八舌地建议着要怎么画，怎么画。。。
我其实心中早已经有了月亮框架---一半月型卡通月亮（有一只大眼睛，并且眼睛旁边写着“绿，happy birthday."），很快，就画完了。</div>
<div>“不错啊。。”她们惊叹道。
那位看似负责人的女孩子马上就把这张图传真过去，一边在问”行不行“，
虽然我听不到另一边在说什么，不过看到她的脸色，我就知道事有蹊跷。
果然，她对我摇了摇头说：“太模糊了，而且师傅没有这样做过。”
我的心再次沉如海底。其他三位也一致地垂头丧气。
不过这时，电话铃响了，”负责人“小姐接起来：“哦，。。这样啊。。，好。。，我问问他看。。，你等下挂。。”
她转过头跟我说：“那个蛋糕师傅答应帮你特制一个，不过你得到工厂亲自去”指导“一下，行不行？”
“可以啊，可以啊。。”我鸡啄米似的点着头，深怕这突如其来的好运飞走。
“我们的送蛋糕班车5点半会过来，你等会跟着车去***，就可以了。”她兴奋地说。
“啊？那么远啊？哦。。不过没事。。”
“也不会很远拉，1个小时就到了。”
“那好，对了，多少钱呢？”我突然想起来。
“你要哪种，有奶油，鲜奶，布丁。。。。”她一边指着墙上那些图案说道。
“哦，那就要布丁吧。”我悄悄的摸了摸快干瘪的钱包。
“你要几寸的呢？”
“就14吧。”
“好，那180加55一共是235，我给你打8折吧，如何？”
“那，给你，谢谢，。。“
我付了钱，拿好收据，说道。
跟她们闲聊了一会儿，这时，车来了。。。。</div>
<div>第一次坐着“蛋糕车”，想想第一次为了一个女孩子做出如此“疯狂”的事（至少对我这种内向的人来说），心情不免有些激动，至于到工厂后，“指导”师傅的过程我这边就不详述了,后来做出来的那个蛋糕我非常满意。</div>
<div>我走出蛋糕房,哦,不知不觉天都黑了,看一下手表,已经7:30了.现在赶回去,时间应该差不多.我随手拦了一辆TAXI,直接回学校,路上总是在催司机快点,终于在8:25左右赶到校门口.然后我扛着大麻袋,提着那个蛋糕,
一路狂奔到她楼下.打了个电话叫她下来,过了一会儿,她就汲着拖鞋"吭哧吭哧"地跑下来了,还是那么漂亮,一身绿色紧身T-SHIRT,把身材勾勒得几乎接近完美,
"嘿,你来得正好,我刚想过去叫你,...下午打电话给你,你不在,.."她突然发现我后面那个麻袋,"那啥啊,你去捡破烂了?.."又看到我的神态不大对劲,她把话止住了.
"你眼睛这么红,这俩天干吗了...好像很累哦?."她好奇地看着我说道.
"没什么,给你的",我递给她那个MOON CAKE,接着拿给她那个大麻袋,"还有这堆破烂,先帮我收着."
"我不上去了,..."
"哦,好..."她看着我,似乎还想问我什么,不过没说出来.
"谢谢你的礼物,"拖着麻袋转过身,慢慢走上去....
"等一下."我突然叫道."哦?"她转过头."忘了告诉你:你今天很漂亮,HAPPY BIRTHDAY."
"呵呵,谢谢."然后她继续慢慢挪上去,渐渐地离开我的视线范围,----有时候看着她的背影,也是一种幸福.
我如释重负,回到宿舍,倒头就睡.
第二天起来,看到桌子上有块蛋糕,竟然是月亮的眼睛那部分.
舍友说昨晚她来过,那时你在睡,她就叫我不用吵醒你,让我给你这块蛋糕,并且转告你:"一定要吃."
而且让我给你这张纸条,我手有点颤抖,接过来,翻开:"月亮的眼睛就留在你的心里吧.绿"</div>
<div>我突然眼眶模糊了,此刻觉得自己是世界上最幸福的人了,而过去的一切努力那都是值得的.</div>
<div>其实,我一直以为真诚可以感动女孩子的心.但是,我后来才明白,女孩子要的是感觉,而并非感动.</div>
<div>欢喜的表情　难过的消息　心中的秘密　写在眼睛里
寻寻觅觅人海里　无声的脚印
只等待一只眼睛感动我　和我谈心</div>
<div>也许会哭泣　也许会老去　岁月会无情　模糊了焦距
就算再也看不清　相爱的轨迹
我也能循着熟悉的气息　找到真心</div>
<div>我看见你的眼睛　看见了我的心　找到了安定
世界再多奇蹟　没有一个能比　你我的相遇</div>
<div>我看见你的眼睛　用特别的声音　说着我爱你
张开你的眼睛　我就要走进去　把爱看仔细</div>
<div>在接下的日子,我们走得更近了,我也以为捕捉到她的心了.
幸福总是离我很近-------</div>
<div>圣诞节来了,我约了她.</div>
<div>先带她去美食街饱餐一顿后,接着我们去教堂做弥撒,
在温馨的烛光中,"阿,耶路亚...."的歌声中,我向上帝祈求"我要永远和她在一起".
(据说当时上帝很为难.)
走出教堂,已经10点多了,
"你刚刚再许什么愿,那么虔诚..."她笑着说.
"希望世界和平,哈哈",笑完,准备征求她的意见,"我们现在走着回去,好吗?"
"哇,那么远啊,...."
"就一次嘛..."
"那好吧,我走不动,你要背我哦...嘿嘿"
"NO PROBLEM."</div>
<div>那晚空气格外清新,感觉路边的乞丐都那么可爱...
一路上,我总是寻找机会想牵她的手,好几次都差点碰到,但最后还是退缩了.
要过马路的那一刻,我终于鼓起勇气,轻轻地拉住她的手,还尽量镇定自若地对她说:"快走过去,不然又变红灯了..."
过完马路,然后就一直牵着,并且偷偷用眼角余光瞄着她,发现她好像很不自然,而且眼睛到处转,
过一会儿,她就把我的手轻轻甩开了,然后摸了摸头发,说:"几点了?"
"哦,快11点了.""哦...."气氛顿时变得有点尴尬,而且她似乎刻意在跟我保持距离.
之后的途中,我俩一句话也没说过.
终于到了学校,我心里长舒了一口气.
刚走进校门,她指着大门后的草地跟我说:"我好累啊,实在不行了,我们坐会吧...."(背景说明:我们宿舍区离校门还有一大段距离)
"好的.."话音刚落,就见她一屁股坐下,"累死我了."
接下来的几分钟,我们继续认真贯彻执行着"沉默"政策.
她看了看我,终于开口了:"唱首歌给我听,好吗?"
"恩,好的..."我有点惊讶,"那你说吧.."
"随便吧.."
"我也不知道唱什么...."
"不然唱&lt;&lt;懂你&gt;&gt;吧,我挺喜欢这首歌的."
"不,我不想唱..."
"为什么?"
"因为我...不懂你.."
"......"
"你等我一下,把脸转过去,好吗?"
"哦,...好的."她有点疑惑,不过还是照办了.
我从口袋中拿出一堆红色的精致的小蜡烛,在草地中间的那块水泥地迅速地摆了起来
摆完后,又赶紧都点起来,一切准备完毕,拍了拍她肩膀,
她转过头,看着用红蜡烛摆成的心型,喊道:"哇,你总是让人很意外..."
"你也让人很意外..."我说,"喜欢吗?"
"喜欢...你对我太好了..."我用手指抵住她的嘴唇,示意她不要说了
"我给你唱首歌.."
我看着摇曳的烛光,看了看她,轻轻地唱道:"想起你描述梦想天堂的样子/手指着远方画出一栋一栋房子/你傻笑的表情又那么诚实/所有的信任是从那一刻开始
/你给我一个到那片天空的地址 /只因为太高摔得我血流不止 /带着伤口回到当初背叛的城市 /唯一收容我的却是自己的影子 ..."</div>
<div>再次看了看她,她盯着烛光,挺陶醉地听着,我继续唱:"....做你感情里最后一个天使/如果梦醒时还在一起/请容许我们相依为命
绚烂也许一时　平淡走完一世 /是我选择你这样的女子......天亮了　我还是不是你的男人 "</div>
<div>唱到这边,我轻轻地扳过她的脸,低沉地说道:"看着我...,天亮了,我会不会是你的男人..?"</div>
<div>她看着我,楞了一下,突然挣脱我的手跑走了,渐渐地离开我的视线范围,----有时候看着她的背影,未必是一种幸福.</div>
<div>(  四 )</div>
<div>有人说人生就是一场赌局,爱情也是.在爱情这个赌局里,谁用情越真,他就输的越厉害.有胜利者吗?有,但是很少,因为你可能在这盘赢了,但你却在另外一盘里输了.而且,你也只有到这盘的最后时刻,你才能知道,自己在这盘赌局中到底是赢还是输.</div>
<div>那年的春节,我至今难忘,因为她的一句话.
除了除夕夜用短信寒暄了俩句后,我们好几天没联系了.
初八那天,她突然打电话给我说:"我们不可能了"
"为什么?"我问到.
她没有任何回答,只是沉默.
我把电话挂断,
因为我不想太失态,我想先冷静下.
俩分钟后,电话铃又一次响起.
"你没事吧!",还是那个熟悉的声音.
"我只想知道为什么..."我再次问道.
她依旧是沉默.
"好的,我没事的!你放心吧,..."我打破沉默.
我能没事吗?本以为我们可以在一起的,却突然告诉我不能,却又不说为什么.
但,我又能怎么样,我只好伪装自己,把自己那颗受伤的心悄悄的藏起来.
这次,我等她先挂电话.
我只是想让她知道,我真的没事.至少在表面上.
我尽量装作自己很坚强,我一直告诉我自己我是个男人,至少得拿得起,放得下.
但是其实,坚强的男人心底也是些脆弱的东西.
但是他们一定要坚强,至少要伪装成坚强,这就是男人!</div>
<div>在接下去的日子,
她没有打电话给我,我也没有打电话给她.
或许觉得此刻不是时候
或许觉得自己真的累了,
也或许是因为过些日子,就要开学了,就可以当面问她.</div>
<div>现在想起,觉得那些日子自己太傻,因为她,我耗尽了太多太多的东西.
不过也因为她,我懂得了什么叫付出,什么叫爱,...
因为她,我渐渐成熟,不再幼稚......
但如果可以重新来一次,我希望不要遇见她.

在开学后,我也问过她好几次为什么,但每每问这时,她都保持沉默,弄得双方都很尴尬,后来我也少问了.
后来对于继续追求她，说真的，我感觉到太累了.
有些放弃了，至少我当时是那么想的
也没有以前的激情了
但不知道为什么
我们的关系还是是属于暧昧的那种
或许也正是这为我以后的悲哀埋下了伏笔....</div>
<div></div>
<div>( 五 )</div>
<div>如果你爱我,请你一定要告诉我;
如果你不喜欢,不爱我,请你也一定要告诉我.</div>
<div>我们的暧昧的关系一直维系到大四上,直到那天,我发现了我们为什么不可能的原因.......</div>
<div>那是个圣诞节,那时候《英雄》被炒的很火......那天，我请她一起去看电影
她说要她请我去××吃鱼丸
那天的鱼丸和平常来吃的没什么太大差别
还是那么好吃...
唯一不同的是,这次是她付钱,以前都是我请她吃的.
在她付钱的时候，我突然瞥见她的钱包上有张照片..
但具体的是什么，根本无法看清..
也是直到今天我才发现,女人对于保护自己的钱包永远是有一套的。</div>
<div>吃完后,时间尚早...
我们买的是晚上8点的票,现在才7点多一点...
"嗯,这样吧,陪我去逛会儿街,我想买条牛仔裤.."她提议道.
逛街永远是女孩子最喜欢的一种活动.
我们逛了几家,这时,她发现了一条中意的,把钥匙和钱包扔给我，拿着衣服一摇一摆去试衣间。
我拿着钱包，心存疑惑地打开，夹着张照片，认真看一下，呆住了－－－个男的从后面紧紧地抱着她，她笑得很灿烂。
我合上了，心如刀绞。

她出来了，我笑着说：“合适吗？”“太大了点。”“哦，那我们去看电影吧。。”递给她钱包和钥匙。
。。。。
接着就去看电影，整个屏幕仿佛都变成那张照片，。。。。

据说《英雄》拍得不错。
那天晚上，我对自己说：”如果再跟她这样暧昧下去，我他妈的就不是男人。“

黑夜。
白天。</div>
</div>
</div>
</div>
</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>89</wp:post_id>
		<wp:post_date>2005-10-09 15:38:17</wp:post_date>
		<wp:post_date_gmt>2005-10-09 15:38:17</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e9%95%bf%e5%b8%96-%e6%be%b3%e6%b4%b2%e7%9a%84%e5%85%84%e5%bc%9f%e8%bf%98%e8%ae%b0%e5%be%97%e5%90%97</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="chinese"><![CDATA[Chinese]]></category>
		<category domain="category" nicename="others"><![CDATA[Others]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>spaces_a43755b404d273dfcedbd14ccb4f51ab_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[http://cid-04001c604af3f011.users.api.live.net/Users(288261576051650577)/Blogs('4001C604AF3F011!102')/Entries('4001C604AF3F011!255')?authkey=X13wC75MXT0%24]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>31</wp:comment_id>
			<wp:comment_author><![CDATA[xiaolu]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2006-04-16 01:18:29</wp:comment_date>
			<wp:comment_date_gmt>2006-04-16 01:18:29</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[ 
 

我以前看一个高考作文,里边引用了一段话.说一个人,看到一个农民,坐在地上晒太阳,就问他,你种了水稻么?农民说,没有,因为我怕干旱.那人又问,你种了麦子么?农民说,没有，因为我怕发大水.那人问,那你种了什么?农民说,我什么也没种,因为我们要保证安全.原来,如果要绝对的安全,就要一无所有.
 
 ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>32</wp:comment_id>
			<wp:comment_author><![CDATA[anson]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2005-10-10 01:33:59</wp:comment_date>
			<wp:comment_date_gmt>2005-10-10 01:33:59</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[怎么突然想到又拿出来呢]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Web frameworks 杂谈</title>
		<link>http://jeff.familyyu.net/2005/11/20/web-frameworks-%e6%9d%82%e8%b0%88/</link>
		<pubDate>Sun, 20 Nov 2005 16:34:40 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang1.wordpress.com/2005/11/20/web-frameworks-%e6%9d%82%e8%b0%88</guid>
		<description></description>
		<content:encoded><![CDATA[<div id="msgcns!4001C604AF3F011!289" class="bvMsg">
最近这段时间,老是被这么几个buzzwords给充斥着: JSF,AJAX,Ruby,Ruby on Rail etc,特别是好像在谁的blog上面看到,如果你现在做项目,想使用struts的时候,不妨先考虑下jsf. 这个周末我就顺势看了些JSF的资料和一些文章.
其实,说到JSF,AJAX这两个,就不得不提Http协议.自从我毕业后,做得都是B/S模式的应用系统,所以,要从深层次的了解B/S模式的应用系统,就一定得了解Http的通信协议.今天刚好在blogjava上看到 Http的深入浅出(<a href="http://www.blogjava.net/action/archive/2005/11/14/19752.html">http://www.blogjava.net/action/archive/2005/11/14/19752.html</a>),写的不错.
话题回到题目,这次我想说的主要是web framework,JSF也算是一个web framework,其他的还有比如有大家熟悉的struts,还有webwork,spring mvc, tapstry等, 那么在这里面,又可以分成两种.
一是: request-based (form-based)web framework,这就是大家比较熟悉的struts,webwork,spring mvc,这些都是属于request based,也就是以form为提交单位的,这种是现在比较普遍使用的,也算是已经比较成熟的,比较早的,这个我就不多说.
二是: component-based web framework,目前就只有两个,一个是jsf,一个是tapstry,tapstry是历史比较久的,现在好像已经是4.0了. 至于jsf和tapstry两者的比较,这边有篇文章,描写的非常详尽.(<a href="http://www.theserverside.com/articles/content/JSFTapestry/article.html">http://www.theserverside.com/articles/content/JSFTapestry/article.html</a>).
我本来是不怎么看好jsf的,因为struts的作者McClanahan也是jsf的co-lead spec组员,Bile Blog上面的Hani骂的最凶的就是他了,我现在也不喜欢struts,觉得不够好,特别是跟webwork,感觉他的代码写的不够好.但是现在感觉到就是越来越多人开始使用jsf了,特别是国外有些人天天在blog上面写些jsf的东东.
那么在技术选择上,到底是要选择struts还是选择jsf呢?且看McClanahan写的一篇blog: struts or jsf(<a href="http://blogs.sun.com/roller/page/craigmcc/20040927#struts_or_jsf_struts_and">http://blogs.sun.com/roller/page/craigmcc/20040927#struts_or_jsf_struts_and</a>).
有篇blog(<a href="http://adigio.com/blogs/kris/archives/2004/09/jsf_dont_we_get.html">http://adigio.com/blogs/kris/archives/2004/09/jsf_dont_we_get.html</a>)上说,jsf会不会给我们带来类势.net的,那种拖曳式的开发呢,也就是那种VB式的开发,目前我还没见到,或许是因为sun的java studio jcreator工具还没完成,刚看一个blog上说IDEA 6工具要整合jsf crap进来,(注意,用crap,看来不喜欢jsf的人还是大有所在的.),我觉得,VB式的开发,带来方便的同时,也让你少了很多有创意的地方,所以,很多真正的牛人不喜欢,但这从公司的角度,效益的角度,他们还是比较喜欢的,毕竟,老板们想要的是效益,不是技术的创意.
对于JSF,我应该说还没有入门,但是,看了在TSS上的jsf和tapstry的比较后,好像了解了些思路,摘录些其他的链接,待有空再看看,不过,得先把&lt;webwork in action&gt;和&lt;ajax in action&gt;看完再说,毕竟很喜欢这两本书.:)
--------------------
<a href="http://www.theserverside.com/articles/article.tss?l=BuildingCustomJSF">http://www.theserverside.com/articles/article.tss?l=BuildingCustomJSF</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>90</wp:post_id>
		<wp:post_date>2005-11-20 16:34:40</wp:post_date>
		<wp:post_date_gmt>2005-11-20 16:34:40</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>web-frameworks-%e6%9d%82%e8%b0%88</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="java"><![CDATA[Java]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>spaces_a43755b404d273dfcedbd14ccb4f51ab_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[http://cid-04001c604af3f011.users.api.live.net/Users(288261576051650577)/Blogs('4001C604AF3F011!102')/Entries('4001C604AF3F011!289')?authkey=X13wC75MXT0%24]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>信箱转移到GMail...</title>
		<link>http://jeff.familyyu.net/2005/10/28/%e4%bf%a1%e7%ae%b1%e8%bd%ac%e7%a7%bb%e5%88%b0gmail/</link>
		<pubDate>Fri, 28 Oct 2005 15:57:18 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang1.wordpress.com/2005/10/28/%e4%bf%a1%e7%ae%b1%e8%bd%ac%e7%a7%bb%e5%88%b0gmail</guid>
		<description></description>
		<content:encoded><![CDATA[<div id="msgcns!4001C604AF3F011!262" class="bvMsg">
<div>我记得是从04年4 or 5月份起获得了一个gmail的账号，那时候还是不能申请的，只能通过邀请的，但那时候一直到没用，直到最近用这个邮箱订阅了displaytag的maillist,目前也还是比较少去看，反正他有2G的空间，我也就不用担心那个maillist会炸掉我的邮箱.
最近,看到很多的blog上面写关于gmail的一些描述,特别是有篇Gmail vs Outlook (<a href="http://beust.com/weblog/archives/000332.html">http://beust.com/weblog/archives/000332.html</a>),就我最近稍微用下Gmail,说说我印象比较深刻的:</div>
<div>1. mail中采用了conversation的格式,就同一主题的会整合在一起,这点我最喜欢,看起来,很有上下文的感觉,不用每次发邮件的时候都引用 原信息等..</div>
<div>2. Label的使用,我发现这个功能也很不错,特别是当你有订阅maillist的时候. (不过,这点有点像outlook中定义一个规则的,但比他好像要强大些. :) )</div>
<div>3. 回复邮件等,很方便,因为是使用AJAX的技术,不用一直页面跳转,刷新啊等等,好用的很.</div>
<div>据其他人记载,好像对垃圾邮件的过滤功能也是一流的(这个功能目前我还没用.;) )
再说了,Google的产品一直是很有口碑的,所以,我决定把信箱全面转移到Gmail来了,对于以前那个163的信箱可以说再见了.</div>
<div>PS: 晚上发现那个Google Reader (<a href="http://www.google.com/reader/lens/">http://www.google.com/reader/lens/</a>)也还行,特别是界面清爽,但我目前发现有个最大的不习惯就是如果你看过了,他就会直接不显示了,这点不如FeedDemon好使,不会把一些summary保留在自己的客户端那里,但我还是决定尝试用看看.看一些老外对Google Reader的评价(<a href="http://www.logemann.org/blojsom/blog/default/?permalink=Finally_using_a_Google_product.html">http://www.logemann.org/blojsom/blog/default/?permalink=Finally_using_a_Google_product.html</a>)</div>
</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>91</wp:post_id>
		<wp:post_date>2005-10-28 15:57:18</wp:post_date>
		<wp:post_date_gmt>2005-10-28 15:57:18</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e4%bf%a1%e7%ae%b1%e8%bd%ac%e7%a7%bb%e5%88%b0gmail</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="chinese"><![CDATA[Chinese]]></category>
		<category domain="category" nicename="others"><![CDATA[Others]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>spaces_a43755b404d273dfcedbd14ccb4f51ab_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[http://cid-04001c604af3f011.users.api.live.net/Users(288261576051650577)/Blogs('4001C604AF3F011!102')/Entries('4001C604AF3F011!262')?authkey=X13wC75MXT0%24]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>深圳, Sin City</title>
		<link>http://jeff.familyyu.net/2005/10/27/%e6%b7%b1%e5%9c%b3-sin-city/</link>
		<pubDate>Thu, 27 Oct 2005 14:04:54 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang1.wordpress.com/2005/10/27/%e6%b7%b1%e5%9c%b3-sin-city</guid>
		<description></description>
		<content:encoded><![CDATA[<div id="msgcns!4001C604AF3F011!260" class="bvMsg">
<div>今天深圳捧回了“全国文明城市”的奖杯,但是实际呢？在深圳内部，到处发着&lt;年关将近,请大家注意安全&gt;的提醒等等,看着这两个东西，觉得还真讽刺.
前天从南方都市报看到一名IT打工仔被绑架,被绑架了3天，而JC居然说，这种情况一般情况下会被撕票，后来还是那个人自己逃脱，他逃脱后，连公司都不去了，叫他同事帮他辞职，自己立马离开了深圳..
然后最近看别人的blog,有的人也在盘算着是否离开这个城市，她里面有这么一句话“深圳，等你赶走了所有的纳税人，你还能走多久!”
从我刚来深圳的时候，就在火车站那个公车站点上亲眼见到10几个小偷,他们那简直就是半偷半抢,再到公司同事下班去公司下的公交站坐车也被打劫等，我想到深圳治安是比较不好，只是没想到，是如此的不好，而今，连一个普通的IT打工仔也会接受绑票的事实，真让人想不通，难道是年关一到，全民皆抢？
还记得在大学时候，听说深圳的警察工资特别高，我现在终于明白了，其实，在深圳，警察才是最热门的专业，因为这边三百米就需要有个警察亭，想想，这是多大的需求量啊...记得不知道是哪个老师说过，中国有那么多的什么意见箱，那是说明我们制度的不完善，如今，深圳这么多的警察亭，也说明是治安的不完善啊...
呵呵，“全国文明城市”？太讽刺了，虚伪的评比啊，如果有评比“犯罪城市“，那么深圳一定名列前茅！</div>
</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>92</wp:post_id>
		<wp:post_date>2005-10-27 14:04:54</wp:post_date>
		<wp:post_date_gmt>2005-10-27 14:04:54</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e6%b7%b1%e5%9c%b3-sin-city</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="chinese"><![CDATA[Chinese]]></category>
		<category domain="category" nicename="others"><![CDATA[Others]]></category>
		<category domain="post_tag" nicename="shenzhen"><![CDATA[Shenzhen]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>spaces_a43755b404d273dfcedbd14ccb4f51ab_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[http://cid-04001c604af3f011.users.api.live.net/Users(288261576051650577)/Blogs('4001C604AF3F011!102')/Entries('4001C604AF3F011!260')?authkey=X13wC75MXT0%24]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_efficient_related_posts</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{i:0;a:4:{s:2:"ID";s:3:"119";s:10:"post_title";s:9:"在深圳";s:7:"matches";s:1:"1";s:9:"permalink";s:64:"http://jeff.familyyu.net/2005/07/12/%e5%9c%a8%e6%b7%b1%e5%9c%b3/";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_relation_threshold</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>35</wp:comment_id>
			<wp:comment_author><![CDATA[xiaolu]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2006-04-16 00:46:44</wp:comment_date>
			<wp:comment_date_gmt>2006-04-16 00:46:44</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[那以后去玩不是要穿避弹衣&gt;?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>36</wp:comment_id>
			<wp:comment_author><![CDATA[Unknown]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2005-10-28 02:34:02</wp:comment_date>
			<wp:comment_date_gmt>2005-10-28 02:34:02</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[hehe,没去过不了解。看你写的好像很糟糕，但是还是有很多人在称赞深圳]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>别了,该离开的场地</title>
		<link>http://jeff.familyyu.net/2005/10/20/%e5%88%ab%e4%ba%86%e8%af%a5%e7%a6%bb%e5%bc%80%e7%9a%84%e5%9c%ba%e5%9c%b0/</link>
		<pubDate>Thu, 20 Oct 2005 16:30:19 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang1.wordpress.com/2005/10/20/%e5%88%ab%e4%ba%86%e8%af%a5%e7%a6%bb%e5%bc%80%e7%9a%84%e5%9c%ba%e5%9c%b0</guid>
		<description></description>
		<content:encoded><![CDATA[<div id="msgcns!4001C604AF3F011!258" class="bvMsg">
<div>今天晚上去溜了一会儿冰,是真冰,并不是普通南方所指的旱冰,今天也是我第一次穿上冰刀溜真冰,感觉肯定是比旱冰好玩,因为至少价格都比较贵,呵呵. 我自己今天晚上就主要是迁移了"八步走"从旱冰移到溜冰,差不多,走,都是那么回事儿,但是至于停和转身,我就不知道怎么用冰刀来实现了. :(, 我个人觉得如果你只会走,而不会转身和不会停,就好比如学会了游泳,但是没学会换气一个道理, 也许正是由于自己技术的不足,让我感觉不出下次继续去溜冰的理由存在.</div>
<div>记得,在大学刚毕业的那年,我和哈及在一个晚上无聊的时候,说去旱冰场旱冰吧,太久没去了,想去找些当年的回忆,无奈,过去的时候,溜了一会儿,发现都是些16,7岁的小男孩,小女孩儿.所以后来没溜一会儿就回去了,从那到现在,从没去过旱冰场. 本来想去找回忆的,结果找回来的是"你已经不属于这个场地"的残酷的事实.
今晚给我带来的感觉,是,"我的年纪已经不适合溜冰了",因为你想从溜冰中得到乐趣,那你就得学好溜冰技术,技术越好,乐趣越多,但对于我这个年龄的人,去学溜冰技术吗?
随着时间的流逝,人总要离开一些场地,就犹如你需要退团一样.下次在溜冰场的时候,大概我一般是以观众的身份来参加了...
别了,该离开的场地! (如果是徐志摩感慨,或许又是一类似乎&lt;别了,康桥&gt;的诗.:) )</div>
</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>93</wp:post_id>
		<wp:post_date>2005-10-20 16:30:19</wp:post_date>
		<wp:post_date_gmt>2005-10-20 16:30:19</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%88%ab%e4%ba%86%e8%af%a5%e7%a6%bb%e5%bc%80%e7%9a%84%e5%9c%ba%e5%9c%b0</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="chinese"><![CDATA[Chinese]]></category>
		<category domain="category" nicename="others"><![CDATA[Others]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>spaces_a43755b404d273dfcedbd14ccb4f51ab_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[http://cid-04001c604af3f011.users.api.live.net/Users(288261576051650577)/Blogs('4001C604AF3F011!102')/Entries('4001C604AF3F011!258')?authkey=X13wC75MXT0%24]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>33</wp:comment_id>
			<wp:comment_author><![CDATA[xiaolu]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2006-04-16 00:50:33</wp:comment_date>
			<wp:comment_date_gmt>2006-04-16 00:50:33</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[哈哈,不好意思,我好想笑!
 ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>34</wp:comment_id>
			<wp:comment_author><![CDATA[anson]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2005-10-21 01:31:51</wp:comment_date>
			<wp:comment_date_gmt>2005-10-21 01:31:51</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[应该那个场地有很多象你这样上了年纪的人去吧]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Transaction...</title>
		<link>http://jeff.familyyu.net/2005/10/20/transaction/</link>
		<pubDate>Thu, 20 Oct 2005 00:29:52 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang1.wordpress.com/2005/10/20/transaction</guid>
		<description></description>
		<content:encoded><![CDATA[<div id="msgcns!4001C604AF3F011!257" class="bvMsg"><div>  今天早上来demo,来的比较早,闲来无事,就看看TSS,有个帖子是问Transaction的问题,是这样的:(<a href="http://www.theserverside.com/news/thread.tss?thread_id=37173">http://www.theserverside.com/news/thread.tss?thread_id=37173</a>)</div>
<div>   当我们新建一个Connection时候,设置它的connection.setAutoCommit(false),那么如果我们到最后的时候,直接关闭掉Connection,他会执行commit 还是rollback呢? (很多人可能会说,代码不能写. ok,我也知道,但关键是我们要探讨在这种情况下,数据库会怎么处理呢?)<br />  在TSS看完这个问题后,我也稍微看了下些comments,不大去关心这个问题,只觉得,以后一定要显式调用commit or rollback,在后来用FeedDemon收了Gavin King的Blog,发现他就这个问题写了篇Blog(<a href="http://blog.hibernate.org/cgi-bin/blosxom.cgi/2005/10/19#popquiz_connectionclose">http://blog.hibernate.org/cgi-bin/blosxom.cgi/2005/10/19#popquiz_connectionclose</a>),写的很详细,虽然我对他本人不是很喜欢,(或者是因为之前跟Rod的争吵,让我感觉到他没什么风度),但是他的数据库知识和Java的知识,这还是应该不在我之下的..(嘿,我说,谁的西红柿和臭鸡蛋.),这篇Blog解释的很详细.<br />  回到问题,那么,数据库到底是会执行commit or rollback呢? 答案是: it depends, 要看vendor实现,就比如说Oracle,他是执行commit的,但不同的厂商,有不同的实现,因为Jdbc的specification对这个没有明确规定,所以oracle执行commit也是没有违反规则的...<br /> 当然了,从这篇文章,我们只能说如果自己以后设置connection的autoCommit为false的时候,自己切记,一定要显示(explicity)执行rollback or commit.</div>
<div>  </div></div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>94</wp:post_id>
		<wp:post_date>2005-10-20 00:29:52</wp:post_date>
		<wp:post_date_gmt>2005-10-20 00:29:52</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>transaction</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="java"><![CDATA[Java]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>spaces_a43755b404d273dfcedbd14ccb4f51ab_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[http://cid-04001c604af3f011.users.api.live.net/Users(288261576051650577)/Blogs('4001C604AF3F011!102')/Entries('4001C604AF3F011!257')?authkey=X13wC75MXT0%24]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Never Coclusion easily</title>
		<link>http://jeff.familyyu.net/2005/10/02/never-coclusion-easily/</link>
		<pubDate>Sun, 02 Oct 2005 02:19:04 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang1.wordpress.com/2005/10/02/never-coclusion-easily</guid>
		<description></description>
		<content:encoded><![CDATA[<div id="msgcns!4001C604AF3F011!245" class="bvMsg">
<div>I found myself always said the task was almost finished when someone asked me about the assignment task, while there is a lot of details or tiny things about the task, and what i have finished is the main function or function's skeleton. I often ignore the tiny thing, there is a famous book called &lt;detail determine everything&gt;, maybe I should learn something from this book. :(, Another question about myself is always see the positive aspect of the uncertain thing, and there is a proverb said "More expectation, more disappointment", So I should see the things or do the coclusion from multi aspect of the thing, and dont make the coclusion easily, do or say the thing after you think.</div>
</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>95</wp:post_id>
		<wp:post_date>2005-10-02 02:19:04</wp:post_date>
		<wp:post_date_gmt>2005-10-02 02:19:04</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>never-coclusion-easily</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="thoughts"><![CDATA[Thoughts]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>spaces_a43755b404d273dfcedbd14ccb4f51ab_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[http://cid-04001c604af3f011.users.api.live.net/Users(288261576051650577)/Blogs('4001C604AF3F011!102')/Entries('4001C604AF3F011!245')?authkey=X13wC75MXT0%24]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>A typical test case involved database based app</title>
		<link>http://jeff.familyyu.net/2005/09/30/a-typical-test-case-involved-database-based-app/</link>
		<pubDate>Fri, 30 Sep 2005 01:37:48 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang1.wordpress.com/2005/09/30/a-typical-test-case-involved-database-based-app</guid>
		<description></description>
		<content:encoded><![CDATA[<div id="msgcns!4001C604AF3F011!243" class="bvMsg"><div>
<div>Posted by: <a title="view Jakob's recent threads ..." href="http://spaces.msn.com/user/userthreads.tss?user_id=304680"><u><font color="#0000ff">Jakob Jenkov</font></u></a> on September 28, 2005<br /><br /><font color="#ff0000">Hi Jeff, the situation you describe is a typical situation when testing database based applications. Here is what I normally do:<br /><br />public void testDbStuff() throws Exception &#123;<br /><br />   Connection connection = null;<br />   try&#123;<br />      connection = openConnection();<br />      connection.setAutoCommit(false);<br />      //in a method if I need it again in a later test case.<br />      doInsertStuff(); <br /><br />   &#125; finally &#123;<br />      if(connection != null)&#123;<br />         connection.rollback(); //deletes all inserts and updates and deletes etc. done during test.<br />         connection.close();<br />      &#125;<br />   &#125;<br />&#125;<br /><br /><br />Notice how the transaction is rolled back in the finally clause. That way you don't have to worry about what updates you made in the database during the test. It is all deleted and set back, after the test. The nice thing about that is, that if your database contains other test data, for instance for playing around with when testing the UI, these test data will NOT be erased or changed by the test.<br /><br />Sometimes I create the connection and call setAutoCommit(false) in the setUp() method of the test class, and call connection.rollback(); and connection.close(); in the tearDown() method. However, I have experienced that if an exception is thrown from the test method, the tearDown method is not always called. So, usually I use the try-finally method. </font></div></div></div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>96</wp:post_id>
		<wp:post_date>2005-09-30 01:37:48</wp:post_date>
		<wp:post_date_gmt>2005-09-30 01:37:48</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>a-typical-test-case-involved-database-based-app</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="java"><![CDATA[Java]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>spaces_a43755b404d273dfcedbd14ccb4f51ab_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[http://cid-04001c604af3f011.users.api.live.net/Users(288261576051650577)/Blogs('4001C604AF3F011!102')/Entries('4001C604AF3F011!243')?authkey=X13wC75MXT0%24]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>30</wp:comment_id>
			<wp:comment_author><![CDATA[Unknown]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2005-09-30 02:07:00</wp:comment_date>
			<wp:comment_date_gmt>2005-09-30 02:07:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[写得不错，支持一下。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>用CruiseControl来实现Continous Integration.</title>
		<link>http://jeff.familyyu.net/2005/09/26/%e7%94%a8cruisecontrol%e6%9d%a5%e5%ae%9e%e7%8e%b0continous-integration/</link>
		<pubDate>Mon, 26 Sep 2005 16:49:25 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang1.wordpress.com/2005/09/26/%e7%94%a8cruisecontrol%e6%9d%a5%e5%ae%9e%e7%8e%b0continous-integration</guid>
		<description></description>
		<content:encoded><![CDATA[<div id="msgcns!4001C604AF3F011!242" class="bvMsg"><div> 还记得早些使用写过&lt;我读持续集成&gt;,但是一直没搭那个环境,今天下载了CruiseControl来试了下,效果很不错,CruiseControl到底是什么工具呢?可以简单的看做是ant的定时工具,类似linux下命令行的cron命令,但是功能又比这强大,我今晚稍微看了下,试了下,比较简单,详细的看CruiseControl的地址: <a href="http://cruisecontrol.sourceforge.net/index.html">http://cruisecontrol.sourceforge.net/index.html</a> , <a href="http://www.pragmaticprogrammer.com/starter_kit/au/scheduled.pdf"><font color="#000000">下面这个地址是Pragmatic project automation书中的关于CruiseControl的使用介绍, 写的很详细. </font>(http://www.pragmaticprogrammer.com/starter_kit/au/scheduled.pdf</a>). </div></div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>97</wp:post_id>
		<wp:post_date>2005-09-26 16:49:25</wp:post_date>
		<wp:post_date_gmt>2005-09-26 16:49:25</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e7%94%a8cruisecontrol%e6%9d%a5%e5%ae%9e%e7%8e%b0continous-integration</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="java"><![CDATA[Java]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>spaces_a43755b404d273dfcedbd14ccb4f51ab_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[http://cid-04001c604af3f011.users.api.live.net/Users(288261576051650577)/Blogs('4001C604AF3F011!102')/Entries('4001C604AF3F011!242')?authkey=X13wC75MXT0%24]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Opensource大杂烩</title>
		<link>http://jeff.familyyu.net/2005/09/19/opensource%e5%a4%a7%e6%9d%82%e7%83%a9/</link>
		<pubDate>Mon, 19 Sep 2005 15:11:41 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang1.wordpress.com/2005/09/19/opensource%e5%a4%a7%e6%9d%82%e7%83%a9</guid>
		<description></description>
		<content:encoded><![CDATA[<div id="msgcns!4001C604AF3F011!241" class="bvMsg"><div> 最近在自己的电脑上随便架了个系统,其中用到开源包有:displaytag+webwork+spring+hibernate,其中我最熟的就spring和hibernate,其实，hibernate也不算很熟，因为自己当时毕竟用的不多，至于webwork和displaytag可以说是比较新手,但因为有struts的基础和custom tag的应用，用起来不是很难，用了webwork之后,感觉struts确实代码写的比较不优雅的说.<br /> 本来说想自己写个list的tag,后来想起很早的时候有看到过displaytag的opensource tag,我最近也是一个不主张reinvent wheel的人,熟话说,做啥事儿都得站在巨人的肩膀上,所有就下载了display tag的jar,看了些documentation,总得感觉还不错，但有个最让我郁闷得问题，就是关于分页的问题，他只能对你一次取出来的数据进行分页,这样如果对于大数据量，比如10000条的话，是很不合理的，所以我在想等有时间，对他进行改写，反正可以载到源代码（这就是opensource的好处，呵呵.:)）,技术大概就是使用回调的功能;还有一个问题就是他的i18n还webwork中i18n的整合问题,我目前也没处理好....<br />  路要一步一步走,饭要一口一口吃,总之慢慢来,我目前自己做这个系统最关键还是要让自己更加了解技术,以及实践中所碰到的问题,和采取的解决方案.<br /> 我个人是个不喜欢只谈理论,不讲实践的人,所以我一定要经常实践,再看看别人的经验,以及理论,这样更完善自己的时间.</div></div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>98</wp:post_id>
		<wp:post_date>2005-09-19 15:11:41</wp:post_date>
		<wp:post_date_gmt>2005-09-19 15:11:41</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>opensource%e5%a4%a7%e6%9d%82%e7%83%a9</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="java"><![CDATA[Java]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>spaces_a43755b404d273dfcedbd14ccb4f51ab_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[http://cid-04001c604af3f011.users.api.live.net/Users(288261576051650577)/Blogs('4001C604AF3F011!102')/Entries('4001C604AF3F011!241')?authkey=X13wC75MXT0%24]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>看&quot;Google黑板报&quot;有感</title>
		<link>http://jeff.familyyu.net/2006/05/17/%e7%9c%8b%e6%9c%89%e6%84%9f/</link>
		<pubDate>Wed, 17 May 2006 15:04:19 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang1.wordpress.com/2006/05/17/%e7%9c%8b%e6%9c%89%e6%84%9f</guid>
		<description></description>
		<content:encoded><![CDATA[<div id="msgcns!4001C604AF3F011!395" class="bvMsg">今天下午和晚上,差不多把<a href="http://googlechinablog.com/">Google黑板报</a>的内容都看了一遍,其实真正吸引我看完的是我想了解google的员工是在什么样的环境下工作的. 看完之后吧,就恨自己为什么不从小开始认真读书,努力学习呢,以至于现在进不了Google中国呢,非常舒适的环境,免费的饮料,食物,免费的T- Shirt,20%的自由时间,以及能和一些很优秀的人一起工作,试问作为一个从事IT的人员,能不喜欢这样的工作吗?
崇尚自由,鼓励创新是Google所推崇的..再看看国内的软件公司吧.&lt;人件&gt;这本书早些年就出来了,但是对中国产生很大的影响吗?除了把这本书引进来,把这本书卖了个好价钱外,我觉得真正的影响并不大,但是真正重要的是&lt;人件&gt;这本书里所讲的内容,这才是重点..
国内还是一如既往的想走着软件工厂的路线,国内还是注重的是过程,人不重要,因为人的流动性大,所以人不稳定,所以不好把握,但是过程一旦定下来就稳定了,因为过程不会辞职,过程是死的.但是问题的关键在于,人才是最关键的,那么这么做是不是不解决问题的关键,而是去抓问题的细节?是,细节也是重要的, 但是他的重要性是建立在你的关键问题已经解决了的情况下.
最近才发现国内和国外的差距是如此的大,我已经也知道国内和国外的IT差距大,但是我最近发现原来实际上存在的差距比我所想象的还要大很多...在中国做技术,说好做也好做,因为你只需要关注国外的趋势,那么等国外成熟了,你再引用进来就可以了,你不需要创新(实际上在一个只追求效益的情景下,你很难从真正意义上的创新).说不好做呢?也不好做,在国内做技术,始终很难摆脱一个做工人的位置,因为他们只是想把你培养成螺丝钉而已,真正重要的是过程....
在写这些文字的时候,心里其实很难受的,为什么都是在打工,情况却差这么多呢?为什么都是在做技术,情景却如此的不同?邓小平说,科技是第一生产力,我发现,现实社会中,效益是第一生产力...
很多企业都是中国的程序员浮躁...是,我承认中国的程序员浮躁?但是,难道中国的程序员喜欢浮躁吗?难道我们就喜欢跳槽吗?俗话说,作用力是相互的,程序员的浮躁和当前软件企业的氛围也是分不开的...程序员越浮躁,说明软件氛围企业越不好.....
最后,我很喜欢卡特说的一句话:"我要我的员工都能用得起自己生产的车!", 如果有老板说到自己的目标,他要是能说"我的目标是,一是能为社会担当点责任,二是能让我的员工们生活更富裕",我觉得这就很棒了...比所谓其他什么豪言壮语要实际,要鼓舞员工士气的多... 其实,作为一个企业,能让自己的员工生活条件更优越,这本身就是在替社会做贡献,在替社会承担责任,不是吗?</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>59</wp:post_id>
		<wp:post_date>2006-05-17 15:04:19</wp:post_date>
		<wp:post_date_gmt>2006-05-17 15:04:19</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e7%9c%8b%e6%9c%89%e6%84%9f</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="chinese"><![CDATA[Chinese]]></category>
		<category domain="category" nicename="thoughts"><![CDATA[Thoughts]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>spaces_a43755b404d273dfcedbd14ccb4f51ab_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[http://cid-04001c604af3f011.users.api.live.net/Users(288261576051650577)/Blogs('4001C604AF3F011!102')/Entries('4001C604AF3F011!395')?authkey=X13wC75MXT0%24]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>我用 Google Reader</title>
		<link>http://jeff.familyyu.net/2006/05/14/%e6%88%91%e7%94%a8-google-reader/</link>
		<pubDate>Sun, 14 May 2006 14:56:23 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang1.wordpress.com/2006/05/14/%e6%88%91%e7%94%a8-google-reader</guid>
		<description></description>
		<content:encoded><![CDATA[<div id="msgcns!4001C604AF3F011!394" class="bvMsg">从上周开始,我已经正式开始使用google reader来订阅blogs,本来我是使用Feed Demon的工具来订阅,这个工具也挺好用的,但是存在一个问题,因为我有时候在公司也要看blog,有时候在家里看,那么这就需要两个所订阅的blog 的目录等一样,有时候我在家里看着突然发现个好的,那么在家里加入订阅行列,有时候我就在公司的Feed Demon就没有了,前段时间觉得Google Reader好像不是很好用,最近这周用了下,感觉还不错....
至少我没发现大问题,对了,我上周把一些老外的比较好的blog的地址统统整理了一遍,现在共享这个label,有兴趣的可以看看..:), Maybe you are also interested in them. <a href="http://www.google.com/reader/view/user/10683915859994493718/label/foregin_tech_blog">http://www.google.com/reader/view/user/10683915859994493718/label/foregin_tech_blog</a>
最近我发现google现在在我的印象里不再只是一个搜索引擎工具,而是一个很有创意,具有很好口碑产品的公司,而且总是对他的产品充满期待...
They are genuine gineus.</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>60</wp:post_id>
		<wp:post_date>2006-05-14 14:56:23</wp:post_date>
		<wp:post_date_gmt>2006-05-14 14:56:23</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e6%88%91%e7%94%a8-google-reader</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="chinese"><![CDATA[Chinese]]></category>
		<category domain="category" nicename="others"><![CDATA[Others]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>spaces_a43755b404d273dfcedbd14ccb4f51ab_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[http://cid-04001c604af3f011.users.api.live.net/Users(288261576051650577)/Blogs('4001C604AF3F011!102')/Entries('4001C604AF3F011!394')?authkey=X13wC75MXT0%24]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>再谈听写VOA</title>
		<link>http://jeff.familyyu.net/2006/05/14/%e5%86%8d%e8%b0%88%e5%90%ac%e5%86%99voa/</link>
		<pubDate>Sun, 14 May 2006 04:17:06 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang1.wordpress.com/2006/05/14/%e5%86%8d%e8%b0%88%e5%90%ac%e5%86%99voa</guid>
		<description></description>
		<content:encoded><![CDATA[<div id="msgcns!4001C604AF3F011!393" class="bvMsg">到今天,我每天听写VOA坚持了28天了,将近一个月了,我觉得习惯是养成了?怎么算养成呢?那就是当我比如某一天不进行听写VOA的时候, 心里觉得很怪,会觉得不习惯.但是呢,我上回说养成一个习惯需要21天,我没说的是,破坏一个习惯,那么只需要7天...
听写VOA效果确实不错,一是可以听他们是怎么断句的,怎么表达些基本的,常见的东西,还有一重要一点就是纠正自己的发音,更重要的一点是,我以前写或者说英语的时候,总是忽略了很多小细节,比如说第三人称,比如说时态,但是我最近也发现我慢慢的开始注意这些了,因为我在听写的时候,我要力争写的百分百正确,这样,就使得我努力让自己去注意...:)
之前觉得听写段VOA之后,就可以不用听了,现在觉得还是要继续坚持VOA的,因为当你听熟悉了之后,你所花的时间就相应的减少了,这样剩余的时间就可以听写其他正常语速的report了.:)</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>61</wp:post_id>
		<wp:post_date>2006-05-14 04:17:06</wp:post_date>
		<wp:post_date_gmt>2006-05-14 04:17:06</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%86%8d%e8%b0%88%e5%90%ac%e5%86%99voa</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="chinese"><![CDATA[Chinese]]></category>
		<category domain="category" nicename="thoughts"><![CDATA[Thoughts]]></category>
		<category domain="post_tag" nicename="voa"><![CDATA[VOA]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>spaces_a43755b404d273dfcedbd14ccb4f51ab_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[http://cid-04001c604af3f011.users.api.live.net/Users(288261576051650577)/Blogs('4001C604AF3F011!102')/Entries('4001C604AF3F011!393')?authkey=X13wC75MXT0%24]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_efficient_related_posts</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{i:0;a:4:{s:2:"ID";s:2:"64";s:10:"post_title";s:9:"我谈VOA";s:7:"matches";s:1:"1";s:9:"permalink";s:58:"http://jeff.familyyu.net/2006/04/16/%e6%88%91%e8%b0%88voa/";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_relation_threshold</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>用Email来发布我的Blog</title>
		<link>http://jeff.familyyu.net/2006/05/12/%e7%94%a8email%e6%9d%a5%e5%8f%91%e5%b8%83%e6%88%91%e7%9a%84blog/</link>
		<pubDate>Fri, 12 May 2006 08:40:33 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang1.wordpress.com/2006/05/12/%e7%94%a8email%e6%9d%a5%e5%8f%91%e5%b8%83%e6%88%91%e7%9a%84blog</guid>
		<description></description>
		<content:encoded><![CDATA[<div id="msgcns!4001C604AF3F011!392" class="bvMsg">还记得昨天我说我在家里一直登录不了MSN吧,我这三天也一直登录不了我的Blog,只能看,但不能进入编辑等. :(, 就在刚才我还在想,如果不行,我就转换地方吧,有点想转到 <a href="http://www.bloger.com/">http://www.bloger.com</a>, (这个已经被Google收购了), 但是转是容易转,我就想说能不能把我在MSN空间上的数据下载下来呢? (很遗憾的发现没有. ;-(  ), 但是意外的发现了一个功能,那就是能用我的mail来发布我的blog. ;-), 所以我就可以用我的gmail来发布了,这样顺带就可以在我的邮箱里保存我的blog了,一举两得,不错.
BTW, 这篇的Blog就是我用mail发布的...&nbsp;

&nbsp;

</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>62</wp:post_id>
		<wp:post_date>2006-05-12 08:40:33</wp:post_date>
		<wp:post_date_gmt>2006-05-12 08:40:33</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e7%94%a8email%e6%9d%a5%e5%8f%91%e5%b8%83%e6%88%91%e7%9a%84blog</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="chinese"><![CDATA[Chinese]]></category>
		<category domain="category" nicename="others"><![CDATA[Others]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>spaces_a43755b404d273dfcedbd14ccb4f51ab_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[http://cid-04001c604af3f011.users.api.live.net/Users(288261576051650577)/Blogs('4001C604AF3F011!102')/Entries('4001C604AF3F011!392')?authkey=X13wC75MXT0%24]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>MSN@china sucks</title>
		<link>http://jeff.familyyu.net/2006/05/11/msnchina-sucks/</link>
		<pubDate>Thu, 11 May 2006 12:38:46 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang1.wordpress.com/2006/05/11/msnchina-sucks</guid>
		<description></description>
		<content:encoded><![CDATA[<div id="msgcns!4001C604AF3F011!389" class="bvMsg">
<div>以后再也不敢用MSN的beta版软件了,本来我在家是用window messenger live的版本,可是不知道怎么搞的,一直登录不了,后来卸载了,再装msn 7.5仍然不行,(我想肯定是在注册表里面被改过,还是去寻找live本本的服务器),而且我就算直接登录<a href="http://www.hotmail.com">http://www.hotmail.com</a>也不行..,?哪里出问题了???? 唉....以至于本来这几天很想写几个关于TDD的blog...</div>
<div>火气大......</div>
<div>以后慢慢的把战场都移到google那边吧,至少我目前在用gmail,google reader...还不错.:)</div>
</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>63</wp:post_id>
		<wp:post_date>2006-05-11 12:38:46</wp:post_date>
		<wp:post_date_gmt>2006-05-11 12:38:46</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>msnchina-sucks</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="chinese"><![CDATA[Chinese]]></category>
		<category domain="post_tag" nicename="msn"><![CDATA[MSN]]></category>
		<category domain="category" nicename="others"><![CDATA[Others]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>spaces_a43755b404d273dfcedbd14ccb4f51ab_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[http://cid-04001c604af3f011.users.api.live.net/Users(288261576051650577)/Blogs('4001C604AF3F011!102')/Entries('4001C604AF3F011!389')?authkey=X13wC75MXT0%24]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_efficient_related_posts</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{i:0;a:4:{s:2:"ID";s:3:"135";s:10:"post_title";s:16:"关于MSN Spaces";s:7:"matches";s:1:"1";s:9:"permalink";s:65:"http://jeff.familyyu.net/2005/05/20/%e5%85%b3%e4%ba%8emsn-spaces/";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_relation_threshold</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>55</wp:comment_id>
			<wp:comment_author><![CDATA[anson]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2006-05-12 07:06:09</wp:comment_date>
			<wp:comment_date_gmt>2006-05-12 07:06:09</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[RPWT]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>我谈VOA</title>
		<link>http://jeff.familyyu.net/2006/04/16/%e6%88%91%e8%b0%88voa/</link>
		<pubDate>Sun, 16 Apr 2006 16:45:17 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang1.wordpress.com/2006/04/16/%e6%88%91%e8%b0%88voa</guid>
		<description></description>
		<content:encoded><![CDATA[<div id="msgcns!4001C604AF3F011!384" class="bvMsg">
<div>今天晚上11点开始听写了下午15:30分的VOA Report,大约5分钟,写完整整大约花了1个小时,因为很多小细节等,还有很多时候,一个句子要重复几遍,你才能把它写完整,尽管你在听第一遍的时候,就知道了他是说什么意思..</div>
<div>VOA可以说我听起来感觉是他念的速度很慢,但是要写得好,对也不是件很容易的事情,所以,我感觉VOA特别适合于听写,因为如果你单只是听他,很容易懂大体意思,但懂大体意思和你完全听写出来这是两回事儿...所以,他适合精听.像ST等这种念的比较快的,你可以把他当作泛听,知道他的大体意思..(等用VOA试听一段时间,至少一百篇,或许可以尝试着来听写ST).</div>
<div>今晚最主要就是感觉花的时间太多了,一个小时,-_-!,或许是刚开始还没适应....</div>
<div>但只要再坚持20天,,,,(因为一个习惯的养成需要21天)....</div>
<div>这里还是要再赞下普特网站(<a href="http://www.putclub.com">http://www.putclub.com</a>),我觉得是最好的国内学英文的网站....</div>
</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>64</wp:post_id>
		<wp:post_date>2006-04-16 16:45:17</wp:post_date>
		<wp:post_date_gmt>2006-04-16 16:45:17</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e6%88%91%e8%b0%88voa</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="chinese"><![CDATA[Chinese]]></category>
		<category domain="category" nicename="thoughts"><![CDATA[Thoughts]]></category>
		<category domain="post_tag" nicename="voa"><![CDATA[VOA]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>spaces_a43755b404d273dfcedbd14ccb4f51ab_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[http://cid-04001c604af3f011.users.api.live.net/Users(288261576051650577)/Blogs('4001C604AF3F011!102')/Entries('4001C604AF3F011!384')?authkey=X13wC75MXT0%24]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_efficient_related_posts</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{i:0;a:4:{s:2:"ID";s:2:"61";s:10:"post_title";s:15:"再谈听写VOA";s:7:"matches";s:1:"1";s:9:"permalink";s:76:"http://jeff.familyyu.net/2006/05/14/%e5%86%8d%e8%b0%88%e5%90%ac%e5%86%99voa/";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_relation_threshold</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>英语 -- 从听写开始</title>
		<link>http://jeff.familyyu.net/2006/04/16/%e8%8b%b1%e8%af%ad-%e4%bb%8e%e5%90%ac%e5%86%99%e5%bc%80%e5%a7%8b/</link>
		<pubDate>Sun, 16 Apr 2006 04:41:57 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang1.wordpress.com/2006/04/16/%e8%8b%b1%e8%af%ad-%e4%bb%8e%e5%90%ac%e5%86%99%e5%bc%80%e5%a7%8b</guid>
		<description></description>
		<content:encoded><![CDATA[<div id="msgcns!4001C604AF3F011!383" class="bvMsg">
<div>这两天刚看到普特网站(<a href="http://www.putclub.com/">www.putclub.com</a>),这是个非常棒的网站,从多方面真正的提高英语,
从去年5月份开始,我每天中午(除了周末)都在听 ABC (<a href="http://abcasiapacific.com/nexus/">http://abcasiapacific.com/nexus/</a>)网站上的English Bite,应该说到今天,快坚持一年了,有提高吗?有,但是效果不是很显著,原因是我每次是刚开始反复听5,6遍,然后看他附带的文本和解释.所以,提高的速度很慢,因为这样只看一遍,而且并没有说每天都消化一篇,有时候只消化了60%.
昨天在普特网上看到这个帖子(<a href="http://bbs.putclub.com/index.php?showtopic=54581">http://bbs.putclub.com/index.php?showtopic=54581</a>),写的很好.
所以,从今天开始,我每天要坚持听写(重点要写)一篇SE (VOA).
以下摘录下那篇帖子(来自dale博士)的内容:</div>
<div>

<hr />

<span style="color: #ff0000;"> 1，提高听力必须花费大量时间
我花在听力上的时间很多。大学刚毕业时，专门练习过托福听力，大约用了300小时。后来断断续续听过北外的中级听力和“高听”，以及VOA的SE。最近四年每天坚持听ST，平均一天听2小时左右。英语听力的提高需要量的积累，不花大量时间不可能有突破。</span></div>
<div><span style="color: #ff0000;">2，提高听力需要阅读、口语、写作、翻译等多项技能的辅助
学习听力不可能孤军深入。我在读大学和研究生其间，花了许多时间阅读英文原版专著，有些课程（宏观经济学、大众传播学、西方文学等）基本上是读英文原著，还利用业余时间翻译过一些资料。由于积累了大量词汇，并熟悉了英文表达方式，为之后的听力练习打下基础。另外，要多练口语，多写作、多跟读。我感到自豪的是，由于平时努力，每次重要的英语考试，如本科生、硕士生、博士生入学英语考试，我都能在不精心准备的状态下，取得好成绩。</span></div>
<div><span style="color: #ff0000;">3，提高听力必须有相应的词汇量
我上大学时背过“英语8000常用词”，也背过小型英语词典。并把记忆单词和日常英语阅读结合起来，加强词汇基础。我在英语学习的起步阶段就接触英英词典，练习用英语解释英语。从而提高了语感。这几年我的词汇量基本稳定在一万以上。</span></div>
<div><span style="color: #ff0000;">4，听写是个好方法
听写的一大好处是可以帮助我们识别语音。只有听准了英语语音，才能把正确的词句记录下来。长期坚持听写，能培养对英语语音的下意识反应。开始学听写很难，可从SE练起，逐渐过渡到ST。最重要的是辨音能力，要提高耳朵的敏感性。这属于物理性练习。没有辨音能力，一切将无从谈起。</span></div>
<div><span style="color: #ff0000;">5，坚持精听
有了一定的听力基础后，可练习精听。每次只听一句话，但一定要听懂。先听简单的话，在听长句、复杂句。开始要听许多遍才懂，熟练以后可以一、二遍就懂。接下来，练习听几句话，听段落，也要求一、二遍完全听懂。由于精听是完全靠耳朵听懂，而不是参考记录文本，因此对提高听力理解力很有帮助。所有听力练习的目的都是为了提高听解力。听写只是手段，不是目的。到一定程度以后，应减少听写量，更不能依靠听写记录文本去理解。</span></div>
<div><span style="color: #ff0000;">6，高质量的泛听
泛听可以提高一次听解的水平。听的时候，应保持心态放松，只管一路听下去，不必纠缠个别生词和难句。要求快速听懂大意，对某些细节和难点，可在第二、第三次听时搞懂。泛听材料不要太难，生词量不要太多。</span></div>
<div><span style="color: #ff0000;">7，主动听一些具有挑战性的材料
科技报道、医药卫生报道、采访实录等比较难懂，可以有选择地听一些。敢啃硬骨头，再听一般性报道，就有了轻松感。</span></div>
<div><span style="color: #ff0000;">8，下意识的听力练习
在睡觉前听，完全放松地听，有利于形成英语下意识，有时在睡梦中也能理解耳边的英语。不要强求每句话都听懂，在模糊状态下也可以积累语言感觉</span></div>
<div>

<hr />

</div>
</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>65</wp:post_id>
		<wp:post_date>2006-04-16 04:41:57</wp:post_date>
		<wp:post_date_gmt>2006-04-16 04:41:57</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e8%8b%b1%e8%af%ad-%e4%bb%8e%e5%90%ac%e5%86%99%e5%bc%80%e5%a7%8b</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="chinese"><![CDATA[Chinese]]></category>
		<category domain="category" nicename="thoughts"><![CDATA[Thoughts]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>spaces_a43755b404d273dfcedbd14ccb4f51ab_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[http://cid-04001c604af3f011.users.api.live.net/Users(288261576051650577)/Blogs('4001C604AF3F011!102')/Entries('4001C604AF3F011!383')?authkey=X13wC75MXT0%24]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>浅谈</title>
		<link>http://jeff.familyyu.net/2006/04/15/%e6%b5%85%e8%b0%88/</link>
		<pubDate>Sat, 15 Apr 2006 19:30:12 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang1.wordpress.com/2006/04/15/%e6%b5%85%e8%b0%88</guid>
		<description></description>
		<content:encoded><![CDATA[<div id="msgcns!4001C604AF3F011!378" class="bvMsg"><div>终于还是忍不住新技术的诱惑(太多太多的人开始看Ruby了,不管是不是牛人),这三四天,我一有空就看&lt;Programing Ruby&gt;和&lt;Agile Web Development With Rails&gt;,晚上终于看完了(确定的说是粗略的浏览完了,要不,哪能在那么短的时间里看完两本枕头厚的书籍).<br /> 先说说Ruby吧,其实,我对学习一门新语言会觉得挺枯燥的,特别是刚开始的时候,因为都是描写那些: 类型,控制流程,方法定义,类定义等东西,很多时候他们只是换了个英文单词来描写,当然了,也还是有些新东西的.<br />  1. 一切皆是对象.<br />    就比如用Java获取一个数字的绝对值,是要: Math.abs(-12);<br />    在Ruby中是: (-12).abs 这里就把绝对值当作是 -12这个对象的一个方法,属性.<br />  2. 变量不用指定类型.<br />    在Java中, String name = &quot;test&quot;;<br />    在Ruby中, name = &quot;test&quot;;<br />  3. 方法的命名规范.<br />    在Java中,方法一般是命名成: isValidStatus()<br />    在Ruby中,则会命名成: is_valid_status()<br />    我更喜欢ruby的这种命名规范,因为我觉得更容易读懂,我个人最希望的是,以后我们可以code as documentation.读code跟读文档一样.<br />  4. Iterator and Block<br />    这两个特别是后面的Block这种方式是Ruby中大家都觉得比较好的一个方式,不过我目前还没深刻体会到,因为我毕竟还没开始真正的项目code.<br />    我记得Martin Fowler曾经还就这个写过一个Closure的Blog.<br />  5. module<br />    1. module可以当作一个NameSpacing(名字空间)来使用<br />    2. mixin<br />     Ruby也是一个只支持单继承的语言,那么如何来实现多继承呢?就用 mix in,就是include你这个Module,就可以使用你那个Include的Module的所有方法,很像Java当中的composite方式.<br />  6. Array和Hash<br />   在Ruby中,并没有像Java那么复杂,没有很多Collection or Map的实现,这里的Collection一般就这两个.Array就是相当于Java中的Array,那么Hash就相当于Map.<br />  7. 支持正则表达式<br />  <br />  Ruby就先说这么多吧,其实如果说没有Rail的话,我对Ruby不会非常感兴趣,就算尽管我看完了Programming Ruby这本书.<br />  &lt;AWDWR&gt;这本书这次获得了Jolt大奖,写的确实不错,我看这本书远比看 &lt;PR&gt;这本书感兴趣.<br />  一是因为&lt;AWDWR&gt;这本书主要是讲Ruby的应用,二而且是讲Ruby在Web开发中的应用,因为毕竟我从刚开始工作后就是一直在跟WEB打交道.<br />  我觉得Rails这个框架其实就是采用了 MVC + Active Record的这种模式,(这个思想在Java的应用中应该随处可见),在当前的Java世界里,框架,模式很多.. (所以我觉得如果是个刚学语言的人,还是要先学Java,这样再来学Ruby就比较好些,特别是当前Ruby的东西远比Java的东西丰富和成熟).<br />  Ruby On Rail为什么会这么火呢?<br />  其中最主要的原因是开发速度快,大家已经受够了J2EE的开发,特别是有涉及到EJB的开发,那个 build/deploy/test的周期太长了,而且还要部署等,太复杂了,所以,用Java做小项目,如果公司没有积累框架的话,开发速度是很慢的.<br />  Rails的一个理念就是: Convention Over Configuration (约定胜于配置)<br />  是的,配置文件太多了,XML文件也太多了,如果你用struts + Spring + hibernate,请你看看你的 xml文件,多到你恐怖,多到你吓人,如果你再用sturts-tiles的话,那么你的xml文件就更多了.多写一行代码代表你又多了一个可能出现Bug的地方.多了一个配置文件,也代表着你多了一处出现Bug的地方.那么,我们为什么不能做个规定或者约定呢,很多时候只是命名的习惯,没必要搞的那么灵活,那么复杂.<br />  <br />  Rails就是基于这种philosopy的,而且他的文件目录结构等,都是用rail的一些自动工具生成,我们所关心的是实现我们所想要的业务逻辑.<br />  其实Rails这个框架或许直接可以用 MVC来说.<br />  View这层呢,是以  .rhtml文件结尾的 html + ruby的文件, 很类似( html + jsp)<br />  Controller这层呢,很类似 Java中的Servlet,但他省略去了配置web.xml,以及struts-config.xml等文件?那他怎么找呢?<br />  著名的Convention.<br />   比如说有个URL是: <a href="http://your.url/store/login">http://your.url/store/login</a><br />  那么他就默认Controller就是: store_controller.rb<br />  那么这个URL调用的是controller中的 login method.<br />  想想如果是用Java,我们是不是得用2个xml文件来配置呢??<br />  最后说到Model这一层,Model这一层他同时也是Action Record,他已经把Model.<br />  看看Java当中的Action Record的是怎么做的?<br />  我们经常要定义个POJO,也就是一个简单的一些get,set方法,然后呢,我们还要定义一个DAO来操作这个对象. 因为DAO这一层要建立起数据库表字段和我们Model之间的关系.<br />  但是在Rails中,我们只需要一个POJO(很多时候这个POJO也不需要定义get set方法,为什么呢?因为他的字段名和数据库的字段名是以一个规则来定义的,既然都知道了<br />  表的字段,当然也就知道了属性名.是不是又省了一部重复代码),所以很多时候在Model里面,我们真正放的是,我们的业务逻辑和对数据库所对应表结构的一些查询.(感觉有点<br />  把Domain Model 和 DAO Manager放在一起了? )<br />  <br />  还有在看Rails框架的时候,我看到了框架中有很多的hooks.很像在Java世界里我们用AOP的Interceptor.就比如你可以在create()方法保存对象到数据库的时候,rails让你可以在此之前他会调用before_at_create(),默认是为空的实现.你可以进行override它.<br />  <br />  还有重要一点就是Rails的服务器很轻型,你改什么Controller,Active Record好像都不用重启,他自动装载,而且服务启动太快了.....<br />  <br />   最后,不过我目前还是觉得Ruby还没法胜任企业的大型的应用,因为一是内容太少,框架太少等,在这方面他目前无法与Java相提并论,但是他的一个好处就是开发速度快,<br />  所以准备以后自己要用的小项目,小东西都用Ruby开发....</div>
<div>  明天,哦不,今天就准备试试看Ruby On Rail行不行.....<br />  <br />  附上几个很链接: <a href="http://beust.com/weblog/archives/000382.html">Why Ruby on Rails won't become mainstream</a></div>
<div>                          <u><font color="#0000ff"><a href="http://www.loudthinking.com/arc/000584.html">Are you sure you want to be mainstream</a></font></u></div>
<div>                         <a href="http://forum.javaeye.com/viewtopic.php?t=19170">Rails作者的经历.</a> </div></div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>66</wp:post_id>
		<wp:post_date>2006-04-15 19:30:12</wp:post_date>
		<wp:post_date_gmt>2006-04-15 19:30:12</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e6%b5%85%e8%b0%88</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby"><![CDATA[Ruby]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>spaces_a43755b404d273dfcedbd14ccb4f51ab_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[http://cid-04001c604af3f011.users.api.live.net/Users(288261576051650577)/Blogs('4001C604AF3F011!102')/Entries('4001C604AF3F011!378')?authkey=X13wC75MXT0%24]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Jameleon Cookbook</title>
		<link>http://jeff.familyyu.net/2006/04/09/jameleon-cookbook/</link>
		<pubDate>Sun, 09 Apr 2006 15:56:34 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang1.wordpress.com/2006/04/09/jameleon-cookbook</guid>
		<description></description>
		<content:encoded><![CDATA[<div id="msgcns!4001C604AF3F011!373" class="bvMsg"><div> 前段时间写了个&lt;<a href="http://jeff.yuchang.googlepages.com/jameleon.rar">jameleon cookbook</a>&gt;,有兴趣的可以下载看看....</div></div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>67</wp:post_id>
		<wp:post_date>2006-04-09 15:56:34</wp:post_date>
		<wp:post_date_gmt>2006-04-09 15:56:34</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>jameleon-cookbook</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="java"><![CDATA[Java]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>spaces_a43755b404d273dfcedbd14ccb4f51ab_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[http://cid-04001c604af3f011.users.api.live.net/Users(288261576051650577)/Blogs('4001C604AF3F011!102')/Entries('4001C604AF3F011!373')?authkey=X13wC75MXT0%24]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>时间过得真快</title>
		<link>http://jeff.familyyu.net/2006/04/09/%e6%97%b6%e9%97%b4%e8%bf%87%e5%be%97%e7%9c%9f%e5%bf%ab/</link>
		<pubDate>Sun, 09 Apr 2006 15:00:01 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang1.wordpress.com/2006/04/09/%e6%97%b6%e9%97%b4%e8%bf%87%e5%be%97%e7%9c%9f%e5%bf%ab</guid>
		<description></description>
		<content:encoded><![CDATA[<div id="msgcns!4001C604AF3F011!372" class="bvMsg">
<div>再过3周就是五一节了,感觉时间过得太快了,想想自己是刚过完春节来深圳的,现在就要过五一了,现在一年大概要这么分: 五一,十一,春节....</div>
<div>又过去了1/3之年,但是自己还是跟以前一样...</div>
<div>咋就觉得大学毕业后,不读书的时间怎么就过得特别快呢....快得我现在回想起来都觉得可怕的快.....</div>
</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>68</wp:post_id>
		<wp:post_date>2006-04-09 15:00:01</wp:post_date>
		<wp:post_date_gmt>2006-04-09 15:00:01</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e6%97%b6%e9%97%b4%e8%bf%87%e5%be%97%e7%9c%9f%e5%bf%ab</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="chinese"><![CDATA[Chinese]]></category>
		<category domain="category" nicename="others"><![CDATA[Others]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>spaces_a43755b404d273dfcedbd14ccb4f51ab_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[http://cid-04001c604af3f011.users.api.live.net/Users(288261576051650577)/Blogs('4001C604AF3F011!102')/Entries('4001C604AF3F011!372')?authkey=X13wC75MXT0%24]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>54</wp:comment_id>
			<wp:comment_author><![CDATA[xiaolu]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2006-10-26 15:01:33</wp:comment_date>
			<wp:comment_date_gmt>2006-10-26 15:01:33</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[我也觉得时间很快，
 
 ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>阳朔之行</title>
		<link>http://jeff.familyyu.net/2006/04/08/%e9%98%b3%e6%9c%94%e4%b9%8b%e8%a1%8c/</link>
		<pubDate>Sat, 08 Apr 2006 11:26:15 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang1.wordpress.com/2006/04/08/%e9%98%b3%e6%9c%94%e4%b9%8b%e8%a1%8c</guid>
		<description></description>
		<content:encoded><![CDATA[<div id="msgcns!4001C604AF3F011!368" class="bvMsg">
<div>上个周末去了阳朔,这个应该算是山水风景最漂亮的地方.
那边有句话这么写:"桂林山水甲天下,阳朔山水甲桂林",这次去那边呢,总得来说感觉很不错.
特别是在第二天漂流漓江的时候,感觉犹如在画中.那边的山都比较小而尖,不适合爬,水比较清澈.
阳朔是个山清水秀的地方,但是感觉现在在被慢慢的开发,好多地方都在修路,所以感觉过段时间后,
大概就会慢慢的失去了那种乡间的感觉.
西街也算阳朔的一个特色,那里大概有10%的老外,这条街可以说跟阳朔有着不同,因为在这条街你感觉不到这是在阳朔,酒吧也算是这里的特色,这里的酒吧跟比如深圳的酒吧不同,他们没有很大的占地面积,很多时候就像一个普通的饭店的地盘那么大.别看阳朔的消费水平不高,但你要是在西街买东西,技术砍价要砍到1/3.
总的来说,这次去感觉很不错,心情得到放松,特别是在漂流漓江的时候,当然了,唯一的不足就是这次去玩的时间才两天,玩得不尽兴...</div>
</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>69</wp:post_id>
		<wp:post_date>2006-04-08 11:26:15</wp:post_date>
		<wp:post_date_gmt>2006-04-08 11:26:15</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e9%98%b3%e6%9c%94%e4%b9%8b%e8%a1%8c</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="chinese"><![CDATA[Chinese]]></category>
		<category domain="category" nicename="others"><![CDATA[Others]]></category>
		<category domain="post_tag" nicename="travel"><![CDATA[Travel]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>spaces_a43755b404d273dfcedbd14ccb4f51ab_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[http://cid-04001c604af3f011.users.api.live.net/Users(288261576051650577)/Blogs('4001C604AF3F011!102')/Entries('4001C604AF3F011!368')?authkey=X13wC75MXT0%24]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_efficient_related_posts</wp:meta_key>
			<wp:meta_value><![CDATA[a:3:{i:0;a:4:{s:2:"ID";s:2:"82";s:10:"post_title";s:12:"第一次...";s:7:"matches";s:1:"1";s:9:"permalink";s:64:"http://jeff.familyyu.net/2005/12/31/%e7%ac%ac%e4%b8%80%e6%ac%a1/";}i:1;a:4:{s:2:"ID";s:3:"108";s:10:"post_title";s:20:""杀人"游戏介绍";s:7:"matches";s:1:"1";s:9:"permalink";s:91:"http://jeff.familyyu.net/2005/08/11/%e6%9d%80%e4%ba%ba%e6%b8%b8%e6%88%8f%e4%bb%8b%e7%bb%8d/";}i:2;a:4:{s:2:"ID";s:3:"128";s:10:"post_title";s:27:"游玩大鹏古城和南澳";s:7:"matches";s:1:"1";s:9:"permalink";s:118:"http://jeff.familyyu.net/2005/05/24/%e6%b8%b8%e7%8e%a9%e5%a4%a7%e9%b9%8f%e5%8f%a4%e5%9f%8e%e5%92%8c%e5%8d%97%e6%be%b3/";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_relation_threshold</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>51</wp:comment_id>
			<wp:comment_author><![CDATA[毛毛虫的青菜园]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2006-04-14 10:37:42</wp:comment_date>
			<wp:comment_date_gmt>2006-04-14 10:37:42</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[      会享受生活的人才是真正幸福的人。
     ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>52</wp:comment_id>
			<wp:comment_author><![CDATA[毛毛虫的青菜园]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2006-04-14 10:33:11</wp:comment_date>
			<wp:comment_date_gmt>2006-04-14 10:33:11</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[      能去那么一个地方去玩是多么美好而又多么奢侈的事情。
      工作之后的人们是否还记得树叶什么时候绿了，北方的鸟儿什么时候走了。记得小时候春天即将来的时候最高兴的事情就是去看树叶的变化，当发现早春的叶子已经开始绿的那一刻的心情似乎已经很久远了。
      不知道多少的生活乐趣在我们很忙的借口中慢慢淡出我们的生命。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>53</wp:comment_id>
			<wp:comment_author><![CDATA[anson]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2006-04-08 12:04:13</wp:comment_date>
			<wp:comment_date_gmt>2006-04-08 12:04:13</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[总的来说，这篇感觉写得不错]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Presentation总结</title>
		<link>http://jeff.familyyu.net/2006/03/20/presentation%e6%80%bb%e7%bb%93/</link>
		<pubDate>Mon, 20 Mar 2006 14:10:14 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang1.wordpress.com/2006/03/20/presentation%e6%80%bb%e7%bb%93</guid>
		<description></description>
		<content:encoded><![CDATA[<div id="msgcns!4001C604AF3F011!352" class="bvMsg">
<div>今天下午做完了Presentation,也就是那个Presentation-tier thinking的Topic,感觉效果一般,没有预期我所希望的效果,包括反馈.我本来想做这个Presentation主要是想和大家交流,根据大家各自的经验进行探讨,但是好像大家没什么反映,很多人感觉我就是没把内容细化.但是40分钟的时间,那么大的题目(题目是我自己选的. :( ),我从一开始就讲的比较赶.</div>
<div>是的,我自己感觉有些地方讲的比较快,比较含糊,特别是讲到模式的时候,没对模式进行细讲,但是我今天其实是一直想让大家试着从一个高一点的层次来看待问题,来总结问题,但或许是我讲的不够深入浅出,使大家听的不明白..</div>
<div>我一直感觉你去听一个Presentation跟去听一个Traning是不同的,Presentation他主要是讲他的思想,他的大体方向。而Tranning呢,他则教你具体的操作,或许很多人更喜欢Traning吧,但我更喜欢Presentation,因为具体的操作需要你自己去看,别人无法帮你.</div>
<div>不过,这次的尝试给了我以下的总结:</div>
<div>1. 内容不要准备的太多,不要尝试着一下子讲述太多东西,效果不好。</div>
<div>2. 尽量不要尝试着讲些太抽象,太high-level的东西. (或许是因为很多人更喜欢Tranning吧)</div>
<div>3. 如果内容多,可以分成上,下 or 上,中,下...</div>
</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>70</wp:post_id>
		<wp:post_date>2006-03-20 14:10:14</wp:post_date>
		<wp:post_date_gmt>2006-03-20 14:10:14</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>presentation%e6%80%bb%e7%bb%93</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="chinese"><![CDATA[Chinese]]></category>
		<category domain="category" nicename="thoughts"><![CDATA[Thoughts]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>spaces_a43755b404d273dfcedbd14ccb4f51ab_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[http://cid-04001c604af3f011.users.api.live.net/Users(288261576051650577)/Blogs('4001C604AF3F011!102')/Entries('4001C604AF3F011!352')?authkey=X13wC75MXT0%24]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>48</wp:comment_id>
			<wp:comment_author><![CDATA[anson]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2006-04-01 04:27:21</wp:comment_date>
			<wp:comment_date_gmt>2006-04-01 04:27:21</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[what is tranning?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>With or Without EJB</title>
		<link>http://jeff.familyyu.net/2006/03/26/with-or-without-ejb/</link>
		<pubDate>Sun, 26 Mar 2006 15:57:09 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang1.wordpress.com/2006/03/26/with-or-without-ejb</guid>
		<description></description>
		<content:encoded><![CDATA[<div id="msgcns!4001C604AF3F011!354" class="bvMsg">
<div>计算机技术这东西,很难说,因为比如某天这些技术很流行,那么过了一段时间,这个技术或许就不流行了,EJB2.0就是个很好的例子,还记得我刚毕业的时候,总觉得好像会EJB的人很牛,EJB很难的样子,但是呢,当我自己开始真正要涉足到EJB的时候呢,这个时候整个业界都在大喊 Without EJB,那么很显然,我就直接过渡到了without EJB的年代,正如我一开发应用就直接开发B/S模式的应用程序,而没有开发C/S模式的应用程序.</div>
<div>但是呢,虽然说,大家都在喊说Without EJB,但是呢,经常面试的时候,很多面试官就开始问EJB的问题,所以我有段时间很郁闷,因为对于目前的业界来说,更流行的是Spring+hibernate,那么,我很多时候很难提起兴趣去研究EJB,但是呢,做为面试需要,有时候还是要去看些EJB,这个时候,就很容易爆发了只看理论,不去实践的行为,只记住一些概念,一些理论,但是没有自己去操作过.</div>
<div>这里,提到一点,我感觉现在的面试官很奇怪,在面试的时候,他希望你是个万金油,但是呢,在实际工作的时候,他就只希望你专一项就好,想想我去年来面试的时候,我明明是来应聘JAVA程序员的,他给我猛问数据库的问题,唉,希望面试官以后稍微能够专业点,正常点,理性点,思维不要太发散.</div>
<div>话回到EJB,这个星期我终于狠下决心来潜心看看EJB,以及在JBOSS上来部署EJB等,总的来说,还不错,至少HelloWorld出来了,当然了,确实比Spring + Hibernate麻烦些,因为要继承一堆的东西,实现一堆的接口,然后还要写descriptor文件..</div>
<div>一般我要研究个技术,学个技术,我一般都会找些书籍来看,来学(这大概在站在巨人的肩膀上,更何况,这巨人还是免费的,何乐而不为呢? ;) ),我参考的书籍是: MasteringEJB 3rd, Jboss at Work, Jboss develper notes.</div>
<div>这个星期时间不多,只是稍微看了SessionBean,这里我觉得Jboss at Work比较不错,他融合了EJB3.0的东西...</div>
<div>其他的EJB的东西以后看完,后续补上...</div>
</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>71</wp:post_id>
		<wp:post_date>2006-03-26 15:57:09</wp:post_date>
		<wp:post_date_gmt>2006-03-26 15:57:09</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>with-or-without-ejb</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="chinese"><![CDATA[Chinese]]></category>
		<category domain="category" nicename="java"><![CDATA[Java]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>spaces_a43755b404d273dfcedbd14ccb4f51ab_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[http://cid-04001c604af3f011.users.api.live.net/Users(288261576051650577)/Blogs('4001C604AF3F011!102')/Entries('4001C604AF3F011!354')?authkey=X13wC75MXT0%24]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>49</wp:comment_id>
			<wp:comment_author><![CDATA[anson]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2006-04-01 04:30:26</wp:comment_date>
			<wp:comment_date_gmt>2006-04-01 04:30:26</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[BLOW JOB?(EAT J B)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>50</wp:comment_id>
			<wp:comment_author><![CDATA[anson]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2006-04-01 04:29:41</wp:comment_date>
			<wp:comment_date_gmt>2006-04-01 04:29:41</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[你能不能简写完附个全名，啥叫EJB。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Eclipse&#039;s CVS Basic Usage</title>
		<link>http://jeff.familyyu.net/2006/03/26/eclipses-cvs-basic-usage/</link>
		<pubDate>Sun, 26 Mar 2006 11:16:01 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang1.wordpress.com/2006/03/26/eclipses-cvs-basic-usage</guid>
		<description></description>
		<content:encoded><![CDATA[<div id="msgcns!4001C604AF3F011!353" class="bvMsg"><div> I find out this article &lt;Eclipse CVS Basic Usage&gt; today, I wrote last year, now you can get this document <a href="http://jeff.yuchang.googlepages.com/Eclipsecvs.doc">here</a>, it is a very basic and easier document, it is for cvs novice.</div></div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>72</wp:post_id>
		<wp:post_date>2006-03-26 11:16:01</wp:post_date>
		<wp:post_date_gmt>2006-03-26 11:16:01</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>eclipses-cvs-basic-usage</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="java"><![CDATA[Java]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>spaces_a43755b404d273dfcedbd14ccb4f51ab_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[http://cid-04001c604af3f011.users.api.live.net/Users(288261576051650577)/Blogs('4001C604AF3F011!102')/Entries('4001C604AF3F011!353')?authkey=X13wC75MXT0%24]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>反省录之”细心“篇</title>
		<link>http://jeff.familyyu.net/2006/03/19/%e5%8f%8d%e7%9c%81%e5%bd%95%e4%b9%8b%e2%80%9d%e7%bb%86%e5%bf%83%e2%80%9c%e7%af%87/</link>
		<pubDate>Sun, 19 Mar 2006 16:24:02 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang1.wordpress.com/2006/03/19/%e5%8f%8d%e7%9c%81%e5%bd%95%e4%b9%8b%e2%80%9d%e7%bb%86%e5%bf%83%e2%80%9c%e7%af%87</guid>
		<description></description>
		<content:encoded><![CDATA[<div id="msgcns!4001C604AF3F011!351" class="bvMsg">
<div>我一直是一个不细心的人,或者说也可以叫不拘小节的人.就好比如我用英文写文章的时候,很少会去关注语法等的小细节的问题,又好比如我每次做工作的时候,对于细节的东西我一直都抱着有点不在意的态度.</div>
<div>是在大学的时候,有段时间,我诉自己,你一定要注意整体感,整体更终于细节.我记得我刚开始在学校里面做网页的时候,特别喜欢关注细节,比如或许在网页的某个角落放了个很好看的动画或者图片等等的,那时候比较少关注整体;后来我有个同学就跟我说,我们更应该关注整体,那时候我觉得他的观点说的非常对,所以就一直提醒自己.</div>
<div>但是现在不行了, 现在的社会竞争的更激烈了,比整体的同时,它也开始比细节, 比细心.就比如说中国人和德国人一起造个地铁,刚开始看上去的时候感觉没什么差别,但是后来碰到下雨天,德国因为注意到细节(这大概也跟经验有关系),所以已经考虑到了这种情况.有人说,美国人关注的是问题的本质,而日本人呢,它更关注到细节,这就是为什么日本的汽车等商品能够比美国那边的利润高,因为他们开始注意减少成本,他们开始注重细节, 但是你却很少看到日本有什么非常惊人的突破,因为他们认识到自己没办法在大的方面创新的时候,他们就先开始在小地方进行创新.</div>
<div>是时候告诉自己,你不但要注意整体,更要注意到细节了.更需要你的细心的心态了.</div>
</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>73</wp:post_id>
		<wp:post_date>2006-03-19 16:24:02</wp:post_date>
		<wp:post_date_gmt>2006-03-19 16:24:02</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%8f%8d%e7%9c%81%e5%bd%95%e4%b9%8b%e2%80%9d%e7%bb%86%e5%bf%83%e2%80%9c%e7%af%87</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="chinese"><![CDATA[Chinese]]></category>
		<category domain="category" nicename="thoughts"><![CDATA[Thoughts]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>spaces_a43755b404d273dfcedbd14ccb4f51ab_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[http://cid-04001c604af3f011.users.api.live.net/Users(288261576051650577)/Blogs('4001C604AF3F011!102')/Entries('4001C604AF3F011!351')?authkey=X13wC75MXT0%24]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>反省录之UML篇</title>
		<link>http://jeff.familyyu.net/2006/03/06/%e5%8f%8d%e7%9c%81%e5%bd%95%e4%b9%8buml%e7%af%87/</link>
		<pubDate>Mon, 06 Mar 2006 15:40:13 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang1.wordpress.com/2006/03/06/%e5%8f%8d%e7%9c%81%e5%bd%95%e4%b9%8buml%e7%af%87</guid>
		<description></description>
		<content:encoded><![CDATA[<div id="msgcns!4001C604AF3F011!346" class="bvMsg">
<div>一直以来,我对UML都没什么好感,不知道什么原因.还记得最早的时候知道UML这个词语的时候,大概是在大四的时候,那时候听说国内非常缺少软件质量管理(CMM)的人,同时那时候觉得会UML的人很牛....但是那时候的Java更流行,所以呢,也就慢慢的淡忘了UML...后来重新再接触到UML的,大概是出社会做的第一个项目,那时候有用Rose,不过那时的PM只是用Rose做数据库表结构的设计,但那时候我也有稍微玩了下,但是因为没有实际应用,所以说应该还是等于零,后来再次接触UML的时候,大概是在做需求分析的时候,有用microsoft visio画了个静态图,但是后来那个图也就不了了之.(大概是画的很难看,我想.).</div>
<div>"你知道真正的牛人都是不用UML的,就像Kent Beck一样,他就从来不用UML"这是我后来经常解释为什么我不看好UML的理由,人要是不想做某件事情,那么他肯定会花些时间努力去找个恰当的至少是找个能把自己阿Q的理由,这样在内心深处就会好过些,或许在这件事情上,我有点酸葡萄的味道,因为我曾经有几次想学好,但是后来一直没学好.</div>
<div>当然了,为什么我会有这种思想呢?还有个理由是,国内对UML的滥用,怎么说滥用?不论是多大多小的需求,都画个UML图出来.其实UML图的出现更关键的是为了团队之间的交流,因为毕竟画UML图需要花费一些时间,而且很多时候业务逻辑改变,你图是需要更新的.</div>
<div>今天我来忏悔呢,是因为我发现有时候有UML图挺好的,怎么说呢?比如说每个设计模式配个UML图,那么之间的类结构,关系就特容易记住.当然了,画UML不要把什么类的方法啊也画的太详细了,记住,UML图是为了简便明了类之间的关系和易于交流.(对我自己说的. ;-) )</div>
<div>最后,想起以前有人问我说,"UML全称是什么?",那时候呢,我就会很认真的告诉他"U Must Learn"...</div>
<div></div>
</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>74</wp:post_id>
		<wp:post_date>2006-03-06 15:40:13</wp:post_date>
		<wp:post_date_gmt>2006-03-06 15:40:13</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%8f%8d%e7%9c%81%e5%bd%95%e4%b9%8buml%e7%af%87</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="chinese"><![CDATA[Chinese]]></category>
		<category domain="category" nicename="thoughts"><![CDATA[Thoughts]]></category>
		<category domain="post_tag" nicename="uml"><![CDATA[UML]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>spaces_a43755b404d273dfcedbd14ccb4f51ab_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[http://cid-04001c604af3f011.users.api.live.net/Users(288261576051650577)/Blogs('4001C604AF3F011!102')/Entries('4001C604AF3F011!346')?authkey=X13wC75MXT0%24]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_efficient_related_posts</wp:meta_key>
			<wp:meta_value><![CDATA[a:0:{}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_relation_threshold</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Presentation-Tier Thinking</title>
		<link>http://jeff.familyyu.net/2006/03/19/presentation-tier-thinking/</link>
		<pubDate>Sun, 19 Mar 2006 14:56:02 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang1.wordpress.com/2006/03/19/presentation-tier-thinking</guid>
		<description></description>
		<content:encoded><![CDATA[<div id="msgcns!4001C604AF3F011!350" class="bvMsg"><div> I've written the Presentation-tier thinking ppt on this weekend, It is just a beginning..... I will carry on.... </div>
<div> You can get the PPT<a href="http://jeff.yuchang.googlepages.com/Presentation-tierThinking.ppt"> here</a> , and any feedbacks are appreciated.</div></div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>75</wp:post_id>
		<wp:post_date>2006-03-19 14:56:02</wp:post_date>
		<wp:post_date_gmt>2006-03-19 14:56:02</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>presentation-tier-thinking</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="java"><![CDATA[Java]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>spaces_a43755b404d273dfcedbd14ccb4f51ab_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[http://cid-04001c604af3f011.users.api.live.net/Users(288261576051650577)/Blogs('4001C604AF3F011!102')/Entries('4001C604AF3F011!350')?authkey=X13wC75MXT0%24]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>无情的反省自己</title>
		<link>http://jeff.familyyu.net/2006/03/11/%e6%97%a0%e6%83%85%e7%9a%84%e5%8f%8d%e7%9c%81%e8%87%aa%e5%b7%b1/</link>
		<pubDate>Sat, 11 Mar 2006 16:57:16 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang1.wordpress.com/2006/03/11/%e6%97%a0%e6%83%85%e7%9a%84%e5%8f%8d%e7%9c%81%e8%87%aa%e5%b7%b1</guid>
		<description></description>
		<content:encoded><![CDATA[<div id="msgcns!4001C604AF3F011!347" class="bvMsg">数数自己毕业快三年了,以前一直告诉自己要把学习技术当作最大的一个重点来发展,但是如今,快三年了,可以说不再应该这么想了,那么我的下一步是该如何发展呢?有点茫然,真的.现在不明白自己接下去的路怎么走?

我一直很讨厌别人动不动就讲做管理的人,因为我觉得你必须先要打底,这样才能更好的做好管理层,特别是对于软件这东西.只有你的技术越好,你当项目经理,
或者领导的时候,你给程序员们的威望就越大.所以这几年我一直告诉自己,一定要先打好技术这个底,先把基本功打扎实.
现在回想,以前的思考是否一直回避着对自己将来的思考,一直以学技术为借口来逃避这个问题.
路,将何去...</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>76</wp:post_id>
		<wp:post_date>2006-03-11 16:57:16</wp:post_date>
		<wp:post_date_gmt>2006-03-11 16:57:16</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e6%97%a0%e6%83%85%e7%9a%84%e5%8f%8d%e7%9c%81%e8%87%aa%e5%b7%b1</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="chinese"><![CDATA[Chinese]]></category>
		<category domain="category" nicename="thoughts"><![CDATA[Thoughts]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>spaces_a43755b404d273dfcedbd14ccb4f51ab_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[http://cid-04001c604af3f011.users.api.live.net/Users(288261576051650577)/Blogs('4001C604AF3F011!102')/Entries('4001C604AF3F011!347')?authkey=X13wC75MXT0%24]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>46</wp:comment_id>
			<wp:comment_author><![CDATA[万兴]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2006-03-16 04:56:08</wp:comment_date>
			<wp:comment_date_gmt>2006-03-16 04:56:08</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[越好是一个什么概念？怎么才算越好？做管理这东西不一定要求你的技术方面要多少的好，只要你具备了一定的技术含量，就可以考虑往管理方面发展．一个人的影响力是多方面的，不仅仅是技术好，还包含个人魅力，领导能力，交际能力．．．
而一个管理人不一定他的技术能力在团队是最好的，但可以肯定的是他的综合能力是团队中最好的，就像美国的钢铁大王卡内基的墓碑上刻着这样的话：“这里躺着一个知道如何使用比自己更有本领的人们为他服务的人。”卡内基之所以成为钢铁大王，并非由于本人有什么了不起的能力，而是因为敢用并善用比自己强的人．
相信你自己吧，路就在你脚下．．．]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>47</wp:comment_id>
			<wp:comment_author><![CDATA[anson]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2006-03-12 01:46:44</wp:comment_date>
			<wp:comment_date_gmt>2006-03-12 01:46:44</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[只有一个重点就是：赚钱
 
抛开些许成就感不谈，做管理，搞技术，做鸡做鸭，还不是为了钱。
 
做什么能让你以后更赚钱，你就FIGHTING吧
 
不过这辈子跟我一样应该做不了鸭了，因为那需要天生丽痔。
 
 ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>软件随想</title>
		<link>http://jeff.familyyu.net/2006/03/01/%e8%bd%af%e4%bb%b6%e9%9a%8f%e6%83%b3/</link>
		<pubDate>Wed, 01 Mar 2006 14:57:58 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang1.wordpress.com/2006/03/01/%e8%bd%af%e4%bb%b6%e9%9a%8f%e6%83%b3</guid>
		<description></description>
		<content:encoded><![CDATA[<div id="msgcns!4001C604AF3F011!345" class="bvMsg">
<div>一般我在学习新技术的时候,都比较来劲儿,兴趣都很大,不管是尝试着学一种新的技术，或者是学个新的什么东西都这样，但是呢，过了一小段时间，就好比如说学习Java,写了个Hello World之后,就开始兴趣慢慢的减弱再接着就觉得有点无聊，有点郁闷，因为随着你越学越深入,有时候并不是那么容易就学好，学成功。</div>
<div>很多人都习惯说把软件看成是一门艺术,有本书叫《软件工艺学》，但我更倾向把做软件比喻成做数学题，很多时候，你就得问很多个为什么,这样你才能把东西理解透.那么做个软件就好比解道数学题,你有很多种做法,就好比如说你有很多种解法解一道数学题,但是有得解法就很邋遢,很糟糕,有的就做的很巧妙.但是在编软件这个过程中，只有些类似数学中的公理,就好比如OO原则,一些大家公认的好的原则,那么那些设计模式就好比如以前我们做数学练习题中的后面比较常用的一些可以当作大家也都认可的,但又比公理复杂些的结论(potain曾这么比喻过设计模式,我很支持)。所以要学好这个怎么做软件,你先得把公里等一些基础的东西搞清楚,就好比如你做个数学难题,如果你连基本的定理公理都不会的话,那么做起来就难度很大(这里以前那些比较头痛数学的人应该深有体会.:) ),当然了,你看多了难题和难题的标准答案,你也间接的巩固了基础知识,以及明白了基础知识是在什么场合下应用,这也是我们为什么要看些好的代码,好的框架,因为从中我们可以看看别人是怎么解决问题的.</div>
<div>我知道这个做软件和解数学题有很多的不同,比如软件也很注重他的维护性和扩展性,或许把软件当成一种工艺来比喻更合适,但我总觉得好像跟工艺,艺术搭上边的,一般都需要些比较有天赋,或者说比较有美感的人来做才比较适合....但我觉得,对我自己来说,把做软件也当作做数学题来比喻更能让自己接受些,更能好理解些(或许跟我中学喜欢数学有点关系??我不确定,呵呵).</div>
<div>最后,今天在Google的Portal page中的Quote of the day栏目中看到这么一段话,觉得很好玩:</div>
<div></div>
<div><span style="color: #ff0000;"> </span><span style="color: #ff0000;">"Today's scientists have substituted mathematics for experiments, and they wander off through equation after equation, and eventually build a structure which has no relation to reality." </span>
- <a href="http://www.quotationspage.com/quotes/Nikola_Tesla"><span style="text-decoration: underline;"><span style="color: #0000ff;">Nikola Tesla</span></span></a></div>
<div>我试翻译如下:</div>
<div>今天的科学家们尝试着用数学来替换实验,然后他们渐渐的走入了一系列的等于号的世界,到最后终于建立起了一个结构(也就用等于号建立起来的),但是这个结构却已经脱离了现实.</div>
<div></div>
</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>77</wp:post_id>
		<wp:post_date>2006-03-01 14:57:58</wp:post_date>
		<wp:post_date_gmt>2006-03-01 14:57:58</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e8%bd%af%e4%bb%b6%e9%9a%8f%e6%83%b3</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="chinese"><![CDATA[Chinese]]></category>
		<category domain="category" nicename="thoughts"><![CDATA[Thoughts]]></category>
		<category domain="post_tag" nicename="thoughts"><![CDATA[Thoughts]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>spaces_a43755b404d273dfcedbd14ccb4f51ab_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[http://cid-04001c604af3f011.users.api.live.net/Users(288261576051650577)/Blogs('4001C604AF3F011!102')/Entries('4001C604AF3F011!345')?authkey=X13wC75MXT0%24]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>ozh_ta_tagged</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_efficient_related_posts</wp:meta_key>
			<wp:meta_value><![CDATA[a:0:{}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_relation_threshold</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>感想</title>
		<link>http://jeff.familyyu.net/2006/02/25/%e6%84%9f%e6%83%b3/</link>
		<pubDate>Sat, 25 Feb 2006 07:22:29 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang1.wordpress.com/2006/02/25/%e6%84%9f%e6%83%b3</guid>
		<description></description>
		<content:encoded><![CDATA[<div id="msgcns!4001C604AF3F011!343" class="bvMsg">
<div>
<div>昨天晚上花了1个半小时看的&lt;隔断里的猪&gt;(<a href="http://blog.csdn.net/commerceserver/">http://blog.csdn.net/commerceserver/</a>),看完这篇文章,什么心情呢？应该说心情有点压抑,因为这是一篇描述程序员的生活,描写出了程序员的困惑,特别是在外包公司越来越多的现实社会里.</div>
<div>还记得我刚来深圳的时候,面试后的一些感觉是,为什么深圳会有这么多的外包公司呢?而且一般都是做华为的外包,有人这么说过,来深圳找工作的程序员80%都会到华为进行面试,因为外包公司都会带他们的员工来华为面试.我不确定出现外包公司是不是一种社会分工细致的一种体现,正如深圳的干洗店一般都是只负责接收和送衣服,而干洗的流程则通通是送往厂里进行统一干洗.</div>
<div>在中国现在越来越多的外包公司出现,前段时间还听说印度的知名外包企业也入驻上海,开始猛招人了,真正做好的产品的软件已经越来越少了.</div>
<div>"中国呆不下去了,尽快移民去加拿大吧."文章中提到这么个观点,呵呵,是啊,现在的中国真的是大家的眼里只注重钱,可以说中国的财富大部分都是积累在小数人手里,中国这个讲人情,讲关系的社会,注定了贪官现象的普遍存在,尽管每天每时每刻都在说猛打贪官,不知道谁曾经说过,现在的中国就属于当时进行原始积累的资本主义.</div>
<div>大一,大二的时候经常谈理想,谈发展,大三大四的时候就已经不谈了,因为明白谈了也没用,关键是学点东西,赚点钱以来维持自己的生活,当你没法生存的时候,谈理想就犹如谈幻想;正如我现在也不大喜欢责怪中国的种种弊病,因为已经麻木了,我正在被社会默默的改变,我正在慢慢的变得冷漠了.</div>
</div>
</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>78</wp:post_id>
		<wp:post_date>2006-02-25 07:22:29</wp:post_date>
		<wp:post_date_gmt>2006-02-25 07:22:29</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e6%84%9f%e6%83%b3</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="chinese"><![CDATA[Chinese]]></category>
		<category domain="category" nicename="thoughts"><![CDATA[Thoughts]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>spaces_a43755b404d273dfcedbd14ccb4f51ab_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[http://cid-04001c604af3f011.users.api.live.net/Users(288261576051650577)/Blogs('4001C604AF3F011!102')/Entries('4001C604AF3F011!343')?authkey=X13wC75MXT0%24]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>45</wp:comment_id>
			<wp:comment_author><![CDATA[anson]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2006-02-25 10:57:33</wp:comment_date>
			<wp:comment_date_gmt>2006-02-25 10:57:33</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[你也渐渐成熟。。。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>学习 ThreadLocal</title>
		<link>http://jeff.familyyu.net/2006/07/27/%e5%ad%a6%e4%b9%a0-threadlocal/</link>
		<pubDate>Thu, 27 Jul 2006 10:11:48 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang1.wordpress.com/2006/07/27/%e5%ad%a6%e4%b9%a0-threadlocal</guid>
		<description></description>
		<content:encoded><![CDATA[<div id="msgcns!4001C604AF3F011!410" class="bvMsg">ThreadLocal, 我到目前还没正式用过这个东西,因为他更多的是被应用于基础架构的编写,在我理解看来, ThreadLocal就是存放Context的地方,这个地方只能是当前的Thread才能访问,他的生命周期是到这个Thread完毕.<br />文章[1]中的一段说明,我觉得说的很清楚:<br /><br />So what's the difference between a thread-local variable and a normal variable?
When a thread accesses a thread-local variable it has its own independently
initialized copy of the variable. Each thread holds an implicit reference to its
copy as long as the thread is alive. So when the thread goes away, all of its
thread-local instances are subject to gc.<br />You typically use an anonymous
inner class to provide an initial value (if any) using an appropriate
constructor and return the newly constructed object.<br /><br />You can use this <code>ThreadLocal</code> in several situations:<br /><ol><li><strong>To keep state with a thread (user-id, transaction-id,
logging-id)</strong><li><strong>To cache objects which you need frequently</strong></ol>但是,同时你也要注意Context的cleanup,要不然,他就会变成evil.[2]<br /> <br />今天在TSS链接了一篇关于ThreadLocal的Blog: [3]<br /><br />总之,什么时候用ThreadLocal呢？需要一些Thread-safe的全局变量,但是用他的时候,记得最后清空,要不然会导致memory-leak.
<br /><br />Update: 最近刚看到Uncle Bob的一篇关于Threadlocal的文章[4]<br /><br />[1]:<a href="http://www.bloggingaboutjava.org/cms/wordpress/2005/12/threadlocal-is-your-friend/)">http://www.bloggingaboutjava.org/cms/wordpress/2005/12/threadlocal-is-your-friend/</a><br />[2]:<a href="http://blog.arendsen.net/index.php/2005/02/16/threadlocals-are-evil/">http://blog.arendsen.net/index.php/2005/02/16/threadlocals-are-evil/</a><br />[3]:<a href="http://crazybob.org/2006/07/hard-core-java-threadlocal.html">http://crazybob.org/2006/07/hard-core-java-threadlocal.html</a><br />[4]:<a href="http://blog.objectmentor.com/articles/2007/09/04/thread-local-a-convenient-abomination">http://blog.objectmentor.com/articles/2007/09/04/thread-local-a-convenient-abomination</a><br /></div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>28</wp:post_id>
		<wp:post_date>2006-07-27 10:11:48</wp:post_date>
		<wp:post_date_gmt>2006-07-27 10:11:48</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%ad%a6%e4%b9%a0-threadlocal</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="java"><![CDATA[Java]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>spaces_a43755b404d273dfcedbd14ccb4f51ab_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[http://cid-04001c604af3f011.users.api.live.net/Users(288261576051650577)/Blogs('4001C604AF3F011!102')/Entries('4001C604AF3F011!410')?authkey=X13wC75MXT0%24]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>59</wp:comment_id>
			<wp:comment_author><![CDATA[帅帅小茄]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2006-07-27 10:47:15</wp:comment_date>
			<wp:comment_date_gmt>2006-07-27 10:47:15</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[路过，踩踩，你这不错呀！]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Jeff说模式 - Vistor 模式</title>
		<link>http://jeff.familyyu.net/2006/09/03/jeff%e8%af%b4%e6%a8%a1%e5%bc%8f-vistor-%e6%a8%a1%e5%bc%8f/</link>
		<pubDate>Sun, 03 Sep 2006 16:35:18 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang1.wordpress.com/2006/09/03/jeff%e8%af%b4%e6%a8%a1%e5%bc%8f-vistor-%e6%a8%a1%e5%bc%8f</guid>
		<description></description>
		<content:encoded><![CDATA[<div id="msgcns!4001C604AF3F011!419" class="bvMsg">今天下午翻阅了数本资料,终于把Vistor这个模式整理出了一条比较清晰的思路,因为毕竟在实际的做应用程序的时候,很少用到vistor模式,所以一直在我的脑海里是处于半桶水的状态.&nbsp;

[意图]
Represent an operation to be performed on the elements of an object structure. Visitor lets you define a new operation without changing the classes of the elements on which it operates.
表示一个作用于某个对象结构中的各元素的操作,它使你可以在不改变各元素的类的前提下定义作用于这些元素的新操作.

<span style="color: #ff0000;"><span style="color: #000000;">我觉得这个模式主要是在这样的情景情况下应用的.</span></span>

有几个比较稳定的类结构,比如说: 存在 Engineer, Senior Engineer, Project Manager, Account Manager 这么几个不同的类,那么他们可能有些共同的待遇问题,就比如说每次的加薪,这个加薪的算法是每个类他有自己的算法. 理论上来说,这个加薪的算法应该是放在Engineer, Senior Engineer, Project Manager自己类里面的. 但是问题在于,他们之间的共同待遇问题不仅仅就一个,他们有很多,而且在未来里,比如说因为公司的福利待遇好,又要增加某些他们共有的东西,但是呢,算法是根据各个类来做决定的,就比如说Project Manager的待遇肯定要比Engineer的待遇好...

就这个问题,我们看到了不变和变的部分, 不变的是各个职位; 变的是他们之间共有的待遇算法. 所以,我们必须抽取出变的部分,封装起来,把它独立放在一个地方.

这也正是Vistor模式最适合应用的场景.
Uncle Bob这么描述, 我们可以把这样的问题看作是一个矩阵(或者坐标), X轴是职位, Y轴是共有的待遇. 如果Y轴经常变,我们就需要用Vistor模式,如果是X轴经常变,那么我们就应该把待遇的算法直接放入到职位类当中. (我很喜欢这个总结. ;-) ).

[效果] - 优缺点:
1. 更容易增加新的操作. (也就是更容易添加新的福利,待遇算法)
2. 集中相关的操作,分离无关的操作. (也就是把共有的福利算法集中在一起)
3. 累积状态.
4. 破坏封装. ( 因为现在在外面的福利算法这个类可以改变职位类当中的某些属性,这样就说明了职位类这个类封装的不好,因为好的类的封装只能是通过这个类本身来改变自己的数据.)
5. 增加新的ConcreteElement很难. (也就是增加新的职位难,因为你新增加一个职位,你需要相应的去改变这个职位的福利算法).

具体的实现和参考资料:
<a href="http://www.dofactory.com/Patterns/PatternVisitor.aspx">
http://www.dofactory.com/Patterns/PatternVisitor.aspx </a>
<a href="http://www.exciton.cs.rice.edu/JavaResources/DesignPatterns/VisitorPattern.htm">http://www.exciton.cs.rice.edu/JavaResources/DesignPatterns/VisitorPattern.htm </a>
<a href="http://www.javaworld.com/javaworld/javatips/jw-javatip98.html">http://www.javaworld.com/javaworld/javatips/jw-javatip98.html</a>
&lt;Agile Software Development Principles, Patterns and Practices&gt;
&lt;Design Patterns&gt;
&lt;Refactoring to Patterns&gt;

</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>37</wp:post_id>
		<wp:post_date>2006-09-03 16:35:18</wp:post_date>
		<wp:post_date_gmt>2006-09-03 16:35:18</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>jeff%e8%af%b4%e6%a8%a1%e5%bc%8f-vistor-%e6%a8%a1%e5%bc%8f</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="chinese"><![CDATA[Chinese]]></category>
		<category domain="post_tag" nicename="design-patterns"><![CDATA[Design Patterns]]></category>
		<category domain="category" nicename="java"><![CDATA[Java]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>spaces_a43755b404d273dfcedbd14ccb4f51ab_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[http://cid-04001c604af3f011.users.api.live.net/Users(288261576051650577)/Blogs('4001C604AF3F011!102')/Entries('4001C604AF3F011!419')?authkey=X13wC75MXT0%24]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_efficient_related_posts</wp:meta_key>
			<wp:meta_value><![CDATA[a:8:{i:0;a:4:{s:2:"ID";s:1:"6";s:10:"post_title";s:53:"[CXF]CXF中的两个概念:Invoker & PhaseInterceptor";s:7:"matches";s:1:"1";s:9:"permalink";s:121:"http://jeff.familyyu.net/2007/08/26/cxfcxf%e4%b8%ad%e7%9a%84%e4%b8%a4%e4%b8%aa%e6%a6%82%e5%bf%b5invoker-phaseinterceptor/";}i:1;a:4:{s:2:"ID";s:2:"10";s:10:"post_title";s:61:"[CXF]CXF当中的Configuration -- Spring2.0可扩展XML配置";s:7:"matches";s:1:"1";s:9:"permalink";s:141:"http://jeff.familyyu.net/2007/08/23/cxfcxf%e5%bd%93%e4%b8%ad%e7%9a%84configuration-spring2-0%e5%8f%af%e6%89%a9%e5%b1%95xml%e9%85%8d%e7%bd%ae/";}i:2;a:4:{s:2:"ID";s:2:"19";s:10:"post_title";s:38:"[CXF]CXF中DynamicProxy模式的应用";s:7:"matches";s:1:"1";s:9:"permalink";s:109:"http://jeff.familyyu.net/2007/07/15/cxfcxf%e4%b8%addynamicproxy%e6%a8%a1%e5%bc%8f%e7%9a%84%e5%ba%94%e7%94%a8/";}i:3;a:4:{s:2:"ID";s:2:"23";s:10:"post_title";s:46:"[CXF]CXF中Collection Parameter模式的应用";s:7:"matches";s:1:"1";s:9:"permalink";s:117:"http://jeff.familyyu.net/2007/07/14/cxfcxf%e4%b8%adcollection-parameter%e6%a8%a1%e5%bc%8f%e7%9a%84%e5%ba%94%e7%94%a8/";}i:4;a:4:{s:2:"ID";s:2:"22";s:10:"post_title";s:42:"[CXF]CXF中的AbstractFactory模式应用.";s:7:"matches";s:1:"1";s:9:"permalink";s:112:"http://jeff.familyyu.net/2007/07/14/cxfcxf%e4%b8%ad%e7%9a%84abstractfactory%e6%a8%a1%e5%bc%8f%e5%ba%94%e7%94%a8/";}i:5;a:4:{s:2:"ID";s:2:"24";s:10:"post_title";s:33:"Jeff说模式 - Interceptor模式";s:7:"matches";s:1:"1";s:9:"permalink";s:98:"http://jeff.familyyu.net/2007/07/14/jeff%e8%af%b4%e6%a8%a1%e5%bc%8f-interceptor%e6%a8%a1%e5%bc%8f/";}i:6;a:4:{s:2:"ID";s:2:"20";s:10:"post_title";s:34:"[CXF]CXF中的Observer模式应用";s:7:"matches";s:1:"1";s:9:"permalink";s:105:"http://jeff.familyyu.net/2007/07/12/cxfcxf%e4%b8%ad%e7%9a%84observer%e6%a8%a1%e5%bc%8f%e5%ba%94%e7%94%a8/";}i:7;a:4:{s:2:"ID";s:3:"124";s:10:"post_title";s:23:"Design Pattern Thinking";s:7:"matches";s:1:"1";s:9:"permalink";s:60:"http://jeff.familyyu.net/2005/06/13/design-pattern-thinking/";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_relation_threshold</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>梦见自己大学刚毕业</title>
		<link>http://jeff.familyyu.net/2006/09/02/%e6%a2%a6%e8%a7%81%e8%87%aa%e5%b7%b1%e5%a4%a7%e5%ad%a6%e5%88%9a%e6%af%95%e4%b8%9a/</link>
		<pubDate>Sat, 02 Sep 2006 03:42:41 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang1.wordpress.com/2006/09/02/%e6%a2%a6%e8%a7%81%e8%87%aa%e5%b7%b1%e5%a4%a7%e5%ad%a6%e5%88%9a%e6%af%95%e4%b8%9a</guid>
		<description></description>
		<content:encoded><![CDATA[<div id="msgcns!4001C604AF3F011!418" class="bvMsg">昨晚很无缘无故的梦见自己大学刚要毕业,准备猛庆祝一番,因为终于念完了十几年的书...醒来的时候发现这个梦很奇怪...
想想现在已经不知不觉的毕业三年多了.
很多同学都开始贴结婚照,都开始买房子了,看来现在压力转变了,以前是觉得念书,考试很有压力,现在是买房,生活很有压力.</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>41</wp:post_id>
		<wp:post_date>2006-09-02 03:42:41</wp:post_date>
		<wp:post_date_gmt>2006-09-02 03:42:41</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e6%a2%a6%e8%a7%81%e8%87%aa%e5%b7%b1%e5%a4%a7%e5%ad%a6%e5%88%9a%e6%af%95%e4%b8%9a</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="chinese"><![CDATA[Chinese]]></category>
		<category domain="category" nicename="thoughts"><![CDATA[Thoughts]]></category>
		<category domain="post_tag" nicename="%e8%87%aa%e8%a8%80%e8%87%aa%e8%af%ad"><![CDATA[自言自语]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>spaces_a43755b404d273dfcedbd14ccb4f51ab_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[http://cid-04001c604af3f011.users.api.live.net/Users(288261576051650577)/Blogs('4001C604AF3F011!102')/Entries('4001C604AF3F011!418')?authkey=X13wC75MXT0%24]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_efficient_related_posts</wp:meta_key>
			<wp:meta_value><![CDATA[a:9:{i:0;a:4:{s:2:"ID";s:2:"88";s:10:"post_title";s:35:"爱好过多=没有真正的爱好?";s:7:"matches";s:1:"1";s:9:"permalink";s:136:"http://jeff.familyyu.net/2005/12/01/%e7%88%b1%e5%a5%bd%e8%bf%87%e5%a4%9a%e6%b2%a1%e6%9c%89%e7%9c%9f%e6%ad%a3%e7%9a%84%e7%88%b1%e5%a5%bd/";}i:1;a:4:{s:2:"ID";s:3:"101";s:10:"post_title";s:35:"写Blog是否有暴露狂的症状?";s:7:"matches";s:1:"1";s:9:"permalink";s:131:"http://jeff.familyyu.net/2005/08/30/%e5%86%99blog%e6%98%af%e5%90%a6%e6%9c%89%e6%9a%b4%e9%9c%b2%e7%8b%82%e7%9a%84%e7%97%87%e7%8a%b6/";}i:2;a:4:{s:2:"ID";s:3:"102";s:10:"post_title";s:13:"相信命运?";s:7:"matches";s:1:"1";s:9:"permalink";s:73:"http://jeff.familyyu.net/2005/08/30/%e7%9b%b8%e4%bf%a1%e5%91%bd%e8%bf%90/";}i:3;a:4:{s:2:"ID";s:3:"104";s:10:"post_title";s:12:"论 "坚持"";s:7:"matches";s:1:"1";s:9:"permalink";s:65:"http://jeff.familyyu.net/2005/08/27/%e8%ae%ba-%e5%9d%9a%e6%8c%81/";}i:4;a:4:{s:2:"ID";s:3:"115";s:10:"post_title";s:34:"英语口语和听力真难提高!";s:7:"matches";s:1:"1";s:9:"permalink";s:136:"http://jeff.familyyu.net/2005/07/21/%e8%8b%b1%e8%af%ad%e5%8f%a3%e8%af%ad%e5%92%8c%e5%90%ac%e5%8a%9b%e7%9c%9f%e9%9a%be%e6%8f%90%e9%ab%98/";}i:5;a:4:{s:2:"ID";s:3:"120";s:10:"post_title";s:14:"Blog or Track?";s:7:"matches";s:1:"1";s:9:"permalink";s:50:"http://jeff.familyyu.net/2005/06/23/blog-or-track/";}i:6;a:4:{s:2:"ID";s:3:"127";s:10:"post_title";s:25:"《你的灯亮着吗?》";s:7:"matches";s:1:"1";s:9:"permalink";s:109:"http://jeff.familyyu.net/2005/06/07/%e3%80%8a%e4%bd%a0%e7%9a%84%e7%81%af%e4%ba%ae%e7%9d%80%e5%90%97%e3%80%8b/";}i:7;a:4:{s:2:"ID";s:3:"134";s:10:"post_title";s:30:"对自己人生规划的思考";s:7:"matches";s:1:"1";s:9:"permalink";s:127:"http://jeff.familyyu.net/2005/05/23/%e5%af%b9%e8%87%aa%e5%b7%b1%e4%ba%ba%e7%94%9f%e8%a7%84%e5%88%92%e7%9a%84%e6%80%9d%e8%80%83/";}i:8;a:4:{s:2:"ID";s:3:"139";s:10:"post_title";s:21:"程序代码和英语";s:7:"matches";s:1:"1";s:9:"permalink";s:100:"http://jeff.familyyu.net/2005/05/19/%e7%a8%8b%e5%ba%8f%e4%bb%a3%e7%a0%81%e5%92%8c%e8%8b%b1%e8%af%ad/";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_relation_threshold</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Erich Gamma Interviews</title>
		<link>http://jeff.familyyu.net/2006/08/27/erich-gamma-interviews/</link>
		<pubDate>Sun, 27 Aug 2006 17:22:39 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang1.wordpress.com/2006/08/27/erich-gamma-interviews</guid>
		<description></description>
		<content:encoded><![CDATA[<div id="msgcns!4001C604AF3F011!417" class="bvMsg"><div>These are really very very ... good series... in case you miss them..</div>
<div> </div>
<div><a href="http://www.artima.com/lejava/articles/gammadp.html"><font color="#800080"><u>1. How to Use Design Patterns</u></font></a><br /><a href="http://www.artima.com/lejava/articles/reuse.html"><font color="#800080"><u>2. Erich Gamma on Flexibility and Reuse</u></font></a><br /><a href="http://www.artima.com/lejava/articles/designprinciples.html"><font color="#800080"><u>3. Design Principles from Design Patterns</u></font></a><br /><a href="http://www.artima.com/lejava/articles/patterns_practice.html"><font color="#800080"><u>4. Patterns and Practice</u></font></a><br /><a href="http://www.artima.com/lejava/articles/eclipse_culture.html"><u><font color="#800080">5. Eclipse's Culture of Shipping</font></u></a></div></div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>42</wp:post_id>
		<wp:post_date>2006-08-27 17:22:39</wp:post_date>
		<wp:post_date_gmt>2006-08-27 17:22:39</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>erich-gamma-interviews</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="java"><![CDATA[Java]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>spaces_a43755b404d273dfcedbd14ccb4f51ab_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[http://cid-04001c604af3f011.users.api.live.net/Users(288261576051650577)/Blogs('4001C604AF3F011!102')/Entries('4001C604AF3F011!417')?authkey=X13wC75MXT0%24]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>陈升...骄傲的歌手.</title>
		<link>http://jeff.familyyu.net/2006/08/23/%e9%99%88%e5%8d%87-%e9%aa%84%e5%82%b2%e7%9a%84%e6%ad%8c%e6%89%8b/</link>
		<pubDate>Wed, 23 Aug 2006 14:59:45 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang1.wordpress.com/2006/08/23/%e9%99%88%e5%8d%87-%e9%aa%84%e5%82%b2%e7%9a%84%e6%ad%8c%e6%89%8b</guid>
		<description></description>
		<content:encoded><![CDATA[<div id="msgcns!4001C604AF3F011!416" class="bvMsg">
<div>昨天看了这篇Blog: <a href="http://zbw25.blogspot.com/2006/08/blog-post_20.html">http://zbw25.blogspot.com/2006/08/blog-post_20.html</a></div>
<div>然后用emule在<a href="http://lib.verycd.com/2005/06/21/0000054808.html">http://lib.verycd.com/2005/06/21/0000054808.html</a>下载了12.15号的&lt;桃色蛋白质&gt;,其实,我现在也不喜欢台湾的综艺节目,总觉得在玩低级趣味...</div>
<div>但是,看了这期之后,觉得陈升是个牛逼的人,他说的话...真牛..平淡但真实,说得太真实了...你可以看他说&lt;给金城武写信&gt;的那段..</div>
<div>当然了,这期主要还是讲他和刘若英之间的那种情感吧...我一直在思考着该怎么写呢?</div>
<div>答案就是,引用下面这个人的评论(<a href="http://www.douban.com/review/1050474/">http://www.douban.com/review/1050474/</a>),很精彩..</div>
<div>

<hr />

</div>
<div><span style="color: #ff0000;">听这张唱片前，先看了刘若英和陈升的那期《桃色蛋白质》。刘若英和候佩岑哭到稀里哗啦，我也眼泪狂飞，是好想好想，大哭一场的那种。

看综艺节目哭成这样，还是第一次诶。而且，刘若英从来就不是我很喜欢的艺人。
可是不行了不行了，陈升一边说话，我便一边要哭翻过去。一地白纸巾。

有人说刘若英是恋着陈升的。或许。或许。我对他们之间是否真有过隐约的爱恋并无兴趣，节目一开录，送他CD被当场拒收奶茶便开始哽咽得说不出话来，我反而觉得，像陈升说的，他是爸爸。
候佩岑问陈升，你有喜欢过奶茶吗？陈升反问，你神经病啊？我不喜欢她，我怎么会为她做那么多事？

我不知道他为奶茶做过多少事，《为爱痴狂》这首歌一录三四年，陈升耗掉三百万，这是外人所知的物质。而物质之外，更多更多，那是奶茶才最清楚记得的。但我知道并不是每个女孩子都能碰到这样一个男人。当还青涩的时候，他便牵着你往前走。不需要说太多话，不管哪个角落，不管是不是在视线里，只要想到他说的每一句话，便有继续走下去的力气。哪怕他沉默，不发一语，可是感觉得到他伸过来握住你的手。
这样的人只有一个。只会有一个。他占据你太多青春，是所有温暖里，最厚最不可替代的一部分。
然而当你成长、成熟了的时候，以为还可以一起逆风飞行，回头找他的时候，他却已经不见了。昔日端茶倒水买奶茶的助理，现在已是光环重重的影后、歌手。陈升唱歌给奶茶听：不是阮不肯等，时代已不同了。
奶茶问，如果我有问题，你可不可以来找我？奶茶没有问，我能不能去找你？她问，你能不能来找我？在某个人面前，是永远感觉不到自己已经强大到可以不要他了的。你来找我啊，来找我。
可是陈升说，你已经飞很远了，我找不到了。奶茶泪如雨下。我的线是在你手里的，风筝哪怕掉下来了，你拉着线来找我啊，你还是找得到我在哪里的。陈升说，你白痴啊？怎么可能呢？
那么重那么直接的话。在场的人都落泪。奶茶那么气那么急，泣不成声地孩子一般地追问，你没有放过风筝么？陈升笑，沉默片刻又落寞地又对候佩岑重复，找不到了。佩岑，我找不到了。一直在讲狠话的男子，那一刻才满目沧桑，脸上流露不易察觉的无助。

可知在录这期节目之前，这对乐坛里师徒情分口碑极好的两人已两三年未见过。而陈升还说，你们不要再打扰我了，我好忙，要做自己的事情。
话语虽重，不舍犹存。你疼他的狠心。可更疼他的狠心其实跟牵挂一样多。

好残忍。收获便意味着失去，可是为什么要失去那么重要，那么不愿意失去的一个人。为什么要失去带来这一切荣耀的人。明明不是翅膀变硬后的淡漠离开，明明一直如此依赖，可自己的轨迹划出的一刻，两个人便渐行渐远。
别说抱歉。这样的淡出，都谈不上挽回。世上遗憾本来就很多，并不是为某人留出空位，他便能够来安心居住。长相厮守，一醉方休。
原来，并不是每个乖小孩都能等到“长腿爸爸”的美好结局。

从来就不怎么喜欢听刘若英唱歌。可是再找她的歌来听，才听出来，原来她在唱歌的时候，永远永远在心里都有一个听众，这个人的名字，叫陈升。


在那么有限的生命中
能被所爱的人深深爱过
或许不该再奢求再怨什么
世上的遗憾本来就很多

在艰难的说了再见后
你真的不该再紧紧抱我
刚才还能体谅的放开你的手

不代表我就够坚强洒脱
我们曾有过一次幸福的机会
当玫瑰和诺言还没枯萎
别说抱歉 我不后悔
曾经逆风和你一起飞

我们曾有过一次幸福的机会
似乎就要拥有 爱的完美
你说别哭 我说不哭
然后我们都流下了眼泪</span></div>
</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>43</wp:post_id>
		<wp:post_date>2006-08-23 14:59:45</wp:post_date>
		<wp:post_date_gmt>2006-08-23 14:59:45</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e9%99%88%e5%8d%87-%e9%aa%84%e5%82%b2%e7%9a%84%e6%ad%8c%e6%89%8b</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="chinese"><![CDATA[Chinese]]></category>
		<category domain="category" nicename="others"><![CDATA[Others]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>spaces_a43755b404d273dfcedbd14ccb4f51ab_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[http://cid-04001c604af3f011.users.api.live.net/Users(288261576051650577)/Blogs('4001C604AF3F011!102')/Entries('4001C604AF3F011!416')?authkey=X13wC75MXT0%24]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>60</wp:comment_id>
			<wp:comment_author><![CDATA[xiaolu]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2006-10-26 15:11:00</wp:comment_date>
			<wp:comment_date_gmt>2006-10-26 15:11:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[奶茶问，如果我有问题，你可不可以来找我？奶茶没有问，我能不能去找你？她问，你能不能来找我？在某个人面前，是永远感觉不到自己已经强大到可以不要他了的。你来找我啊，来找我。
 
感动！]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Everybody Is Free</title>
		<link>http://jeff.familyyu.net/2006/08/09/everybody-is-free/</link>
		<pubDate>Wed, 09 Aug 2006 03:39:52 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang1.wordpress.com/2006/08/09/everybody-is-free</guid>
		<description></description>
		<content:encoded><![CDATA[<div id="msgcns!4001C604AF3F011!415" class="bvMsg">
<div>I like it so much, i just found it recently, hope you also like it...</div>
<div>--------------------------------------------------------------------</div>
<div>
<table border="0" cellspacing="0" cellpadding="0" width="370">
<tbody>
<tr>
<td width="100%" align="left" valign="top"><strong><span style="font-family: ARIAL; font-size: large;">Everybody's Free</span></strong>
<span style="font-family: ARIAL; font-size: medium;">(to wear sunscreen)</span></td>
</tr>
<tr>
<td width="100%" align="right" valign="top"><span style="font-family: COURIER; font-size: medium;">Mary Schmich
Chicago Tribune</span></td>
</tr>
<tr>
<td width="100%" align="left" valign="top"><span style="font-family: ARIAL; font-size: x-small;">
Ladies and Gentlemen of the class of ’97... <strong><span style="font-size: medium;">wear sunscreen.</span></strong>&nbsp;

If I could offer you only one tip for the future, sunscreen would be <strong><span style="font-size: medium;">IT</span></strong>.

The long term benefits of sunscreen have been proved by scientists whereas the rest of my advice has no basis more reliable than my own meandering experience.

I will dispense this advice now.

Enjoy the power and beauty of your youth. Never mind. You will not understand the power and beauty of your youth until they have faded. But trust me, in 20 years you’ll look back at photos of yourself and recall in a way you can’t grasp now how much possibility lay before you and how fabulous you really looked.

You are <span style="font-size: medium;">NOT</span> as fat as you imagine.

Don’t worry about the future; or worry, but know that worrying is as effective as trying to solve an algebra equation by chewing bubblegum. The real troubles in your life are apt to be things that never crossed your worried mind; the kind that blindside you at 4pm on some idle Tuesday.

<strong>Do one thing every day that scares you.</strong>

&nbsp;
<blockquote><span style="font-size: medium;">Sing.</span></blockquote>
Don’t be reckless with other people’s hearts, don’t put up with people who are reckless with yours.

&nbsp;
<blockquote><span style="font-size: medium;">Floss.</span></blockquote>
Don’t waste your time on jealousy; sometimes you’re ahead, sometimes you’re behind. The race is long, and in the end, it’s only with yourself.

Remember compliments you receive, forget the insults; if you succeed in doing this, tell me how.

Keep your old love letters, throw away your old bank statements.

&nbsp;
<blockquote><span style="font-size: medium;">Stretch.</span></blockquote>
Don’t feel guilty if you don’t know what you want to do with your life. The most interesting people I know didn’t know at 22 what they wanted to do with their lives, some of the most interesting 40 year olds I know still don’t.

Get plenty of calcium.

Be kind to your knees, you’ll miss them when they’re gone.

Maybe you’ll marry, maybe you won’t, maybe you’ll have children, maybe you won’t, maybe you’ll divorce at 40, maybe you’ll dance the funky chicken on your 75th wedding anniversary. Whatever you do, don’t congratulate yourself too much or berate yourself, either. Your choices are half chance, so are everybody else’s. Enjoy your body, use it every way you can. Don’t be afraid of it, or what other people think of it, <strong>it’s the greatest instrument you’ll ever own.</strong>

<span style="font-size: medium;">Dance.</span> Even if you have nowhere to do it but in your own living room.

Read the directions, even if you don’t follow them.

Do NOT read beauty magazines, they will only make you feel ugly.

<strong>Get to know your parents, you never know when they’ll be gone for good.</strong>

Be nice to your siblings; they are your best link to your past and the people most likely to stick with you in the future.

Understand that friends come and go, but for the precious few you should hold on. Work hard to bridge the gaps in geography in lifestyle because the older you get, the more you need the people you knew when you were young.

Live in New York City once, but leave before it makes you hard; live in Northern California once, but leave before it makes you soft.

&nbsp;
<blockquote><span style="font-size: medium;">Travel.</span></blockquote>
Accept certain inalienable truths, prices will rise, politicians will philander, you too will get old, and when you do you’ll fantasize that when you were young prices were reasonable, politicians were noble and children respected their elders.

Respect your elders.

Don’t expect anyone else to support you. Maybe you have a trust fund, maybe you'll have a wealthy spouse; but you never know when either one might run out.

Don’t mess too much with your hair, or by the time you're 40, it will look 85.

Be careful whose advice you buy, but, be patient with those who supply it. Advice is a form of nostalgia, dispensing it is a way of fishing the past from the disposal, wiping it off, painting over the ugly parts and recycling it for more than it’s worth.

<strong><span style="font-size: medium;">But trust me on the sunscreen.</span></strong>

&nbsp;

&nbsp;

&nbsp;

&nbsp;

&nbsp;

&nbsp;

&nbsp;

</span><span style="font-family: ARIAL; font-size: x-small;"> </span></td>
</tr>
</tbody>
</table>
</div>
</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>44</wp:post_id>
		<wp:post_date>2006-08-09 03:39:52</wp:post_date>
		<wp:post_date_gmt>2006-08-09 03:39:52</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>everybody-is-free</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="others"><![CDATA[Others]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>spaces_a43755b404d273dfcedbd14ccb4f51ab_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[http://cid-04001c604af3f011.users.api.live.net/Users(288261576051650577)/Blogs('4001C604AF3F011!102')/Entries('4001C604AF3F011!415')?authkey=X13wC75MXT0%24]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Web页面设计</title>
		<link>http://jeff.familyyu.net/2006/08/04/web%e9%a1%b5%e9%9d%a2%e8%ae%be%e8%ae%a1/</link>
		<pubDate>Fri, 04 Aug 2006 11:07:46 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang1.wordpress.com/2006/08/04/web%e9%a1%b5%e9%9d%a2%e8%ae%be%e8%ae%a1</guid>
		<description></description>
		<content:encoded><![CDATA[<div id="msgcns!4001C604AF3F011!414" class="bvMsg">最近MSN Space改版了,采用了Web2.0的方式,更多的AJAX的东西了...
还记得以前在大学的时候,做网页,都是用Table来定整个页面的layout,现在不同了，现在需要的是用CSS + div来定位,刚刚看下新版的MSN Space也是使用这种的定位风格.
刚刚看了下CSS的一个网站 ( http://www.cssplay.co.uk/index.html ),为之兴奋而震惊,感觉自己以前在大学做设计怎么那么傻，那么笨，用那么难用的Table来定位呢.....
晚上回去好好研究学习看,顺便做个图书管理系统的页面设计出来....&nbsp;

</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>45</wp:post_id>
		<wp:post_date>2006-08-04 11:07:46</wp:post_date>
		<wp:post_date_gmt>2006-08-04 11:07:46</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>web%e9%a1%b5%e9%9d%a2%e8%ae%be%e8%ae%a1</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="chinese"><![CDATA[Chinese]]></category>
		<category domain="category" nicename="thoughts"><![CDATA[Thoughts]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>spaces_a43755b404d273dfcedbd14ccb4f51ab_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[http://cid-04001c604af3f011.users.api.live.net/Users(288261576051650577)/Blogs('4001C604AF3F011!102')/Entries('4001C604AF3F011!414')?authkey=X13wC75MXT0%24]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>技术乃为业务服务</title>
		<link>http://jeff.familyyu.net/2006/08/03/%e6%8a%80%e6%9c%af%e4%b9%83%e4%b8%ba%e4%b8%9a%e5%8a%a1%e6%9c%8d%e5%8a%a1/</link>
		<pubDate>Thu, 03 Aug 2006 16:19:10 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang1.wordpress.com/2006/08/03/%e6%8a%80%e6%9c%af%e4%b9%83%e4%b8%ba%e4%b8%9a%e5%8a%a1%e6%9c%8d%e5%8a%a1</guid>
		<description></description>
		<content:encoded><![CDATA[<div id="msgcns!4001C604AF3F011!412" class="bvMsg">
<div>老马Martin Fowler(<a href="http://www.martinfowler.com">http://www.martinfowler.com</a>)最近是经常更新他的blog啊,这不,最近有篇叫做CustomerAffinity (<a href="http://martinfowler.com/bliki/CustomerAffinity.html">http://martinfowler.com/bliki/CustomerAffinity.html</a>), 讲的是对于一个top-class的企业应用系统开发人员,不仅要精通技术,更重要的是要精通他所在领域的业务,而且要懂得如果用技术来支持或者引领业务的创新,说到底,作为一个企业软件的开发人员或者公司,只有当用这个软件的业务公司得到了发展,你的软件产品才能更好的发展.</div>
<div>还记得刚毕业的时候,整个头脑里都是以技术为主,对业务一点都不怎么关心,正如Martin所说的,只是简单的认为说企业的应用无非就是对数据库的增删改.这种思想是完全不正确的.</div>
<div>技术的出现,或者说计算机的出现是为了让大家去除掉boring的工作,比如一些死规则,一些大量计算等的工作,正如Kent Beck最近的一个Presentation叫做&lt;Ease At Work&gt;,所以这些计算机,技术的产生无非就是想让我们更容易的工作.</div>
<div>做为一名企业应用系统的开发人员和一些更底层的(如操作系统等)开发人员是有不同的,底层的开发人员相对来说,他们更关心的是响应速度等等更技术的东西,而企业应用开发人员重点或者说迷人的地方在于说如何把技术服务于业务,如何让技术支持业务的创新等.</div>
<div>无论何时何地,都不要忘了,技术的出现是为了让你的生活更轻松,愉快,不要为了技术而技术,我们是玩技术,不是被技术玩!.</div>
<div></div>
</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>46</wp:post_id>
		<wp:post_date>2006-08-03 16:19:10</wp:post_date>
		<wp:post_date_gmt>2006-08-03 16:19:10</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e6%8a%80%e6%9c%af%e4%b9%83%e4%b8%ba%e4%b8%9a%e5%8a%a1%e6%9c%8d%e5%8a%a1</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="chinese"><![CDATA[Chinese]]></category>
		<category domain="category" nicename="thoughts"><![CDATA[Thoughts]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>spaces_a43755b404d273dfcedbd14ccb4f51ab_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[http://cid-04001c604af3f011.users.api.live.net/Users(288261576051650577)/Blogs('4001C604AF3F011!102')/Entries('4001C604AF3F011!412')?authkey=X13wC75MXT0%24]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>How do you think of Achievo</title>
		<link>http://jeff.familyyu.net/2006/07/13/how-do-you-think-of-achievo/</link>
		<pubDate>Thu, 13 Jul 2006 16:33:48 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang1.wordpress.com/2006/07/13/how-do-you-think-of-achievo</guid>
		<description></description>
		<content:encoded><![CDATA[<div id="msgcns!4001C604AF3F011!408" class="bvMsg">
<div>My name is Jeff, I am a software developer, I've been working at Achievo for one and half years.</div>
<div>My job is reviewing requirements, writing Design Documents, writing codes and delivering good quality products.
Achievo has good environment, very good enterprise culture and a lof of spaces where I can develop not only in my professional skillset but also in english and other fields such as, playing PingPong, playing foosball and so on, that is why I worked at achievo.
The first impressive thing for me is the birthday party, you know, I didn't hold any offical birthday party before. In achievo, they hold birthday party every month, they also send out the birthday postcards and gifts to birth stars. That makes me feel that I am a member of achievo family rather than a staff of achievo company.
Although achievo did not have a long history, but I think It is a fast-growing, good environment, very good enterprise culture company, moreover, there are a bunch of nice people here.</div>
<div>In a word, achievo is an excellent company, I am so glad that I have the opportunity to work here.&nbsp;

----It is just a draft for  company's video shooting, hope it does not make you vomitive. ;-).

</div>
</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>47</wp:post_id>
		<wp:post_date>2006-07-13 16:33:48</wp:post_date>
		<wp:post_date_gmt>2006-07-13 16:33:48</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>how-do-you-think-of-achievo</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="others"><![CDATA[Others]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>spaces_a43755b404d273dfcedbd14ccb4f51ab_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[http://cid-04001c604af3f011.users.api.live.net/Users(288261576051650577)/Blogs('4001C604AF3F011!102')/Entries('4001C604AF3F011!408')?authkey=X13wC75MXT0%24]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>57</wp:comment_id>
			<wp:comment_author><![CDATA[Chris]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2007-12-18 14:24:43</wp:comment_date>
			<wp:comment_date_gmt>2007-12-18 14:24:43</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[^_^，对公司的了解又深入了一步，谢谢]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>58</wp:comment_id>
			<wp:comment_author><![CDATA[Crystal]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2006-07-23 12:02:13</wp:comment_date>
			<wp:comment_date_gmt>2006-07-23 12:02:13</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[haha！ I don't know you are the so loyal of our company before.(不知道写对没有哈？如果你看不懂就算了，等下偶接着来写)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Understanding Ruby Symbol</title>
		<link>http://jeff.familyyu.net/2006/07/12/understanding-ruby-symbol/</link>
		<pubDate>Wed, 12 Jul 2006 16:58:08 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang1.wordpress.com/2006/07/12/understanding-ruby-symbol</guid>
		<description></description>
		<content:encoded><![CDATA[<div id="msgcns!4001C604AF3F011!407" class="bvMsg"><div>在用Rails的时候,经常会碰到Symbol的用法,比如:</div>
<div>  <code>link_to(&quot;View Article&quot;, :controller =&gt; &quot;articles&quot;, :action =&gt; &quot;index&quot;)</code></div>
<div><code>其实Symbol跟字符串很类似,不同的是:</code><span>一般来说，symbol是interned名字或字符串 ，使用它的话，可以避免相同字符串的多个拷贝，节省内存....</span></div>
<div><span>详细的请参见:</span></div>
<div><span>(<a href="http://glu.ttono.us/articles/2005/08/19/understanding-ruby-symbols">http://glu.ttono.us/articles/2005/08/19/understanding-ruby-symbols</a>)</span></div></div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>48</wp:post_id>
		<wp:post_date>2006-07-12 16:58:08</wp:post_date>
		<wp:post_date_gmt>2006-07-12 16:58:08</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>understanding-ruby-symbol</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby"><![CDATA[Ruby]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>spaces_a43755b404d273dfcedbd14ccb4f51ab_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[http://cid-04001c604af3f011.users.api.live.net/Users(288261576051650577)/Blogs('4001C604AF3F011!102')/Entries('4001C604AF3F011!407')?authkey=X13wC75MXT0%24]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Rails初体验</title>
		<link>http://jeff.familyyu.net/2006/07/09/rails%e5%88%9d%e4%bd%93%e9%aa%8c/</link>
		<pubDate>Sun, 09 Jul 2006 15:28:34 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang1.wordpress.com/2006/07/09/rails%e5%88%9d%e4%bd%93%e9%aa%8c</guid>
		<description></description>
		<content:encoded><![CDATA[<div id="msgcns!4001C604AF3F011!406" class="bvMsg"><div> 这个周末用Rails写了个简单的图书管理系统(现在算是差不多完成了主要的功能,但是网页设计等还没做,所以现在的界面很难看)..但是,我想说的是, Ruby On Rails开发速度确实是快,如果你以后是要开发中小型的database-backed程序,Ruby on Rails将是我的首选,等以后慢慢熟悉Ruby,将来自己想要做的,开发的中小项目将都会优先考虑它...</div>
<div> 现在回想Java做东西,太繁琐了,效率不高...</div>
<div>------------------------------------------------</div>
<div>附上前些天Rails Conference的视频.(推荐!)</div>
<div><a href="http://blog.scribestudio.com/pages/rails/">http://blog.scribestudio.com/pages/rails/</a></div></div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>49</wp:post_id>
		<wp:post_date>2006-07-09 15:28:34</wp:post_date>
		<wp:post_date_gmt>2006-07-09 15:28:34</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>rails%e5%88%9d%e4%bd%93%e9%aa%8c</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby"><![CDATA[Ruby]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>spaces_a43755b404d273dfcedbd14ccb4f51ab_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[http://cid-04001c604af3f011.users.api.live.net/Users(288261576051650577)/Blogs('4001C604AF3F011!102')/Entries('4001C604AF3F011!406')?authkey=X13wC75MXT0%24]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>56</wp:comment_id>
			<wp:comment_author><![CDATA[卿]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2009-04-17 19:34:21</wp:comment_date>
			<wp:comment_date_gmt>2009-04-17 19:34:21</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[你好，请您务必要帮助我，我在做一个基于Ruby On Rails的图书管理系系统，越简单越好，通过搜索找到了您这，但是找不到您的联系方式，请您联系我，QQ：80611750  MSN：lqyob@live.cn  手机：13999322081]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>巴西也出局了</title>
		<link>http://jeff.familyyu.net/2006/07/02/%e5%b7%b4%e8%a5%bf%e4%b9%9f%e5%87%ba%e5%b1%80%e4%ba%86/</link>
		<pubDate>Sun, 02 Jul 2006 05:41:27 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang1.wordpress.com/2006/07/02/%e5%b7%b4%e8%a5%bf%e4%b9%9f%e5%87%ba%e5%b1%80%e4%ba%86</guid>
		<description></description>
		<content:encoded><![CDATA[<div id="msgcns!4001C604AF3F011!405" class="bvMsg">
<div>昨天还在说,走了阿根廷,还有巴西可以期待....</div>
<div>今天,众星云集的巴西也走了,这个世界杯对我来说已经结束了.</div>
<div>昨晚3点,巴西对法国,我一直等到3点看;突然想起自己在1998年的情景,一模一样的情况,一模一样的结局,唯一不同的是进球数.</div>
<div>我突然相信了有一物降一物的说法,因为我看到巴西在法国面前是如此的无奈......</div>
<div></div>
</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>50</wp:post_id>
		<wp:post_date>2006-07-02 05:41:27</wp:post_date>
		<wp:post_date_gmt>2006-07-02 05:41:27</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%b7%b4%e8%a5%bf%e4%b9%9f%e5%87%ba%e5%b1%80%e4%ba%86</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="chinese"><![CDATA[Chinese]]></category>
		<category domain="category" nicename="others"><![CDATA[Others]]></category>
		<category domain="post_tag" nicename="world-cup"><![CDATA[world cup]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>spaces_a43755b404d273dfcedbd14ccb4f51ab_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[http://cid-04001c604af3f011.users.api.live.net/Users(288261576051650577)/Blogs('4001C604AF3F011!102')/Entries('4001C604AF3F011!405')?authkey=X13wC75MXT0%24]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_efficient_related_posts</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{i:0;a:4:{s:2:"ID";s:2:"51";s:10:"post_title";s:16:"别了,阿根廷";s:7:"matches";s:1:"1";s:9:"permalink";s:82:"http://jeff.familyyu.net/2006/07/01/%e5%88%ab%e4%ba%86%e9%98%bf%e6%a0%b9%e5%bb%b7/";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_relation_threshold</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>别了,阿根廷</title>
		<link>http://jeff.familyyu.net/2006/07/01/%e5%88%ab%e4%ba%86%e9%98%bf%e6%a0%b9%e5%bb%b7/</link>
		<pubDate>Sat, 01 Jul 2006 10:04:30 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang1.wordpress.com/2006/07/01/%e5%88%ab%e4%ba%86%e9%98%bf%e6%a0%b9%e5%bb%b7</guid>
		<description></description>
		<content:encoded><![CDATA[<div id="msgcns!4001C604AF3F011!404" class="bvMsg">
<div>阿根廷的出局,是我所不希望看到的,我一直希望他和巴西在决赛中碰面,但是没了,昨晚的运气是站在德国这边的...阿根廷的门将受伤(从点球中可以看出替补门将的实力.2,3次的判断错误),以及那个该死的教练换下该死的里克尔梅,还有另一前锋...他们难道进一个球,然后就换下人开始防守吗?以前的作风都到哪儿去了?学谁不好,学英格兰...</div>
<div>不过没关系,阿根廷没了,还有巴西....我不知道为什么我不喜欢德国(确切的说不是不喜欢,只是不是非常喜欢),或许是因为我更喜欢技巧性的球队吧..</div>
<div>不过如果这届仍然是巴西和德国争冠军的话,德国很有希望夺冠,因为主场优势太明显了....</div>
</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>51</wp:post_id>
		<wp:post_date>2006-07-01 10:04:30</wp:post_date>
		<wp:post_date_gmt>2006-07-01 10:04:30</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%88%ab%e4%ba%86%e9%98%bf%e6%a0%b9%e5%bb%b7</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="chinese"><![CDATA[Chinese]]></category>
		<category domain="category" nicename="others"><![CDATA[Others]]></category>
		<category domain="post_tag" nicename="world-cup"><![CDATA[world cup]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>spaces_a43755b404d273dfcedbd14ccb4f51ab_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[http://cid-04001c604af3f011.users.api.live.net/Users(288261576051650577)/Blogs('4001C604AF3F011!102')/Entries('4001C604AF3F011!404')?authkey=X13wC75MXT0%24]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_efficient_related_posts</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{i:0;a:4:{s:2:"ID";s:2:"50";s:10:"post_title";s:18:"巴西也出局了";s:7:"matches";s:1:"1";s:9:"permalink";s:91:"http://jeff.familyyu.net/2006/07/02/%e5%b7%b4%e8%a5%bf%e4%b9%9f%e5%87%ba%e5%b1%80%e4%ba%86/";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_relation_threshold</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Am I a workaholic</title>
		<link>http://jeff.familyyu.net/2006/07/01/am-i-a-workaholic/</link>
		<pubDate>Sat, 01 Jul 2006 07:49:44 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang1.wordpress.com/2006/07/01/am-i-a-workaholic</guid>
		<description></description>
		<content:encoded><![CDATA[<div id="msgcns!4001C604AF3F011!403" class="bvMsg">Am I study too hard? Am I a workaholic? I don't know, but this year's learning is the best pleased thing so far, I've never felt that I can know technology so well or can understand easily before, and I think that is why I read some many books these days.
But so what? What if I have learned all of the technology? I still have to struggle for the living, now I can't see my road of future. I always think that I am a guy who did not like the stable job, since a lot of stable jobs always linked to the boring. I like the job with passion, at least, for now. But sometimes I felt a bit tired of this, since I am awalys thinking that should I need to switch a job or are there any better positions fit me  in the market....
Wow... Again, all things are about work.....
OK,Anson, stop saying that, I know what you wanna say, I know that definetly, I am trying my best to recoverying, so give me a bit more time, alright?;-)</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>52</wp:post_id>
		<wp:post_date>2006-07-01 07:49:44</wp:post_date>
		<wp:post_date_gmt>2006-07-01 07:49:44</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>am-i-a-workaholic</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="others"><![CDATA[Others]]></category>
		<category domain="category" nicename="thoughts"><![CDATA[Thoughts]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>spaces_a43755b404d273dfcedbd14ccb4f51ab_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[http://cid-04001c604af3f011.users.api.live.net/Users(288261576051650577)/Blogs('4001C604AF3F011!102')/Entries('4001C604AF3F011!403')?authkey=X13wC75MXT0%24]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Data Access Series ( 1 )</title>
		<link>http://jeff.familyyu.net/2006/06/21/data-access-series-1/</link>
		<pubDate>Wed, 21 Jun 2006 15:34:43 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang1.wordpress.com/2006/06/21/data-access-series-1</guid>
		<description></description>
		<content:encoded><![CDATA[<div id="msgcns!4001C604AF3F011!401" class="bvMsg"><div>  现在做为一个Java程序员,已经渐渐的比较少和具体的数据库SQL打交道,因为我们经常都是用ORM工具(Hibernate..etc)或者其他的已经对底层封装了的包.</div>
<div>  我个人一直也在数据库这一块知识了解的比较差,所以我就贴些这方面的东西,今天的资料是来自(<a href="http://www.theserverside.com/tt/talks/videos/JohnGoodson/interview.tss?bandwidth=dsl">http://www.theserverside.com/tt/talks/videos/JohnGoodson/interview.tss?bandwidth=dsl</a>) </div>
<ol>
<li>是否都用PreparedStatements来替代Statements呢?<br />其实不是的,PreparedStatements是带有cache的功能,但是执行一个PreparedStatements是执行了两次的round trip,但是statements只有一次的round trip.但是preparedsStatements带有缓存的作用.</li>
<li>为什么说获取到一个Connection耗时很多呢?<br />获取到一个connection慢,是因为它不但要执行网络连接操作而且还要执行硬盘I/O操作. 获取到一个connection,要有9次的round trip, 比如说获取到数据库的options, transcation-mode, changing locales等等....</li>
<li>怎么样提高SQL语句执行的效率呢?<br />其中有一点就是,把你要选择的列写出来,不要用*号替代,这个对于执行速度的提高是很有帮助的.</li></ol>
<p>---------Reference-----------------------------------------------------------------------------------------------------------</p>
<p><b><font color="#339966"> </font><a title="click to load the video clip for this question" style="text-decoration:none;" href="http://www.theserverside.com/talks/videos/JohnGoodson/dsl/q25.html"><font color="#0000ff"><font color="#339966">A lot of the best practice books always tell you to use PreparedStatements as they can be cached. Is there a tradeoff there?</font> </font></a></b></p>
<p><font color="#ff0000">There is a trade off there, . And, in fact, one of our recommendations is to not always use PreparedStatements. We have a white paper on our website: www.datadirect.com, which specifically covers a whole lot of performance tuning aspects of JDBCspecifically for the PreparedStatement case. If you're only going to execute a statement one time then there's no reason to prepare, because a prepared execute results in two network round trips. Two biggest things you can do in a JDBC application to improve performance: cut down in network I/O, cut down your disk I/O. Those are the two, by far slowest things. If you take nothing else away from this whole discussion, remember those two things. </font></p>
<p><font color="#ff0000">In terms of PreparedStatements, if I prepare a query, that's a network round trip to the database. If I then execute it, that's another network round trip to the database. If I know my application is only ever going to execute that query one time, I should execute the statement directly, avoid the overhead of the prepare, which again is that network round trip; you'll get a better performance out of that. If I am going to execute it again at some point in time in the life of the application than you would want to use PreparedStatement caching. But again, don't just do it blindly, understand that if the query is going to be executed only once, don't prepare it. Just execute it. </font></p>
<p><b><a title="click to load the video clip for this question" style="text-decoration:none;" href="http://www.theserverside.com/talks/videos/JohnGoodson/dsl/q26.html"><font color="#108301">Why is connecting to the database so expensive? </font></a></b></p>
<p><font color="#ff0000">That's a great question. Everybody's heard about connection pooling, I should use connection pooling, but really a lot of people don't understand why. It's said that one of the most expensive things you can do in a database application is to hit the network. If I have a network I/O it's going to slow me down. Additionally, if I have to have a disk I/O, that's going to slow me down as well. Connecting is the worst thing you can do because it's both disk I/O's and networking I/Os. </font></p>
<p><font color="#ff0000">A lot of people assume that if I just connect to Oracle, what can that be? One network round trip to the server. In fact, at a JDBC driver level, of course the application never sees this, but when you connect, or when you ask for a connection to be made, a JDBC driver makes 9 network round trips, to and from the Oracle database. Setting up the code page, figuring out what specific options have been set on the database, turning auto-commit into the mode that it needs to be part of the specification, changing locales, need be. </font></p>
<p><font color="#ff0000">There's just lots of interaction that has to occur between that handshake between the driver and the server. What connection pooling allows you, is it cuts off all of the network I/O, which speeds up performance of you app. </font></p>
<p><b><a title="click to load the video clip for this question" style="text-decoration:none;" href="http://www.theserverside.com/talks/videos/JohnGoodson/dsl/q27.html"><font color="#108301">If a developer could do one thing to improve performance, what would that be? </font></a></b></p>
<p><font color="#ff0000">That's a good question. Developers do a lot of wrong things. Again, there are lots of hints out there to help developers write better apps but think about what a driver has to do. Probably the biggest thing that we see that we can improve performance, is that developers code SQL statements and instead of saying: select name, address, city, zip code, they say select * from table. And then they go out and they get only the name columns, only the address column, the city, the zip. And they think: Well I didn't ask for the picture of the employee, so, therefore, I'm not going to be hurt by that. </font></p>
<p><font color="#ff0000">What, in fact happens with a driver though, is a driver has no idea what you're going to ask for. So if you issue a select * from table, what a driver does is it sends that to the server, and then it brings every bit of that information across the network. So, if there happens to be a picture of an employee stored, it's going to bring the entire contents of the picture over to wherever you JDBC application is whether or not you've asked for it. And we've already stated that you want to cut down on network I/O. Select * from table only increases network I/O. </font></p>
<p><font color="#ff0000">So the biggest thing we would recommend is if you know you're only going to need four columns in a table, put those four columns in the select list and don't limit it at get at a time.</font></p>
<p><font color="#ff0000"></font> </p></div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>53</wp:post_id>
		<wp:post_date>2006-06-21 15:34:43</wp:post_date>
		<wp:post_date_gmt>2006-06-21 15:34:43</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>data-access-series-1</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="java"><![CDATA[Java]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>spaces_a43755b404d273dfcedbd14ccb4f51ab_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[http://cid-04001c604af3f011.users.api.live.net/Users(288261576051650577)/Blogs('4001C604AF3F011!102')/Entries('4001C604AF3F011!401')?authkey=X13wC75MXT0%24]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>懒散的周末</title>
		<link>http://jeff.familyyu.net/2006/06/04/%e6%87%92%e6%95%a3%e7%9a%84%e5%91%a8%e6%9c%ab/</link>
		<pubDate>Sun, 04 Jun 2006 11:11:21 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang1.wordpress.com/2006/06/04/%e6%87%92%e6%95%a3%e7%9a%84%e5%91%a8%e6%9c%ab</guid>
		<description></description>
		<content:encoded><![CDATA[<div id="msgcns!4001C604AF3F011!400" class="bvMsg">
<div>这两周的周末时间都过的很快,总是在不知不觉的过去了,感觉什么事儿都没做,哪儿也都没去,生活非常的有规律且无聊.</div>
<div>早上睡到11点半...</div>
<div>打开电脑,看看网页,听听歌曲</div>
<div>开始做午饭....</div>
<div>下午2点多了,打开电脑,翻出一部片,看...</div>
<div>下午4点多,习惯性的想睡觉.</div>
<div>继续睡觉..</div>
<div>5点多,继续上网</div>
<div>6点多,做晚饭...</div>
<div>8点多,继续上网,看看资料...</div>
<div>10点,听一个小时的VOA</div>
<div>11点洗澡,洗完后,继续上网或者看片</div>
<div>1点多睡觉</div>
<div></div>
<div>如此反复,唯一不同的是,周末会有一天下去打1个多小时的篮球...仅此而已...</div>
<div></div>
<div></div>
</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>54</wp:post_id>
		<wp:post_date>2006-06-04 11:11:21</wp:post_date>
		<wp:post_date_gmt>2006-06-04 11:11:21</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e6%87%92%e6%95%a3%e7%9a%84%e5%91%a8%e6%9c%ab</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="chinese"><![CDATA[Chinese]]></category>
		<category domain="category" nicename="others"><![CDATA[Others]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>spaces_a43755b404d273dfcedbd14ccb4f51ab_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[http://cid-04001c604af3f011.users.api.live.net/Users(288261576051650577)/Blogs('4001C604AF3F011!102')/Entries('4001C604AF3F011!400')?authkey=X13wC75MXT0%24]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Bad Day</title>
		<link>http://jeff.familyyu.net/2006/05/30/bad-day/</link>
		<pubDate>Tue, 30 May 2006 11:50:17 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang1.wordpress.com/2006/05/30/bad-day</guid>
		<description></description>
		<content:encoded><![CDATA[<div id="msgcns!4001C604AF3F011!399" class="bvMsg">
<div>上个周末下载了一首歌&lt;Bad Day&gt;,觉得贼好听....</div>
<div>这周刚两天,天天倒霉..</div>
<div>星期一早上去坐公交车的时候,不小心踩了个砖头,泥水溅了我一裤脚和鞋子</div>
<div>星期二,也就是今天晚上,刚回来的时候,车上有个人吐,又溅到我裤子上了...</div>
<div>.........</div>
<div>来吧...来吧...</div>
<div>继续倒霉吧...看看明天又怎么倒霉....</div>
<div>....难道只是因为我下载了这首歌吗??不明白.</div>
</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>55</wp:post_id>
		<wp:post_date>2006-05-30 11:50:17</wp:post_date>
		<wp:post_date_gmt>2006-05-30 11:50:17</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>bad-day</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="chinese"><![CDATA[Chinese]]></category>
		<category domain="category" nicename="others"><![CDATA[Others]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>spaces_a43755b404d273dfcedbd14ccb4f51ab_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[http://cid-04001c604af3f011.users.api.live.net/Users(288261576051650577)/Blogs('4001C604AF3F011!102')/Entries('4001C604AF3F011!399')?authkey=X13wC75MXT0%24]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>TDD - 典型的对于DAO数据测试的Test Cases</title>
		<link>http://jeff.familyyu.net/2006/05/23/tdd-%e5%85%b8%e5%9e%8b%e7%9a%84%e5%af%b9%e4%ba%8edao%e6%95%b0%e6%8d%ae%e6%b5%8b%e8%af%95%e7%9a%84test-cases/</link>
		<pubDate>Tue, 23 May 2006 02:39:02 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang1.wordpress.com/2006/05/23/tdd-%e5%85%b8%e5%9e%8b%e7%9a%84%e5%af%b9%e4%ba%8edao%e6%95%b0%e6%8d%ae%e6%b5%8b%e8%af%95%e7%9a%84test-cases</guid>
		<description></description>
		<content:encoded><![CDATA[<div id="msgcns!4001C604AF3F011!397" class="bvMsg"><div>早上在TDD maillist中发现到Uncle Bob的一个mail: 特摘录如下:</div>
<div>  mbrown103 wrote:<br />&gt;  To give a simple example lets say I need to get data <br />&gt; from a database, using an inline sql string due to business rules, and <br />&gt; populate a dataset with it.  Now, I am sure that most of us can write <br />&gt; the code for this in just minutes.  I am just not sure how to approach <br />&gt; this in a TDD fashion.  <br /><br />Test 1:<br />   1. Make sure the database is empty.<br />   2. Call the function that returns the dataset.<br />   3. Make sure the dataset is empty.<br /><br />Test 2:<br />   1. Make sure the database has one row, AND<br />      that the row matches the query.<br />   2. Call your function.<br />   3. Make sure the dataset has one row.<br />   4. Make sure the fields are correct.<br /><br />Test 3:<br />   1. Make sure the database has one row, AND<br />      that the row DOES NOT match the query.<br />   2. Call your function.<br />   3. Ensure the dataset is empty.<br /><br />Test 4:<br />   1. Make sure the database has two rows, AND<br />      that both rows match the query.<br />   2. Call your function.<br />   3. Make sure the dataset has two rows.<br />   4. Make sure the fields are correct.<br /><br />Test 5:<br />   1. Make sure the database has two rows, AND<br />      that only one matches the query.<br />   ...left to the reader as an exercize... </div>
<div> </div>
<div>没想到Test Case需要考虑到这么多种情况吧???</div></div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>56</wp:post_id>
		<wp:post_date>2006-05-23 02:39:02</wp:post_date>
		<wp:post_date_gmt>2006-05-23 02:39:02</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>tdd-%e5%85%b8%e5%9e%8b%e7%9a%84%e5%af%b9%e4%ba%8edao%e6%95%b0%e6%8d%ae%e6%b5%8b%e8%af%95%e7%9a%84test-cases</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="java"><![CDATA[Java]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>spaces_a43755b404d273dfcedbd14ccb4f51ab_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[http://cid-04001c604af3f011.users.api.live.net/Users(288261576051650577)/Blogs('4001C604AF3F011!102')/Entries('4001C604AF3F011!397')?authkey=X13wC75MXT0%24]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>总结测DAL的一些问题和策略</title>
		<link>http://jeff.familyyu.net/2006/05/25/%e6%80%bb%e7%bb%93%e6%b5%8bdal%e7%9a%84%e4%b8%80%e4%ba%9b%e9%97%ae%e9%a2%98%e5%92%8c%e7%ad%96%e7%95%a5/</link>
		<pubDate>Thu, 25 May 2006 16:57:54 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang1.wordpress.com/2006/05/25/%e6%80%bb%e7%bb%93%e6%b5%8bdal%e7%9a%84%e4%b8%80%e4%ba%9b%e9%97%ae%e9%a2%98%e5%92%8c%e7%ad%96%e7%95%a5</guid>
		<description></description>
		<content:encoded><![CDATA[<div id="msgcns!4001C604AF3F011!398" class="bvMsg">近来项目引入Unit Test,那么因为作为企业的应用,一般都是要跟数据库打交道,那么如何写DAL (Data Access Layer)的Unit Test呢?<br />先说说测DAL,主要存在哪些问题 (<a href="http://weblogs.asp.net/rosherove/articles/dbunittesting.aspx">http://weblogs.asp.net/rosherove/articles/dbunittesting.aspx</a>):<br />
<ol>
<li><b><span lang="EN">Problem: Garbage Data (也就说产生所谓的测试垃圾数据)<span style="font-weight:bold;">,  </span></span></b><span lang="EN">因为如果你一运行一个TestCase,你就在数据库中产生一条垃圾数据,造成了数据库状态的不一致,从而也就阻碍了Unit Test的repeatable.</span></li>
<li><b><span lang="EN">Problem: Affecting other tests (对其他TestMethod的影响),  </span></b><span lang="EN">其实这一点说的也是对于数据状态保持不一致,怎么说?因为我们在对数据库进行CRUD的时候,是对数据状态产生了变化,比如说,你可能对同一条数据既执行 Delete,又执行Update的操作,那如果顺序刚好是先执行Delete,再执行Update,这个Test Case肯定失败,这样就造成了Affect Other Tests.</span></li>
<li><b><span lang="EN">Problem: starting tests from a known state (需要数据库中存在有预先准备好的数据)</span></b></li></ol>在实际操作中,主要有如下三种方式:<br />
<ol>
<li> Mock Object :用模拟对象的方式,这样就不用连真实的数据库,但是这个策略很适合测试框架型结构,比如Spring就是用EasyMock来测的,但是这个策略不连数据库就没法证实自己所写的SQL语句是否正确?</li>
<li>Reset Database: 这种策略就是在Java中存在DBunit的包,你先用xml来配置测试数据( seed file ), 这些文件会在 run 每个 test case 之前,插入数据; 在每个 test case 之后,删除这些seed file之中的数据; 这种策略存在的麻烦就是比较繁琐,因为还要写xml文件,尽管xml挺简单的(当然了,据说多表关联会比较繁琐),但是对于Unit Test这种我们追求尽量简单的方式,还是觉得比较不舒服,尽管有挺多人喜欢这种策略.( 因为如果Unit Test一复杂,那么Unit Test就有可能出错,那么我们是否需要写Unit Test的Unit Test呢??无限循环....)</li>
<li>Transaction Control: 事务控制,我记得我前段时间有在我的blog上发过这个策略,(那次是我在TSS的论坛上问的),那么,就是在你 run 每个test method之前呢? connection的autoCommit是设置成false,在test method之后,在rollback回去,很容易的保证了数据库状态的一致性. (但是这种策略有时候比如我们用数据库的auto increment的来做主键,因为经常是用数据库的sequence,那么这个没办法回滚,当然了,我们这个时候可以使用mock的sequence来解决这个问题).还有个,这个策略可能对于一些旧的,设计不好的系统,没办法使用这个策略,但从目前来看,我确实最中意这个策略. ;-)<br /></li></ol>今天(现在应该说是昨天. ;-) )花了很久时间去看,搜索,思考还有没有其他更完美的解决方案??现在想想,目前确实没了,在.NET里请参考(http: //weblogs.asp.net/rosherove/articles/dbunittesting.aspx),但我觉得这种其实也是 Transcation Control的变体. 今天还在思考个问题,就是Unit Test强调 Test Case之间的 independent,那么比如说我要测试个Create的方法,我一定会调用get()方法来校验他的结果准确性,那么这样做不就存在了Create 和 Retrieve的依赖了吗?? 看是不管我是看 &lt;pragmatic Unit Test with Java&gt;还是看其他的,好像都没有更完美的方案,今天看到一老外说了,他也说他觉得这两个依赖让他觉得不爽,但是他又说,这样的依赖(不是非常大)其实还是可以忍受的,还是可行的,因为我们已经有专门的测试 Retrieve的 Test Case作为保证了....<br /><br />好了,关于Unit Test的先总结这么多了,总结完心情爽多了.:-),感觉把这几天看的思路又整理了一遍,嘿嘿.....<br />发现Unit Test还真实一个挺大的东西,要想把Unit Test和 Continous Integration做好,不是很容易......<br /></div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>57</wp:post_id>
		<wp:post_date>2006-05-25 16:57:54</wp:post_date>
		<wp:post_date_gmt>2006-05-25 16:57:54</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e6%80%bb%e7%bb%93%e6%b5%8bdal%e7%9a%84%e4%b8%80%e4%ba%9b%e9%97%ae%e9%a2%98%e5%92%8c%e7%ad%96%e7%95%a5</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="chinese"><![CDATA[Chinese]]></category>
		<category domain="category" nicename="java"><![CDATA[Java]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>spaces_a43755b404d273dfcedbd14ccb4f51ab_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[http://cid-04001c604af3f011.users.api.live.net/Users(288261576051650577)/Blogs('4001C604AF3F011!102')/Entries('4001C604AF3F011!398')?authkey=X13wC75MXT0%24]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>我谈测试驱动开发 (Test-Driven Development)</title>
		<link>http://jeff.familyyu.net/2006/05/21/%e6%88%91%e8%b0%88%e6%b5%8b%e8%af%95%e9%a9%b1%e5%8a%a8%e5%bc%80%e5%8f%91-test-driven-development/</link>
		<pubDate>Sun, 21 May 2006 14:33:23 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang1.wordpress.com/2006/05/21/%e6%88%91%e8%b0%88%e6%b5%8b%e8%af%95%e9%a9%b1%e5%8a%a8%e5%bc%80%e5%8f%91-test-driven-development</guid>
		<description></description>
		<content:encoded><![CDATA[<div id="msgcns!4001C604AF3F011!396" class="bvMsg">    我一直感觉自己是个后知后觉的人,就说在大学的时候,有时候突然觉得一部片很好看,然后推荐给同学看,没想到他们说&quot;啊?我们早看过了,你怎么才看?&quot;...顿时我无语和冒汗.<br />    在TDD上,我记得我是2004年7月的时候,买了一本书叫&lt;Test-Driven Development: A pratical guide&gt;,当时这本书好像获得了Jolt大奖,说实话,当时看这本书的时候,没什么感觉,只是觉得很简单的一本书,就讲怎么设计一个租片的例子...<br />    从去年底公司开始强调Unit Test(主要是老美客户强烈要求),在这点上我很喜欢,因为我觉得Unit Test太重要了,我来到这家公司,可以说大多数的时间都在Debug,没办法啊,我所碰到的是遗留代码(legacy code),是别人写的,有时候要改个bug,我不能说先去读懂他所做的整个功能模块,然后再去改他的代码,那样太耗时了...而且很多时候就算是自己写的代码,有bug,也要用Debug,为什么呢?测试的粒度太大,整合了所有的Web tier, Business tier,虽然说Exception的信息可以给我们很多提示,但是很多时候,我还是要用debug...,但是,如果我们用Unit Test,我们的粒度小了,我们也就更能容易的发现到问题的所在了!,这是对提高写代码速度的最直接的影响,当然了,同时Unit Test对代码质量的保障起着至关重要的作用. (Uncle bob 这里有篇写为什么Unit Test和Code一样重要. http: //www.butunclebob.com/ArticleS.UncleBob.TheSensitivityProblem)<br />    在写Unit Test的时候,有个问题就是,写Unit Test也耗时,而且刚开始大家会不愿意去写,当然了,更多的时候,刚开始写了,因为后来或者是业务逻辑变了,需要改Code,也需要改Unit Test,这个时候大家就不愿意去改Test Case,这样就造成了Test Case的obsolete,也就慢慢的没去维护Test了,其实解决这个问题,那么就需要引入Daily Build,Continous Integration...<br />    话回到Test-Driven Development,其实TDD is not just Unit Tests(<a href="http://blog.kirkk.com/index.php?itemid=37),">http://blog.kirkk.com/index.php?itemid=37),</a>它更是一种Design..<br />    那么,TDD到底是怎么样的一个流程呢? 我比较喜欢James Shore在他的Blog上所描述的一个流程(<a href="http://www.jamesshore.com/Blog/Red-Green-Refactor.html">http://www.jamesshore.com/Blog/Red-Green-Refactor.html</a>):<br />
<hr />
<br />
<ol>
<li><font color="#ff0000"><strong>Think:</strong> Figure out what test will best move your code towards completion. (Take as much time as you need. This is the hardest step for beginners.) <br /></font></li>
<li><font color="#ff0000"><strong>Red:</strong> Write a very small amount of test code. Only a few lines... usually no more than five. Run the tests and watch the new test fail: the test bar should turn red. (This should only take about 30 seconds.) <br /></font></li>
<li><font color="#ff0000"><strong>Green:</strong> Write a very small amount of production code. Again, usually no more than five lines of code. Don't worry about design purity or conceptual elegance. Sometimes you can just hardcode the answer. This is okay because you'll be refactoring in a moment. Run the tests and watch them pass: the test bar will turn green. (This should only take about 30 seconds, too.) <br /></font></li>
<li><font color="#ff0000"><strong>Refactor:</strong> Now that your tests are passing, you can make changes without worrying about breaking anything. Pause for a moment. Take a deep breath if you need to. Then look at the code you've written, and ask yourself if you can improve it. Look for duplication and other &quot;code smells.&quot; If you see something that doesn't look right, but you're not sure how to fix it, that's okay. Take a look at it again after you've gone through the cycle a few more times. (Take as much time as you need on this step.) After each little refactoring, run the tests and make sure they still pass. <br /></font></li>
<li><font color="#ff6600"><font color="#ff0000"><strong>Repeat:</strong> Do it again. You'll repeat this cycle dozens of times in an hour. Typically, you'll run through several cycles (three to five) very quickly, then find yourself slowing down and spending more time on refactoring. Than </font>you'll speed up again. 20-40 cycles in an hour is not unreasonable.</font></li></ol>
<p>
<hr />
<br />     这之间有个小插曲,微软的MSDN有次发表了一个TDD的GuideLine,但是实际上并不是真正意义上的TDD,很多人 such as Uncle Bob,Michael Feather, James Shore等都写blog说Microsoft miss the TDD points at all,可以看看下面的这个Blog..(当时我根据链接过去的时候,Microsoft上面已经显示: this page is obsoleted and has been removed.:( ),但是有个blog上面是详细的记录下来,并且逐点的抨击...( http: //codebetter.com/blogs/scott.bellware/archive/2005/11/21/134899.aspx)<br /></p></div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>58</wp:post_id>
		<wp:post_date>2006-05-21 14:33:23</wp:post_date>
		<wp:post_date_gmt>2006-05-21 14:33:23</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e6%88%91%e8%b0%88%e6%b5%8b%e8%af%95%e9%a9%b1%e5%8a%a8%e5%bc%80%e5%8f%91-test-driven-development</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="java"><![CDATA[Java]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>spaces_a43755b404d273dfcedbd14ccb4f51ab_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[http://cid-04001c604af3f011.users.api.live.net/Users(288261576051650577)/Blogs('4001C604AF3F011!102')/Entries('4001C604AF3F011!396')?authkey=X13wC75MXT0%24]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>[CXF]CXF中DynamicProxy模式的应用</title>
		<link>http://jeff.familyyu.net/2007/07/15/cxfcxf%e4%b8%addynamicproxy%e6%a8%a1%e5%bc%8f%e7%9a%84%e5%ba%94%e7%94%a8/</link>
		<pubDate>Sun, 15 Jul 2007 09:55:46 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang1.wordpress.com/2007/07/15/cxfcxf%e4%b8%addynamicproxy%e6%a8%a1%e5%bc%8f%e7%9a%84%e5%ba%94%e7%94%a8</guid>
		<description></description>
		<content:encoded><![CDATA[<div id="msgcns!4001C604AF3F011!464" class="bvMsg">在讲Dynamic Proxy模式之前,可能需要理解下<a href="http://www.dofactory.com/Patterns/PatternProxy.aspx">Proxy模式</a>, 经典的Proxy模式里,我们一般需要建立个Proxy的类来包含真正的实现类,而Client端调用的时候,则是去调用Proxy的类,这样Proxy类里就可以控制权限等问题.
在CXF当中用的是JDK自带的Dynamic Proxy,为什么叫Dynamic Proxy呢,因为他在编译的时候,并没有那个Proxy类,而是在运行时期生成一个Proxy类.
在看CXF代码应用Dynamic Proxy之前,来看一个简单的实现.&nbsp;

Interface类：
public interface HelloInterface {
public void sayHi(String name) throws Exception;
}

Impl类:
public class HelloInterfaceImpl implements HelloInterface {
public void sayHi(String name) throws Exception {
System.out.println("This is real HelloInterfaceImpl");
System.out.println("You Inovke sayHi with name : [" + name +"]");
}
}

Proxy的实现..
public class HelloInterfaceProxy implements InvocationHandler {
private Object object;
public static Object getInstance(Object o) {
return Proxy.newProxyInstance(o.getClass().getClassLoader(), o.getClass().getInterfaces(), new HelloInterfaceProxy(o));
}
private HelloInterfaceProxy(Object o) {
object = o;
}
public Object invoke(Object arg0, Method method, Object[] arg2) throws Throwable {
System.out.println("It was interceptored by the HelloInterfaceProxy class firstly");
return method.invoke(object, arg2);
}
}

Client端的调用:
HelloInterfaceImpl impl = new HelloInterfaceImpl();
HelloInterface hello = (HelloInterface)HelloInterfaceProxy.getInstance(impl);
hello.sayHi("Jeff");
运行结果:
It was interceptored by the HelloInterfaceProxy class firstly
This is real HelloInterfaceImpl
You Inovke sayHi with name : [Jeff]

在Client端的调用程序中,我们所获得的hello是一个HelloInterfaceProxy的类,并不是指到真正的HelloInterfaceImpl类.
这里,我们并没有一个真正的HelloInterfaceProxy的类,因为他是在运行时期产生的,所以我们把这个模式叫做Dynamic Proxy.

在CXF当中,实现InvocationHandler的类是: ClientProxy
Interface呢,就是SEI: 比如说是: Greeter.
真正的实现类,是GreeterImpl.
我们在客户端所获取到的Greeter实现,实际上是个GreeterProxy对象.

下面这是获取到客户端实现:
SOAPService ss = new SOAPService(wsdlURL, SERVICE_NAME);
Greeter port = ss.getSoapPort();

</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>19</wp:post_id>
		<wp:post_date>2007-07-15 09:55:46</wp:post_date>
		<wp:post_date_gmt>2007-07-15 09:55:46</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>cxfcxf%e4%b8%addynamicproxy%e6%a8%a1%e5%bc%8f%e7%9a%84%e5%ba%94%e7%94%a8</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="chinese"><![CDATA[Chinese]]></category>
		<category domain="post_tag" nicename="cxf"><![CDATA[CXF]]></category>
		<category domain="post_tag" nicename="design-patterns"><![CDATA[Design Patterns]]></category>
		<category domain="category" nicename="soa"><![CDATA[SOA]]></category>
		<category domain="category" nicename="web-service"><![CDATA[Web Service]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>spaces_a43755b404d273dfcedbd14ccb4f51ab_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[http://cid-04001c604af3f011.users.api.live.net/Users(288261576051650577)/Blogs('4001C604AF3F011!102')/Entries('4001C604AF3F011!464')?authkey=X13wC75MXT0%24]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_efficient_related_posts</wp:meta_key>
			<wp:meta_value><![CDATA[a:8:{i:0;a:4:{s:2:"ID";s:1:"6";s:10:"post_title";s:53:"[CXF]CXF中的两个概念:Invoker & PhaseInterceptor";s:7:"matches";s:1:"2";s:9:"permalink";s:121:"http://jeff.familyyu.net/2007/08/26/cxfcxf%e4%b8%ad%e7%9a%84%e4%b8%a4%e4%b8%aa%e6%a6%82%e5%bf%b5invoker-phaseinterceptor/";}i:1;a:4:{s:2:"ID";s:2:"10";s:10:"post_title";s:61:"[CXF]CXF当中的Configuration -- Spring2.0可扩展XML配置";s:7:"matches";s:1:"2";s:9:"permalink";s:141:"http://jeff.familyyu.net/2007/08/23/cxfcxf%e5%bd%93%e4%b8%ad%e7%9a%84configuration-spring2-0%e5%8f%af%e6%89%a9%e5%b1%95xml%e9%85%8d%e7%bd%ae/";}i:2;a:4:{s:2:"ID";s:2:"23";s:10:"post_title";s:46:"[CXF]CXF中Collection Parameter模式的应用";s:7:"matches";s:1:"2";s:9:"permalink";s:117:"http://jeff.familyyu.net/2007/07/14/cxfcxf%e4%b8%adcollection-parameter%e6%a8%a1%e5%bc%8f%e7%9a%84%e5%ba%94%e7%94%a8/";}i:3;a:4:{s:2:"ID";s:2:"22";s:10:"post_title";s:42:"[CXF]CXF中的AbstractFactory模式应用.";s:7:"matches";s:1:"2";s:9:"permalink";s:112:"http://jeff.familyyu.net/2007/07/14/cxfcxf%e4%b8%ad%e7%9a%84abstractfactory%e6%a8%a1%e5%bc%8f%e5%ba%94%e7%94%a8/";}i:4;a:4:{s:2:"ID";s:2:"20";s:10:"post_title";s:34:"[CXF]CXF中的Observer模式应用";s:7:"matches";s:1:"2";s:9:"permalink";s:105:"http://jeff.familyyu.net/2007/07/12/cxfcxf%e4%b8%ad%e7%9a%84observer%e6%a8%a1%e5%bc%8f%e5%ba%94%e7%94%a8/";}i:5;a:4:{s:2:"ID";s:3:"272";s:10:"post_title";s:40:"Apache CXF Web Service Development book.";s:7:"matches";s:1:"1";s:9:"permalink";s:76:"http://jeff.familyyu.net/2010/02/20/apache-cxf-web-service-development-book/";}i:6;a:4:{s:2:"ID";s:3:"167";s:10:"post_title";s:30:"IMS rolled out its 0.1 version";s:7:"matches";s:1:"1";s:9:"permalink";s:67:"http://jeff.familyyu.net/2007/11/13/ims-rolled-out-its-0-1-version/";}i:7;a:4:{s:2:"ID";s:3:"146";s:10:"post_title";s:29:"CXF ServiceInfo Model diagram";s:7:"matches";s:1:"1";s:9:"permalink";s:66:"http://jeff.familyyu.net/2007/09/06/cxf-serviceinfo-model-diagram/";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_relation_threshold</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>[CXF]CXF中的Observer模式应用</title>
		<link>http://jeff.familyyu.net/2007/07/12/cxfcxf%e4%b8%ad%e7%9a%84observer%e6%a8%a1%e5%bc%8f%e5%ba%94%e7%94%a8/</link>
		<pubDate>Thu, 12 Jul 2007 09:03:20 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang1.wordpress.com/2007/07/12/cxfcxf%e4%b8%ad%e7%9a%84observer%e6%a8%a1%e5%bc%8f%e5%ba%94%e7%94%a8</guid>
		<description></description>
		<content:encoded><![CDATA[<div id="msgcns!4001C604AF3F011!450" class="bvMsg">在CXF当中,其中在Transport这一层接收信息里,采用了Observer的模式,我记得我刚前段时间刚看这段代码的时候,
老感觉跟Observer模式对不上号...现在,我明白了,原来他是一个简化版的Observer模式.
先看下典型Observer模式&nbsp;
<ul>
	<li><span style="color: #aa0000;"><strong>Subject</strong></span><span style="color: #007733;"><strong> </strong></span>
<ul>
	<li>knows its observers. Any number of
Observer objects may observe a subject</li>
	<li>provides an interface for attaching and detaching Observer objects.</li>
</ul>
</li>
	<li><span style="color: #aa0000;"><strong>ConcreteSubject</strong></span><span style="color: #007733;"><strong> </strong></span>
<ul>
	<li>stores state of interest to
ConcreteObserver</li>
	<li>sends a notification to its observers when its state changes</li>
</ul>
</li>
	<li><span style="color: #aa0000;"><strong>Observer</strong></span><span style="color: #007733;"><strong> </strong></span>
<ul>
	<li>defines an updating interface for objects that should be notified of changes in a subject.</li>
</ul>
</li>
	<li><span style="color: #aa0000;"><strong>ConcreteObserver</strong></span> <span style="color: #007733;"> </span>
<ul>
	<li>maintains a reference to a
ConcreteSubject object</li>
	<li>stores state that should stay
consistent with the subject's</li>
	<li>implements the Observer updating interface to keep its state consistent
with the subject's</li>
</ul>
</li>
</ul>
在对号入座前,先讲讲我们解决的这个问题场景.
我们要通过Transport这一层来传送Message(消息),我们假设以HTTP传输协议来做例子.
在CXF当中,有两个概念来对Transport进行了封装.
1: Conduit 可以理解为信息发送地,发送一条信息需要经过两个步骤:
1) conduit.prepare(message);
2) conduit.close(message);
2: Destination 可以理解为目的地.

接下来,我们来看看是怎么应用Observer模式的.

Observable: (对应的是Subject)
public interface Observable {
void setMessageObserver(MessageObserver observer);
}

MessageObserver: (对应的是Observer)
public interface MessageObserver {
void onMessage(Message message);
}

Conduit/Destination (对应ConcreteSubject)
ClientImpl/ChainInitiationObserver (对应ConcreteObserver)

可以说,在CXF当中应用的Observer模式有点不一样.
1) 我们可以从Observable类中看出,他只能注册一个,以往典型的Subject是支持多于Observer注册的.
2) 我们不能在Subject中看到他调用Observer的方法.实际上呢,他是隐藏于ConcreteSubject类当中.
这里我们来看一个ConcreteSubject( ServletDestination )
protected void doMessage(MessageImpl inMessage) throws IOException {
try {
setHeaders(inMessage);
inMessage.setDestination(this);
incomingObserver.onMessage(inMessage);
} finally {
if (LOG.isLoggable(Level.FINE)) {
LOG.fine("Finished servicing http request on thread: " + Thread.currentThread());
}
}
}

当你读CXF的源代码的时候,你会发现尽管Conduit也支持Observable,但是目前代码出好像还没有具体的应用.
其实这是一个简单版本的Observer模式,而且并不是一个one-to-many,而是one-to-one的.
-----------------------
参考文档:
<a href="http://www.dofactory.com/Patterns/PatternObserver.aspx">http://www.dofactory.com/Patterns/PatternObserver.aspx</a>

</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>20</wp:post_id>
		<wp:post_date>2007-07-12 09:03:20</wp:post_date>
		<wp:post_date_gmt>2007-07-12 09:03:20</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>cxfcxf%e4%b8%ad%e7%9a%84observer%e6%a8%a1%e5%bc%8f%e5%ba%94%e7%94%a8</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="chinese"><![CDATA[Chinese]]></category>
		<category domain="post_tag" nicename="cxf"><![CDATA[CXF]]></category>
		<category domain="post_tag" nicename="design-patterns"><![CDATA[Design Patterns]]></category>
		<category domain="category" nicename="soa"><![CDATA[SOA]]></category>
		<category domain="category" nicename="web-service"><![CDATA[Web Service]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>spaces_a43755b404d273dfcedbd14ccb4f51ab_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[http://cid-04001c604af3f011.users.api.live.net/Users(288261576051650577)/Blogs('4001C604AF3F011!102')/Entries('4001C604AF3F011!450')?authkey=X13wC75MXT0%24]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_efficient_related_posts</wp:meta_key>
			<wp:meta_value><![CDATA[a:8:{i:0;a:4:{s:2:"ID";s:1:"6";s:10:"post_title";s:53:"[CXF]CXF中的两个概念:Invoker & PhaseInterceptor";s:7:"matches";s:1:"2";s:9:"permalink";s:121:"http://jeff.familyyu.net/2007/08/26/cxfcxf%e4%b8%ad%e7%9a%84%e4%b8%a4%e4%b8%aa%e6%a6%82%e5%bf%b5invoker-phaseinterceptor/";}i:1;a:4:{s:2:"ID";s:2:"10";s:10:"post_title";s:61:"[CXF]CXF当中的Configuration -- Spring2.0可扩展XML配置";s:7:"matches";s:1:"2";s:9:"permalink";s:141:"http://jeff.familyyu.net/2007/08/23/cxfcxf%e5%bd%93%e4%b8%ad%e7%9a%84configuration-spring2-0%e5%8f%af%e6%89%a9%e5%b1%95xml%e9%85%8d%e7%bd%ae/";}i:2;a:4:{s:2:"ID";s:2:"19";s:10:"post_title";s:38:"[CXF]CXF中DynamicProxy模式的应用";s:7:"matches";s:1:"2";s:9:"permalink";s:109:"http://jeff.familyyu.net/2007/07/15/cxfcxf%e4%b8%addynamicproxy%e6%a8%a1%e5%bc%8f%e7%9a%84%e5%ba%94%e7%94%a8/";}i:3;a:4:{s:2:"ID";s:2:"23";s:10:"post_title";s:46:"[CXF]CXF中Collection Parameter模式的应用";s:7:"matches";s:1:"2";s:9:"permalink";s:117:"http://jeff.familyyu.net/2007/07/14/cxfcxf%e4%b8%adcollection-parameter%e6%a8%a1%e5%bc%8f%e7%9a%84%e5%ba%94%e7%94%a8/";}i:4;a:4:{s:2:"ID";s:2:"22";s:10:"post_title";s:42:"[CXF]CXF中的AbstractFactory模式应用.";s:7:"matches";s:1:"2";s:9:"permalink";s:112:"http://jeff.familyyu.net/2007/07/14/cxfcxf%e4%b8%ad%e7%9a%84abstractfactory%e6%a8%a1%e5%bc%8f%e5%ba%94%e7%94%a8/";}i:5;a:4:{s:2:"ID";s:3:"272";s:10:"post_title";s:40:"Apache CXF Web Service Development book.";s:7:"matches";s:1:"1";s:9:"permalink";s:76:"http://jeff.familyyu.net/2010/02/20/apache-cxf-web-service-development-book/";}i:6;a:4:{s:2:"ID";s:3:"167";s:10:"post_title";s:30:"IMS rolled out its 0.1 version";s:7:"matches";s:1:"1";s:9:"permalink";s:67:"http://jeff.familyyu.net/2007/11/13/ims-rolled-out-its-0-1-version/";}i:7;a:4:{s:2:"ID";s:3:"146";s:10:"post_title";s:29:"CXF ServiceInfo Model diagram";s:7:"matches";s:1:"1";s:9:"permalink";s:66:"http://jeff.familyyu.net/2007/09/06/cxf-serviceinfo-model-diagram/";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_relation_threshold</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>[CXF]CXF中的Interceptor模式应用</title>
		<link>http://jeff.familyyu.net/2007/07/14/cxfcxf%e4%b8%ad%e7%9a%84interceptor%e6%a8%a1%e5%bc%8f%e5%ba%94%e7%94%a8/</link>
		<pubDate>Sat, 14 Jul 2007 04:55:55 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang1.wordpress.com/2007/07/14/cxfcxf%e4%b8%ad%e7%9a%84interceptor%e6%a8%a1%e5%bc%8f%e5%ba%94%e7%94%a8</guid>
		<description></description>
		<content:encoded><![CDATA[<div id="msgcns!4001C604AF3F011!458" class="bvMsg">先来说说Interceptor模式中各个参与对象的功能和职责:
Interceptor:
* Defines an interface for integrating out-of-band services
Concrete Interceptor:
* Implements a specific out-of-band service
* Uses context object to control the concrete framework.
Dispatcher
* Allows applications to register and remove concrete interceptors.
* Dispatches registered concrete interceptor callbacks when event occur
Context Object
* Allows services to obtain information from the concrete framework
* Allows services to control certain behaviour of the concrete framework.&nbsp;

看上去是很好理解的... Dispatcher负责添加和删除Interceptor, Concrete Interceptor通过Context Object获取到具体的上下文内容,去改变值,或者处理业务功能.

现在我们来看下CXF中是怎么使用Interceptor模式的.
Interceptor (对应Interceptor角色)
public interface Interceptor&lt;T extends Message&gt; {
void handleMessage(T message) throws Fault;
void handleFault(T message);
}
在CXF当中,还引入了一个<a href="https://svn.apache.org/repos/asf/incubator/cxf/trunk/api/src/main/java/org/apache/cxf/phase/Phase.java">Phase</a>的概念.相当于说在Interceptor顺序方面加了一个比较大粒度的区别. 比如说,执行的phase顺序为:
pre-invoke, invoke, post-invoke. 具体的Phase优先级可以参考<a href="https://svn.apache.org/repos/asf/incubator/cxf/trunk/rt/core/src/main/java/org/apache/cxf/phase/PhaseManagerImpl.java">PhaseManagerImpl</a>看看到底有哪些Phases.

所以说,在CXF当中,真正对应(Interceptor角色)的应该是<a href="https://svn.apache.org/repos/asf/incubator/cxf/trunk/api/src/main/java/org/apache/cxf/phase/PhaseInterceptor.java">PhaseInterceptor</a>
对于每个concrete Interceptor来讲,它一定要指定自己是属于哪个Phase.
这里我们以<a href="https://svn.apache.org/repos/asf/incubator/cxf/trunk/rt/core/src/main/java/org/apache/cxf/interceptor/MessageSenderInterceptor.java">MessageSenderInterceptor</a> 来作为Concrete Interceptor的例子.

<a href="https://svn.apache.org/repos/asf/incubator/cxf/trunk/api/src/main/java/org/apache/cxf/message/Message.java">Message</a> (对应Context Object角色),从Message这里你可以获取到你所要的信息,可以说所有的内容都可以从Message里面直接或者间接取到.

<a href="https://svn.apache.org/repos/asf/incubator/cxf/trunk/api/src/main/java/org/apache/cxf/interceptor/InterceptorChain.java">InterceptorChain</a> (对应Dispatcher角色),在InterceptorChain里,我们可以进行增加,删除一个Concrete Interceptor.同时,也负责根据Phase和ID的顺序来执行各个Interceptor,具体的你可以参考<a href="https://svn.apache.org/repos/asf/incubator/cxf/trunk/api/src/main/java/org/apache/cxf/phase/PhaseInterceptorChain.java">PhaseInterceptorChain</a>的实现.
我觉得这个InterceptorChain名字起得挺好的,因为如果你看它实现的话,里面用的就是链表来实现顺序的..

虽然我们上面把各个角色都介绍完了,但是当你看CXF的代码时候,你不会看到用InterceptorChain来注册具体实现的Interceptor,那么又是谁来充当这个注册器呢.
在CXF中,还有个类,叫做<a href="https://svn.apache.org/repos/asf/incubator/cxf/trunk/api/src/main/java/org/apache/cxf/interceptor/InterceptorProvider.java">InterceptorProvider</a>,根据名字,我们可以看出,凡是实现这个接口的,都有可能提供Interceptor,也就是说,Interceptor的注册器.
我们来看看有哪些类实现这个接口.
BUS, Client, Service, Binding, Endpoint. 这些地方都有可能提供他们的Interceptor. 记住我们的concrete interceptor实际上就是一个小模块的逻辑处理,比如我有可能是soapBinding,那么我就需要做一些soap binding所需要的特殊逻辑,这个时候,我们就需要在binding这个扩展点加入我们所需要的interceptors来处理. 一般来说,在InterceptorProvider里面注册的时候是没有顺序的. 我们会通过PhaseChainCache来对它构造出一个PhaseInterceptorChain. 然后再来调用doIntercept(Message)方法: 比如如下的代码.(摘自ClientImpl.java)

protected PhaseInterceptorChain setupInterceptorChain(Endpoint endpoint) {

PhaseManager pm = bus.getExtension(PhaseManager.class);

List&lt;Interceptor&gt; i1 = bus.getOutInterceptors();
if (LOG.isLoggable(Level.FINE)) {
LOG.fine("Interceptors contributed by bus: " + i1);
}
List&lt;Interceptor&gt; i2 = endpoint.getOutInterceptors();
if (LOG.isLoggable(Level.FINE)) {
LOG.fine("Interceptors contributed by endpoint: " + i2);
}
List&lt;Interceptor&gt; i3 = getOutInterceptors();
if (LOG.isLoggable(Level.FINE)) {
LOG.fine("Interceptors contributed by client: " + i3);
}
List&lt;Interceptor&gt; i4 = endpoint.getBinding().getOutInterceptors();
if (LOG.isLoggable(Level.FINE)) {
LOG.fine("Interceptors contributed by binding: " + i4);
}
return outboundChainCache.get(pm.getOutPhases(), i1, i2, i3, i4);
}

PhaseInterceptorChain chain = setupInterceptorChain(endpoint);
message.setInterceptorChain(chain);
modifyChain(chain, requestContext);
chain.setFaultObserver(outFaultObserver);
// setup conduit selector
prepareConduitSelector(message);
// execute chain
chain.doIntercept(message);

说到这里, 还需要提一点的就是: 在CXF中,还引入了另外一个概念: <a href="https://svn.apache.org/repos/asf/incubator/cxf/trunk/api/src/main/java/org/apache/cxf/feature/AbstractFeature.java">AbstractFeature</a>, 这个我是从我同事willem的blog中知道了这个概念. 可能对于某个interceptor来说, 他要在IN, OUT, FAULTIN, FAULTOUT都需要这个interceptor,那么用feature.

* A Feature is something that is able to customize a Server, Client, or Bus, typically adding capabilities. For instance, there may be a LoggingFeature which configures one of the above to log each of their messages.
By default the initialize methods all delegate to initializeProvider(InterceptorProvider).  If you're simply adding interceptors to a Server, Client, or Bus, this allows you to add them easily.

现在我们再来理一理CXF当中的Interceptor的关系.
InterceptorProvider 有 IN/OUT 两个 Interceptor的集合.
IN/OUT Interceptor有他固定的PhaseInterceptor.
某一个具体的PhaseInterceptor有他所对应的具体Interceptors.
<a href="http://willem.bokeland.com/blog/794/6089/2007/06/30/209718"><span style="font-size: small;"><span style="font-size: x-small;"> </span></span></a>
关于CXF中的Interceptor可以参考我同事willem写的两篇文章：
<a href="http://willem.bokeland.com/blog/794/6089/2007/06/30/209717"><span style="font-size: small;"><span style="font-size: x-small;"><span style="text-decoration: underline;">http://willem.bokeland.com/blog/794/6089/2007/06/30/209717</span></span></span></a>
<a href="http://willem.bokeland.com/blog/794/6089/2007/06/30/209718"><span style="font-size: small;"><span style="font-size: x-small;">http://willem.bokeland.com/blog/794/6089/2007/06/30/209718</span></span></a>
------------
参考文档:
&lt;Pattern oriented software architecture volume2&gt;

</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>21</wp:post_id>
		<wp:post_date>2007-07-14 04:55:55</wp:post_date>
		<wp:post_date_gmt>2007-07-14 04:55:55</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>cxfcxf%e4%b8%ad%e7%9a%84interceptor%e6%a8%a1%e5%bc%8f%e5%ba%94%e7%94%a8</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="chinese"><![CDATA[Chinese]]></category>
		<category domain="post_tag" nicename="cxf"><![CDATA[CXF]]></category>
		<category domain="category" nicename="soa"><![CDATA[SOA]]></category>
		<category domain="category" nicename="web-service"><![CDATA[Web Service]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>spaces_a43755b404d273dfcedbd14ccb4f51ab_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[http://cid-04001c604af3f011.users.api.live.net/Users(288261576051650577)/Blogs('4001C604AF3F011!102')/Entries('4001C604AF3F011!458')?authkey=X13wC75MXT0%24]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_efficient_related_posts</wp:meta_key>
			<wp:meta_value><![CDATA[a:8:{i:0;a:4:{s:2:"ID";s:3:"272";s:10:"post_title";s:40:"Apache CXF Web Service Development book.";s:7:"matches";s:1:"1";s:9:"permalink";s:76:"http://jeff.familyyu.net/2010/02/20/apache-cxf-web-service-development-book/";}i:1;a:4:{s:2:"ID";s:3:"167";s:10:"post_title";s:30:"IMS rolled out its 0.1 version";s:7:"matches";s:1:"1";s:9:"permalink";s:67:"http://jeff.familyyu.net/2007/11/13/ims-rolled-out-its-0-1-version/";}i:2;a:4:{s:2:"ID";s:3:"146";s:10:"post_title";s:29:"CXF ServiceInfo Model diagram";s:7:"matches";s:1:"1";s:9:"permalink";s:66:"http://jeff.familyyu.net/2007/09/06/cxf-serviceinfo-model-diagram/";}i:3;a:4:{s:2:"ID";s:1:"6";s:10:"post_title";s:53:"[CXF]CXF中的两个概念:Invoker & PhaseInterceptor";s:7:"matches";s:1:"1";s:9:"permalink";s:121:"http://jeff.familyyu.net/2007/08/26/cxfcxf%e4%b8%ad%e7%9a%84%e4%b8%a4%e4%b8%aa%e6%a6%82%e5%bf%b5invoker-phaseinterceptor/";}i:4;a:4:{s:2:"ID";s:2:"10";s:10:"post_title";s:61:"[CXF]CXF当中的Configuration -- Spring2.0可扩展XML配置";s:7:"matches";s:1:"1";s:9:"permalink";s:141:"http://jeff.familyyu.net/2007/08/23/cxfcxf%e5%bd%93%e4%b8%ad%e7%9a%84configuration-spring2-0%e5%8f%af%e6%89%a9%e5%b1%95xml%e9%85%8d%e7%bd%ae/";}i:5;a:4:{s:2:"ID";s:2:"11";s:10:"post_title";s:26:"[CXF]CXF中重要概念Bus";s:7:"matches";s:1:"1";s:9:"permalink";s:91:"http://jeff.familyyu.net/2007/08/22/cxfcxf%e4%b8%ad%e9%87%8d%e8%a6%81%e6%a6%82%e5%bf%b5bus/";}i:6;a:4:{s:2:"ID";s:2:"13";s:10:"post_title";s:34:"[CXF]CXF中ServiceInfo的结构图";s:7:"matches";s:1:"1";s:9:"permalink";s:99:"http://jeff.familyyu.net/2007/08/16/cxfcxf%e4%b8%adserviceinfo%e7%9a%84%e7%bb%93%e6%9e%84%e5%9b%be/";}i:7;a:4:{s:2:"ID";s:2:"17";s:10:"post_title";s:30:"[CXF]一句话概括Apache CXF";s:7:"matches";s:1:"1";s:9:"permalink";s:95:"http://jeff.familyyu.net/2007/07/16/cxf%e4%b8%80%e5%8f%a5%e8%af%9d%e6%a6%82%e6%8b%acapache-cxf/";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_relation_threshold</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>[CXF]CXF中的AbstractFactory模式应用.</title>
		<link>http://jeff.familyyu.net/2007/07/14/cxfcxf%e4%b8%ad%e7%9a%84abstractfactory%e6%a8%a1%e5%bc%8f%e5%ba%94%e7%94%a8/</link>
		<pubDate>Sat, 14 Jul 2007 09:10:33 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang1.wordpress.com/2007/07/14/cxfcxf%e4%b8%ad%e7%9a%84abstractfactory%e6%a8%a1%e5%bc%8f%e5%ba%94%e7%94%a8</guid>
		<description></description>
		<content:encoded><![CDATA[<div id="msgcns!4001C604AF3F011!460" class="bvMsg">在CXF当中,Abstract Factory模式随处可见.这里我们就以BindingFactory为例子,来介绍CXF当中是怎么使用Abstract Factory模式的.
首先,我们来看下Abstract Factory模式:
[意图]
Provide an interface for creating families of related or dependent
objects without specifying their concrete classes.
[参与者和职责]
<ul>
	<li><span style="color: #aa0000;"><strong>AbstractFactory</strong></span> <span style="color: #007733;"> </span>&nbsp;
<ul>
	<li>declares an interface for operations that create abstract products</li>
</ul>
</li>
	<li><span style="color: #aa0000;"><strong>ConcreteFactory</strong></span><span style="color: #007733;"><strong> </strong></span>
<ul>
	<li>implements the operations to create concrete product objects</li>
</ul>
</li>
	<li><span style="color: #aa0000;"><strong>AbstractProduct</strong></span>
<ul>
	<li>declares an interface for a type of product object</li>
</ul>
</li>
	<li><span style="color: #aa0000;"><strong>Product</strong></span> <span style="color: #007733;"><strong></strong></span>
<ul>
	<li>defines a product object to be created by the corresponding concrete factory&nbsp;</li>
	<li>implements the AbstractProduct interface</li>
</ul>
</li>
</ul>
下面我们来看CXF中的代码:
<a href="https://svn.apache.org/repos/asf/incubator/cxf/trunk/api/src/main/java/org/apache/cxf/binding/BindingFactory.java">BindingFactory</a>: (对应AbstractFactory角色)

public interface BindingFactory {
Binding createBinding(BindingInfo binding);
BindingInfo createBindingInfo(Service service, String namespace, Object configObject);
void addListener(Destination d, Endpoint e);
}

<a href="https://svn.apache.org/repos/asf/incubator/cxf/trunk/rt/bindings/soap/src/main/java/org/apache/cxf/binding/soap/SoapBindingFactory.java">SoapBindingFactory </a>(对应Concrete Factory角色)
Binding, BindingInfo (对应Abstract Product角色)
SoapBinding, XMLBinding, SoapBindingInfo(对应Concrete Product角色).

举第2个例子在CXF中使用这个模式的.

Databinding (对应Abstract Factory角色)
JAXBDatabinding, AegisDatabinding, SourceDataBinding (对应Concrete Factory角色)
DataReader, DataWriter (对应Abstract Product角色)
NodeDataReader, XMLStreamDataReader, NodeDataWriter... (对应Concrete Product角色)

虽然说在这里,Databinding类我们用的是interface而不是用abstract,但是从使用的意义和用途,我们仍可断定是Abstract Factory模式.

参考资料:
-------------------
<a href="http://www.dofactory.com/Patterns/PatternAbstract.aspx">http://www.dofactory.com/Patterns/PatternAbstract.aspx</a>

</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>22</wp:post_id>
		<wp:post_date>2007-07-14 09:10:33</wp:post_date>
		<wp:post_date_gmt>2007-07-14 09:10:33</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>cxfcxf%e4%b8%ad%e7%9a%84abstractfactory%e6%a8%a1%e5%bc%8f%e5%ba%94%e7%94%a8</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="chinese"><![CDATA[Chinese]]></category>
		<category domain="post_tag" nicename="cxf"><![CDATA[CXF]]></category>
		<category domain="post_tag" nicename="design-patterns"><![CDATA[Design Patterns]]></category>
		<category domain="category" nicename="soa"><![CDATA[SOA]]></category>
		<category domain="category" nicename="web-service"><![CDATA[Web Service]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>spaces_a43755b404d273dfcedbd14ccb4f51ab_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[http://cid-04001c604af3f011.users.api.live.net/Users(288261576051650577)/Blogs('4001C604AF3F011!102')/Entries('4001C604AF3F011!460')?authkey=X13wC75MXT0%24]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_efficient_related_posts</wp:meta_key>
			<wp:meta_value><![CDATA[a:8:{i:0;a:4:{s:2:"ID";s:1:"6";s:10:"post_title";s:53:"[CXF]CXF中的两个概念:Invoker & PhaseInterceptor";s:7:"matches";s:1:"2";s:9:"permalink";s:121:"http://jeff.familyyu.net/2007/08/26/cxfcxf%e4%b8%ad%e7%9a%84%e4%b8%a4%e4%b8%aa%e6%a6%82%e5%bf%b5invoker-phaseinterceptor/";}i:1;a:4:{s:2:"ID";s:2:"10";s:10:"post_title";s:61:"[CXF]CXF当中的Configuration -- Spring2.0可扩展XML配置";s:7:"matches";s:1:"2";s:9:"permalink";s:141:"http://jeff.familyyu.net/2007/08/23/cxfcxf%e5%bd%93%e4%b8%ad%e7%9a%84configuration-spring2-0%e5%8f%af%e6%89%a9%e5%b1%95xml%e9%85%8d%e7%bd%ae/";}i:2;a:4:{s:2:"ID";s:2:"19";s:10:"post_title";s:38:"[CXF]CXF中DynamicProxy模式的应用";s:7:"matches";s:1:"2";s:9:"permalink";s:109:"http://jeff.familyyu.net/2007/07/15/cxfcxf%e4%b8%addynamicproxy%e6%a8%a1%e5%bc%8f%e7%9a%84%e5%ba%94%e7%94%a8/";}i:3;a:4:{s:2:"ID";s:2:"23";s:10:"post_title";s:46:"[CXF]CXF中Collection Parameter模式的应用";s:7:"matches";s:1:"2";s:9:"permalink";s:117:"http://jeff.familyyu.net/2007/07/14/cxfcxf%e4%b8%adcollection-parameter%e6%a8%a1%e5%bc%8f%e7%9a%84%e5%ba%94%e7%94%a8/";}i:4;a:4:{s:2:"ID";s:2:"20";s:10:"post_title";s:34:"[CXF]CXF中的Observer模式应用";s:7:"matches";s:1:"2";s:9:"permalink";s:105:"http://jeff.familyyu.net/2007/07/12/cxfcxf%e4%b8%ad%e7%9a%84observer%e6%a8%a1%e5%bc%8f%e5%ba%94%e7%94%a8/";}i:5;a:4:{s:2:"ID";s:3:"272";s:10:"post_title";s:40:"Apache CXF Web Service Development book.";s:7:"matches";s:1:"1";s:9:"permalink";s:76:"http://jeff.familyyu.net/2010/02/20/apache-cxf-web-service-development-book/";}i:6;a:4:{s:2:"ID";s:3:"167";s:10:"post_title";s:30:"IMS rolled out its 0.1 version";s:7:"matches";s:1:"1";s:9:"permalink";s:67:"http://jeff.familyyu.net/2007/11/13/ims-rolled-out-its-0-1-version/";}i:7;a:4:{s:2:"ID";s:3:"146";s:10:"post_title";s:29:"CXF ServiceInfo Model diagram";s:7:"matches";s:1:"1";s:9:"permalink";s:66:"http://jeff.familyyu.net/2007/09/06/cxf-serviceinfo-model-diagram/";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_relation_threshold</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>[CXF]CXF中Collection Parameter模式的应用</title>
		<link>http://jeff.familyyu.net/2007/07/14/cxfcxf%e4%b8%adcollection-parameter%e6%a8%a1%e5%bc%8f%e7%9a%84%e5%ba%94%e7%94%a8/</link>
		<pubDate>Sat, 14 Jul 2007 09:52:11 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang1.wordpress.com/2007/07/14/cxfcxf%e4%b8%adcollection-parameter%e6%a8%a1%e5%bc%8f%e7%9a%84%e5%ba%94%e7%94%a8</guid>
		<description></description>
		<content:encoded><![CDATA[<div id="msgcns!4001C604AF3F011!461" class="bvMsg">在CXF当中,ErrorVisitor就是一个典型的<a href="http://c2.com/cgi/wiki?CollectingParameter">Collection Parameter</a>模式的应用.
其实,Collection Parameter模式很简单,就是有个类,负责到各个对象去收集结果.比如Struts中的ActionErrors类.
我刚开始看到ErrorVisitor的时候,我以为是跟Visitor模式有关系,其实是没关系的.如果有可能,我希望能改个名字,比如叫:ErrorCollector.&nbsp;

参考资料:
--------------------
<a href="http://c2.com/cgi/wiki?CollectingParameter">http://c2.com/cgi/wiki?CollectingParameter</a>

</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>23</wp:post_id>
		<wp:post_date>2007-07-14 09:52:11</wp:post_date>
		<wp:post_date_gmt>2007-07-14 09:52:11</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>cxfcxf%e4%b8%adcollection-parameter%e6%a8%a1%e5%bc%8f%e7%9a%84%e5%ba%94%e7%94%a8</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="chinese"><![CDATA[Chinese]]></category>
		<category domain="post_tag" nicename="cxf"><![CDATA[CXF]]></category>
		<category domain="post_tag" nicename="design-patterns"><![CDATA[Design Patterns]]></category>
		<category domain="category" nicename="soa"><![CDATA[SOA]]></category>
		<category domain="category" nicename="web-service"><![CDATA[Web Service]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>spaces_a43755b404d273dfcedbd14ccb4f51ab_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[http://cid-04001c604af3f011.users.api.live.net/Users(288261576051650577)/Blogs('4001C604AF3F011!102')/Entries('4001C604AF3F011!461')?authkey=X13wC75MXT0%24]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_efficient_related_posts</wp:meta_key>
			<wp:meta_value><![CDATA[a:8:{i:0;a:4:{s:2:"ID";s:1:"6";s:10:"post_title";s:53:"[CXF]CXF中的两个概念:Invoker & PhaseInterceptor";s:7:"matches";s:1:"2";s:9:"permalink";s:121:"http://jeff.familyyu.net/2007/08/26/cxfcxf%e4%b8%ad%e7%9a%84%e4%b8%a4%e4%b8%aa%e6%a6%82%e5%bf%b5invoker-phaseinterceptor/";}i:1;a:4:{s:2:"ID";s:2:"10";s:10:"post_title";s:61:"[CXF]CXF当中的Configuration -- Spring2.0可扩展XML配置";s:7:"matches";s:1:"2";s:9:"permalink";s:141:"http://jeff.familyyu.net/2007/08/23/cxfcxf%e5%bd%93%e4%b8%ad%e7%9a%84configuration-spring2-0%e5%8f%af%e6%89%a9%e5%b1%95xml%e9%85%8d%e7%bd%ae/";}i:2;a:4:{s:2:"ID";s:2:"19";s:10:"post_title";s:38:"[CXF]CXF中DynamicProxy模式的应用";s:7:"matches";s:1:"2";s:9:"permalink";s:109:"http://jeff.familyyu.net/2007/07/15/cxfcxf%e4%b8%addynamicproxy%e6%a8%a1%e5%bc%8f%e7%9a%84%e5%ba%94%e7%94%a8/";}i:3;a:4:{s:2:"ID";s:2:"22";s:10:"post_title";s:42:"[CXF]CXF中的AbstractFactory模式应用.";s:7:"matches";s:1:"2";s:9:"permalink";s:112:"http://jeff.familyyu.net/2007/07/14/cxfcxf%e4%b8%ad%e7%9a%84abstractfactory%e6%a8%a1%e5%bc%8f%e5%ba%94%e7%94%a8/";}i:4;a:4:{s:2:"ID";s:2:"20";s:10:"post_title";s:34:"[CXF]CXF中的Observer模式应用";s:7:"matches";s:1:"2";s:9:"permalink";s:105:"http://jeff.familyyu.net/2007/07/12/cxfcxf%e4%b8%ad%e7%9a%84observer%e6%a8%a1%e5%bc%8f%e5%ba%94%e7%94%a8/";}i:5;a:4:{s:2:"ID";s:3:"272";s:10:"post_title";s:40:"Apache CXF Web Service Development book.";s:7:"matches";s:1:"1";s:9:"permalink";s:76:"http://jeff.familyyu.net/2010/02/20/apache-cxf-web-service-development-book/";}i:6;a:4:{s:2:"ID";s:3:"167";s:10:"post_title";s:30:"IMS rolled out its 0.1 version";s:7:"matches";s:1:"1";s:9:"permalink";s:67:"http://jeff.familyyu.net/2007/11/13/ims-rolled-out-its-0-1-version/";}i:7;a:4:{s:2:"ID";s:3:"146";s:10:"post_title";s:29:"CXF ServiceInfo Model diagram";s:7:"matches";s:1:"1";s:9:"permalink";s:66:"http://jeff.familyyu.net/2007/09/06/cxf-serviceinfo-model-diagram/";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_relation_threshold</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Jeff说模式 - Interceptor模式</title>
		<link>http://jeff.familyyu.net/2007/07/14/jeff%e8%af%b4%e6%a8%a1%e5%bc%8f-interceptor%e6%a8%a1%e5%bc%8f/</link>
		<pubDate>Sat, 14 Jul 2007 08:10:31 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang1.wordpress.com/2007/07/14/jeff%e8%af%b4%e6%a8%a1%e5%bc%8f-interceptor%e6%a8%a1%e5%bc%8f</guid>
		<description></description>
		<content:encoded><![CDATA[<div id="msgcns!4001C604AF3F011!459" class="bvMsg">[意图]
Developing frameworks that can be extended transparently.
The Interceptor architectural pattern allows services to be added transparently to a framework and triggered automatically when certain events occur.&nbsp;

[参与者和职责]
Interceptor:
* Defines an interface for integrating out-of-band services
Concrete Interceptor:
* Implements a specific out-of-band service
* Uses context object to control the concrete framework.
Dispatcher
* Allows applications to register and remove concrete interceptors.
* Dispatches registered concrete interceptor callbacks when event occur
Context Object
* Allows services to obtain information from the concrete framework
* Allows services to control certain behaviour of the concrete framework.

[实现]
这个实现分成7步.
<span style="color: #ff0000;">1. Should document the aspects that are related to interception</span>
<span style="color: #ff0000;">2. Identify and model interception points.</span>
1) Identify concrete framework state transitions that may not be visible to external applications, but are subject to interception.
2) Partition interception points into reader and writer sets.The reader set includes all state transitions in which applications only access information from the concrete framework. Conversely the writer set includes all state transitions in which applications can modify the behavior of the concrete framework.
3) Integrate interception points into the state machine model. Interception points can be modeled in the state machine by introducing intermediary states. If a state transition is subject to interception, place a new interception state between the source state and the sink state of the original transition. This interception state triggers the corresponding interceptors. For interception points that belong to the writer set, introduce additional state transitions in which the following properties apply:
* The interception state is the start node and
* The target nodes are states that represent the subsequent behavior of the concrete framework after the interception.
4) Partition interception points into disjoint interception groups. To process events, concrete frameworks often perform a series of related activities, each of which may be associated with an interception point. To emphasize the relationship between each activity, it may be useful to coalesce a series of semantically-related interception points into an interception group.
<span style="color: #ff0000;">3. Specify the context objects.</span>
1) Determine the number of context object types.
* Multiple interfaces.
* Single interface.
In general, multiple interfaces are useful when client applications intercept a wide variety of different framework events. In other cases, however, the single interface strategy may be preferable due to its simplicity.
2) Define how to pass context objects to concrete interceptors. Context objects are instantiated by the concrete framework. They are passed to a concrete interceptor using one of the following two strategies:
* Per-registration. In this strategy a context object is passed to an interceptor once when it registers with a dispatcher.
* Per-event. In this strategy a context object is passed to a concrete interceptor with every callback invocation.
The per-event strategy allows a concrete framework to provide finegrained information about the occurrence of a particular event. In contrast, the perregistration strategy only provides general information common to all occurrences of a particular event type. The per-event strategy may incur higher overhead, however, due to repeated creation and deletion of context objects.
<span style="color: #ff0000;">4. Specify the interceptors.</span> An interceptor defines a generic interface that a concrete framework uses to invoke concrete interceptors, via dispatchers, when interception points are triggered.
<span style="color: #ff0000;">5. Specify the dispatchers. </span>For each interceptor, define a dispatcher interface that applications can use to register and remove concrete interceptors with the concrete framework. In addition, this interface is used by the framework to dispatch concrete
interceptors registered at interception points.
1) Specify the interceptor registration interface. A dispatcher corresponds to the Observer pattern's subject role. It implements a registration interface for interceptors, which correspond to the observer role.
2) Specify the dispatcher callback interface. When an interception event occurs the concrete framework notifies its dispatcher. When notified, a dispatcher invokes the corresponding hook methods of its registered concrete interceptors. A dispatcher often provides the same interface to the concrete framework that its associated interceptor provides to the dispatcher.
<span style="color: #ff0000;">6. Implement the callback mechanisms in the concrete framework. </span>The dispatcher's internal callback mechanism can be implemented with the Iterator pattern Similarly, a dispatcher can apply the Strategy pattern to allow applications to select from among several interceptor callback orderings:
* Simple invocation strategies include 'first-in first-out' (FIFO) or 'last-in first-out' (LIFO) ordering strategies, where interceptors are invoked in the order they were registered or vice-versa. When using the Interceptor pattern to implement a particular 'interceptor stack', a combined FIFO/LIFO approach can be used to process messages traversing the stack. On the client a FIFO strategy can be used to pass messages down the stack. On the server a LIFO strategy can be used to pass messages up the stack.
*  A more sophisticated ordering callback strategy dispatches concrete interceptors in priority order. In this strategy an application passes a priority parameter when registering a concrete interceptor with a dispatcher. When propagating an event, the dispatcher invokes interceptors with higher priorities first.
*  Another sophisticated callback strategy is based on the Chain of Responsibility pattern. If a concrete interceptor can handle the event that its dispatcher delivers, it returns the corresponding result. Otherwise it can return a special value or raise an exception to indicate it is not interested in intercepting the event. In this case the callback dispatching mechanism asks the next interceptor in the chain to handle the event. This progression stops after one of the interceptors handles the event.
<span style="color: #ff0000;">7. Implement the concrete interceptors.</span>

在这个模式里,很多时候我们老是跟<a href="http://www.dofactory.com/Patterns/PatternChain.aspx">Chain Of Responsibility Design Pattern</a>混淆.这里有个重大的不同点就是: Concrete Interceptor他只负责处理信息,不负责转向(forward),forward的工作是交由Dispatcher来做. 而Chain Of Responsibilty里面,具体的Concrete Handler不但负责处理,而且还负责转向.

参考资料
----------------
&lt;&lt;Pattern oriented software architecture Volume 2&gt;&gt;
http://www.dofactory.com/Patterns/PatternChain.aspx

</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>24</wp:post_id>
		<wp:post_date>2007-07-14 08:10:31</wp:post_date>
		<wp:post_date_gmt>2007-07-14 08:10:31</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>jeff%e8%af%b4%e6%a8%a1%e5%bc%8f-interceptor%e6%a8%a1%e5%bc%8f</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="chinese"><![CDATA[Chinese]]></category>
		<category domain="post_tag" nicename="design-patterns"><![CDATA[Design Patterns]]></category>
		<category domain="category" nicename="java"><![CDATA[Java]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>spaces_a43755b404d273dfcedbd14ccb4f51ab_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[http://cid-04001c604af3f011.users.api.live.net/Users(288261576051650577)/Blogs('4001C604AF3F011!102')/Entries('4001C604AF3F011!459')?authkey=X13wC75MXT0%24]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_64aa4e1739db88bfdad2fa0c6061e333</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_efficient_related_posts</wp:meta_key>
			<wp:meta_value><![CDATA[a:8:{i:0;a:4:{s:2:"ID";s:1:"6";s:10:"post_title";s:53:"[CXF]CXF中的两个概念:Invoker & PhaseInterceptor";s:7:"matches";s:1:"1";s:9:"permalink";s:121:"http://jeff.familyyu.net/2007/08/26/cxfcxf%e4%b8%ad%e7%9a%84%e4%b8%a4%e4%b8%aa%e6%a6%82%e5%bf%b5invoker-phaseinterceptor/";}i:1;a:4:{s:2:"ID";s:2:"10";s:10:"post_title";s:61:"[CXF]CXF当中的Configuration -- Spring2.0可扩展XML配置";s:7:"matches";s:1:"1";s:9:"permalink";s:141:"http://jeff.familyyu.net/2007/08/23/cxfcxf%e5%bd%93%e4%b8%ad%e7%9a%84configuration-spring2-0%e5%8f%af%e6%89%a9%e5%b1%95xml%e9%85%8d%e7%bd%ae/";}i:2;a:4:{s:2:"ID";s:2:"19";s:10:"post_title";s:38:"[CXF]CXF中DynamicProxy模式的应用";s:7:"matches";s:1:"1";s:9:"permalink";s:109:"http://jeff.familyyu.net/2007/07/15/cxfcxf%e4%b8%addynamicproxy%e6%a8%a1%e5%bc%8f%e7%9a%84%e5%ba%94%e7%94%a8/";}i:3;a:4:{s:2:"ID";s:2:"23";s:10:"post_title";s:46:"[CXF]CXF中Collection Parameter模式的应用";s:7:"matches";s:1:"1";s:9:"permalink";s:117:"http://jeff.familyyu.net/2007/07/14/cxfcxf%e4%b8%adcollection-parameter%e6%a8%a1%e5%bc%8f%e7%9a%84%e5%ba%94%e7%94%a8/";}i:4;a:4:{s:2:"ID";s:2:"22";s:10:"post_title";s:42:"[CXF]CXF中的AbstractFactory模式应用.";s:7:"matches";s:1:"1";s:9:"permalink";s:112:"http://jeff.familyyu.net/2007/07/14/cxfcxf%e4%b8%ad%e7%9a%84abstractfactory%e6%a8%a1%e5%bc%8f%e5%ba%94%e7%94%a8/";}i:5;a:4:{s:2:"ID";s:2:"20";s:10:"post_title";s:34:"[CXF]CXF中的Observer模式应用";s:7:"matches";s:1:"1";s:9:"permalink";s:105:"http://jeff.familyyu.net/2007/07/12/cxfcxf%e4%b8%ad%e7%9a%84observer%e6%a8%a1%e5%bc%8f%e5%ba%94%e7%94%a8/";}i:6;a:4:{s:2:"ID";s:2:"37";s:10:"post_title";s:29:"Jeff说模式 - Vistor 模式";s:7:"matches";s:1:"1";s:9:"permalink";s:94:"http://jeff.familyyu.net/2006/09/03/jeff%e8%af%b4%e6%a8%a1%e5%bc%8f-vistor-%e6%a8%a1%e5%bc%8f/";}i:7;a:4:{s:2:"ID";s:3:"124";s:10:"post_title";s:23:"Design Pattern Thinking";s:7:"matches";s:1:"1";s:9:"permalink";s:60:"http://jeff.familyyu.net/2005/06/13/design-pattern-thinking/";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_relation_threshold</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_4eceb526c72b7bf6c327fb1788a29650</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>从内到外的看Web Service（上)</title>
		<link>http://jeff.familyyu.net/2007/07/02/%e4%bb%8e%e5%86%85%e5%88%b0%e5%a4%96%e7%9a%84%e7%9c%8bweb-service%ef%bc%88%e4%b8%8a/</link>
		<pubDate>Mon, 02 Jul 2007 18:13:38 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang1.wordpress.com/2007/07/02/%e4%bb%8e%e5%86%85%e5%88%b0%e5%a4%96%e7%9a%84%e7%9c%8bweb-service%ef%bc%88%e4%b8%8a</guid>
		<description></description>
		<content:encoded><![CDATA[<div id="msgcns!4001C604AF3F011!448" class="bvMsg">我之前是做企业应用的,从一毕业就开始做..那么,当你刚接触web service的时候,你可能会有一头雾水的感觉,我当时很渴望说有个人能跟我说下他们之间的联系,是怎么关联起来的. 下面我尝试着来讲讲，前段时间我一兄弟也叫我说,跟他说说我做的是什么东西.<br /><br />先从Servlet说起. 比如说我写了一个servlet,然后启动了servlet container (tomcat),那么，你就可以通过这个servlet的url来访问这个servlet. 这里面呢,其实就建立了一个程序的调用,或者说资源的共享方式. 比如说,我的这个servlet提供了资料数据库. 那么,当我在另外一台机器通过浏览器输入这个servlet的url只要带上正确的用户名和密码,就可以获取到资料.至于获取资料的逻辑,我们需要在servlet方法的doPost() 或者是 doGet()的方法里面完成,然后通过HttpResponse把数据返回给客户端. 在这里,我们通过了HttpServletRequest/HttpServletResponse来实现了数据的传输. 在Web Service的世界里,有个Transport的概念.我们这个所用的就是HTTP Transport,还有JMS Transport.<br /><br />JAX-WS的前身,叫做JAX-RPC,也就是Java API XML Remote Procedure Call. 就是说用xml的方式来进行远程方法调用. 怎么理解呢？ 我们先来看看著名的Struts是怎么来实现方法的调用. <br /><br />1. 我们会有个struts-config.xml来配置那个url是具体调用那个Java的方法.那么当我们收到这个url的时候呢,我们就根据这个mapping来找到他说要调用的方法,然后把参数传给这个方法,运行完，再通过HttpServletResponse传给客户端.  <br />2. 那么在xml-rpc的世界里,我们并不存在这样的一个xml来对应mapping关系,而且,一般对于web service来说,他就提供一个通过的servlet url,比如说(http://localhost:9000),至于什么样的消息该调用什么样的方法,都没有一个配置文件来描述. 再来回顾下我们刚刚说讲的servlet例子,我们刚刚用Http Transport都是以Request过去的是一个string,回来的也是一个String. 在web-service的世界里,我们用的都是xml. 也就是说我从Http Request发过去的是一个xml文件,我从Http Response接回来的也是一个xml. <br />3. 下面假设你启动了一个tomcat,建立一个servlet. 从浏览器端发过来了一段xml代码段,这个代码段呢包含了两个东西.<br />   1) 你所要调用的后台哪个方法.<br />   2) 你所要调用方法的参数.<br />  正如我们之前所说的,我们并没有存在一个全局的struts-config.xml文件来描述什么样的url该调用什么样的method,那么我们就需要把这些信息包含在我们的xml里.<br />4. 当我们的servlet接收到这个xml包的时候,他就需要解析这个xml文件,分析出他所要调用的Java method,然后把这些参数传递传给这个方法,调用这个方法,获取到结果. 然后呢,我们需要重新把这个结果呢组装成xml的格式,用Http Response发给客户端.<br />5. 客户端拿到这个Http Response的xml结果,他也可以解析这段xml,然后来取得到结果. <br />以前上,就是最最基本的xml-rpc.<br /><br />说着说着,感觉这个调用过程很象Ajax的调用过程.回顾下Ajax的调用过程.<br />1) 通过xmlHttpRequest发送一段xml(一般来说这个xml就是一些要调用方法的参数),发送到一个url,这个url可以是一个jsp,也可以是一个servlet. 然后就分析这段xml,并且调用方法,通过xmlHttpResponse的方法返回一段xml给刚刚的客户端.<br />2) 客户端拿到这个xml后(或者更轻量级的json格式的数据),分析数据,然后通过javascript的方法来更改页面Html的内容.<br /><br />观察下，我们可以看出来主要的区别在于一般来说Ajax的xml是只包含调用的参数,不包含具体调用哪个方法的信息.(当然了,你说也可以那么做，我说的是大多数情况下.)..<br /><br />再回到我们刚刚说讲的最简单的xml-rpc.你看到这可能会说.这怎么会是xml-rpc,跟书上写的,都不一样..我这里所说的是最基本的.其实很多东西都是我们慢慢演化来的.<br /><br />我以前说过,web service这东西主要是为了application和application之间沟通,并不象我们刚刚最早说B/S模式访问. 那么,既然是application -&gt; application,就必须存在着编程语言. 而且我们这个时候也不能管这两台机器一台叫client,一台叫server,因为他们是并级的.有可能application1 -&gt; application2 -&gt; application1. 所以,这个时候,我们给它起了个名字叫做Endpoint.<br />在这里,我假设这两个application刚好用的都是Java语言.(因为我就对Java语言最熟悉 ;-) )... 好了,因为我们给Http Transport的都是xml,那么,怎么从我们Java参数对象 -&gt; 我们所需要的xml文件呢? 于是乎,我们就有了JAXB,XmlBean的东西,这些东西主要就是负责从Java Object &lt;-&gt; Xml 之间的互转. 在web service的术语里,我们叫这个过程是marshall和unmarshall. 如果是用JAXB来负责Java Object &lt;-&gt; xml的,我们就说是data-binding的方式是jaxb.<br /><br />既然我们传给Transport的都是xml,我们需要对这个xml格式有个规定,也就是说,让client和server端他们懂得怎么去解析这个xml文件来获取到说要的调用方法以及调用方法的参数.. 于是就有了著名的SOAP规范..我们管这个xml的规范叫做binding. 比如有soap-binding, xml-binding等等.<br /><br />我们总结下从一个endpoint1到另外一个endpoint2的调用过程.<br />1) 在endpoint1里, 通过JAXB把Java Parameter Object -&gt; xml.<br />2) 把这个xml -&gt; SOAP规范的xml.<br />3) 发送这个xml到endpoint2通过Transport.<br />4) endpoint2接受到xml后,<br />5) 根据SOAP的xml,解析出来需要调用的方法名,传过来的参数.<br />6) 根据参数，方法名调用方法，获取到结果。<br />7) 把结果通过JAXB unmarshall成为一个xml.<br />8) 把xml变成一个SOAP规范的xml通过Transport传给endpoint1.<br />9) endpoint1根据传递回来的xml,用JAXB unmarshall成 Java 对象,然后获取到所需要的结果.<br /><br />以上就是最简单的,最基本的,最核心的一个调用过程. 其他的功能都是基于这个core,做的. <br /><br /><br /><br /><br /></div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>25</wp:post_id>
		<wp:post_date>2007-07-02 18:13:38</wp:post_date>
		<wp:post_date_gmt>2007-07-02 18:13:38</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e4%bb%8e%e5%86%85%e5%88%b0%e5%a4%96%e7%9a%84%e7%9c%8bweb-service%ef%bc%88%e4%b8%8a</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="web-service"><![CDATA[Web Service]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>spaces_a43755b404d273dfcedbd14ccb4f51ab_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[http://cid-04001c604af3f011.users.api.live.net/Users(288261576051650577)/Blogs('4001C604AF3F011!102')/Entries('4001C604AF3F011!448')?authkey=X13wC75MXT0%24]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Web Services平台的架构</title>
		<link>http://jeff.familyyu.net/2007/07/03/web-services%e5%b9%b3%e5%8f%b0%e7%9a%84%e6%9e%b6%e6%9e%84/</link>
		<pubDate>Tue, 03 Jul 2007 15:52:39 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang1.wordpress.com/2007/07/03/web-services%e5%b9%b3%e5%8f%b0%e7%9a%84%e6%9e%b6%e6%9e%84</guid>
		<description></description>
		<content:encoded><![CDATA[<div id="msgcns!4001C604AF3F011!449" class="bvMsg">上一篇,我写了最简单的一个web service的调用过程.这一篇,我主要是参考和翻译&lt;SOA using java web service&gt;一书中的&lt;Web Service Platform Architecture&gt;的这一节,因为我觉得这一节对于整个web service的架构理解是比较重要的.同时也可以是对我上一篇文章的细化.<br /><br />做为任何一个web service开发工具包,象Apache Axis, XFire, Apache CXF等,都会提供以下三个功能模块.<br /><ol><li>Invocation System<br /><li>Serialization System (这里包括了Serialization and deserialization)<br /><li>Deployment System</ol>我们接下来一个一个来看.<br />1. Invocation System<br />这里的调用(Invocation)分为服务器端和客户端的调用,先来看下服务器端的调用过程.<br /><br />Server-Side.<br />1)  通过Transport(HTTP or JMS)获取到SOAP信息.<br />2)  在解析SOAP信息前调用Handlers(比如说处理SOAP信息头的Handler)<br />3)  通过解析SOAP信息,判断出是调用WSDL当中的哪个Operation.<br />4)  根据WSDL当中的Operation,决定该调用后台的那个Java方法(这里假设服务器端的语言也是Java). 一般把这个过程叫做Dispatching.<br />5) 把SOAP信息传递给Serialization系统,把xml里面的参数数据转化成Java对象参数,传给要调用的后台方法.<br />6) 调用后台方法,根据我们传递的参数. 获取方法执行结果(Java Object).<br />7) 把结果传给Serialization系统,把执行结果转成xml.<br />8) 把xml包装成SOAP Message传递给Transport层.让Transport层负责传递给客户端.<br /><br />Client-side<br />1) 客户端传递所要调用的方法,调用方法所需要的参数.把他传递给Serialization系统.<br />2) Serialization系统根据WSDL中所定义的XSD数据类型转成XML.<br />3) 根据所对应的WSDL文件,把XML转成相对应的SOAP信息.<br />4) 调用一些pre-process message的Handlers(比如设置SOAP信息头,或者所保存SOAP信息等).<br />5) 把SOAP信息传递给Transport层,让他传递给所对应的服务端.<br />.......................<br />6) 从Transport层接收到服务端传递回来的SOAP信息.<br />7) 把SOAP信息传递给Serialization系统,把对应的XML转成相对应的Java 对象.<br />8) 根据Java对象,获取到执行完方法后所得到的结果.<br /><br />2. Serialization System<br />1) 从Web service Proxy里获取到Parameters. (也就是要后台执行方法的参数).<br />2) 把所对应的参数对象转成相对应的xsd里面定义的数据类型.<br />3) 根据wsdl里面定义的binding方式,转成相对应的xml.<br />......<br />4) 通过的根据xsd里面的数据,wsdl定义的binding,把xml转成相对应的Java对象.<br /><br />3. Deployment System<br />Deployment System主要完成以下的一些功能:<br />1) 发布wsdl.<br />2) 配置soap Handlers.<br />3) 配置endpoint的Listener监听器.<br />.....<br /></div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>26</wp:post_id>
		<wp:post_date>2007-07-03 15:52:39</wp:post_date>
		<wp:post_date_gmt>2007-07-03 15:52:39</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>web-services%e5%b9%b3%e5%8f%b0%e7%9a%84%e6%9e%b6%e6%9e%84</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="web-service"><![CDATA[Web Service]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>spaces_a43755b404d273dfcedbd14ccb4f51ab_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[http://cid-04001c604af3f011.users.api.live.net/Users(288261576051650577)/Blogs('4001C604AF3F011!102')/Entries('4001C604AF3F011!449')?authkey=X13wC75MXT0%24]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Database setup Tips</title>
		<link>http://jeff.familyyu.net/2007/06/30/database-setup-tips/</link>
		<pubDate>Sat, 30 Jun 2007 06:59:22 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang1.wordpress.com/2007/06/30/database-setup-tips</guid>
		<description></description>
		<content:encoded><![CDATA[<div id="msgcns!4001C604AF3F011!446" class="bvMsg">前两周写的.....&nbsp;

• Oracle 817 can not be set up using domain account, you'd better use the administrator account for local machine.
• Once the error shows " Shared memory realm doesn't exist", it means Oracle HTTP service doesn't work right.
• If you find "java error" in Oracle 817, it means the JDK in apache folder is out-of-date, you need to download the latest JDK and replace that folder, and then, if it is possible, you need to recreate the database that you've already existed.
• If you want to install SQL Server 2000, and found they are some errors in it, most of situation, what you need to do is to setup the SQL Server database Patch.
• Install Oracle10g, after finished the database setup. Add a listener if it doesn't exist; Add a new database, and then Add a local net service through network assistant.

</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>27</wp:post_id>
		<wp:post_date>2007-06-30 06:59:22</wp:post_date>
		<wp:post_date_gmt>2007-06-30 06:59:22</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>database-setup-tips</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="chinese"><![CDATA[Chinese]]></category>
		<category domain="category" nicename="others"><![CDATA[Others]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>spaces_a43755b404d273dfcedbd14ccb4f51ab_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[http://cid-04001c604af3f011.users.api.live.net/Users(288261576051650577)/Blogs('4001C604AF3F011!102')/Entries('4001C604AF3F011!446')?authkey=X13wC75MXT0%24]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>XML的解析方式</title>
		<link>http://jeff.familyyu.net/2007/06/07/xml%e7%9a%84%e8%a7%a3%e6%9e%90%e6%96%b9%e5%bc%8f/</link>
		<pubDate>Thu, 07 Jun 2007 17:34:51 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang1.wordpress.com/2007/06/07/xml%e7%9a%84%e8%a7%a3%e6%9e%90%e6%96%b9%e5%bc%8f</guid>
		<description></description>
		<content:encoded><![CDATA[<div id="msgcns!4001C604AF3F011!436" class="bvMsg"><font size="2">做web service这块,你就不得不跟一堆XML进行打交道,因为我们采用的是Java作为服务的实现,那么就一定会存在一个问题,那就是JAVA解析XML的问题,其实这是一个大的问题,因为解析做得不好的话,很大程度上影响了性能. 这就是为什么会有号称XFire是SOAP栈堆解析最快的框架,其中有一个原因是它使用了stax来解析XML..<br /><br />下面摘录些网络上的比较：(详细的等过几天看完资料,再写总结)<br /></font><font size="2"><br /></font><font size="2"><strong>1：DOM <br /><br /></strong>　　DOM 是用与平台和语言无关的方式表示 XML 文档的官方 W3C
标准。DOM
是以层次结构组织的节点或信息片断的集合。这个层次结构允许开发人员在树中寻找特定信息。分析该结构通常需要加载整个文档和构造层次结构，然后才能做任何
工作。由于它是基于信息层次的，因而 DOM 被认为是基于树或基于对象的。DOM 以及广义的基于树的处理具有几个优点。 <br /><br />　　首先，由于树在内存中是持久的，因此可以修改它以便应用程序能对数据和结构作出更改。它还可以在任何时候在树中上下导航，而不是像 SAX 那样是一次性的处理。DOM 使用起来也要简单得多。 <br /><br />　　另一方面，对于特别大的文档，解析和加载整个文档可能很慢且很耗资源，因此使用其他手段来处理这样的数据会更好。这些基于事件的模型，比如 SAX。 <br /><br />　　<b>2:SAX</b> <br /><br />　
　这种处理的优点非常类似于流媒体的优点。分析能够立即开始，而不是等待所有的数据被处理。而且，由于应用程序只是在读取数据时检查数据，因此不需要将数
据存储在内存中。这对于大型文档来说是个巨大的优点。事实上，应用程序甚至不必解析整个文档；它可以在某个条件得到满足时停止解析。一般来说，SAX
还比它的替代者 DOM 快许多。 <br /><br />　　<b>3:选择 DOM 还是选择 SAX ？</b> <br /><br />　　对于需要自己编写代码来处理 XML 文档的开发人员来说，选择 DOM 还是 SAX 解析模型是一个非常重要的设计决策。 <br /><br />　　DOM 采用建立树形结构的方式访问 XML 文档，而 SAX 采用的事件模型。 <br /><br />　
　DOM 解析器把 XML 文档转化为一个包含其内容的树，并可以对树进行遍历。用 DOM
解析模型的优点是编程容易，开发人员只需要调用建树的指令，然后利用navigation
APIs访问所需的树节点来完成任务。可以很容易的添加和修改树中的元素。然而由于使用 DOM 解析器的时候需要处理整个 XML
文档，所以对性能和内存的要求比较高，尤其是遇到很大的 XML 文件的时候。由于它的遍历能力，DOM 解析器常用于 XML
文档需要频繁的改变的服务中。 <br /><br />　　SAX 解析器采用了基于事件的模型，它在解析 XML
文档的时候可以触发一系列的事件，当发现给定的tag的时候，它可以激活一个回调方法，告诉该方法制定的标签已经找到。SAX
对内存的要求通常会比较低，因为它让开发人员自己来决定所要处理的tag。特别是当开发人员只需要处理文档中所包含的部分数据时，SAX
这种扩展能力得到了更好的体现。但用 SAX 解析器的时候编码工作会比较困难，而且很难同时访问同一个文档中的多处不同数据。    　<b>4:JDOM</b> <br /><br />　
　JDOM的目的是成为 Java 特定文档模型，它简化与 XML 的交互并且比使用 DOM 实现更快。由于是第一个 Java
特定模型，JDOM 一直得到大力推广和促进。正在考虑通过“Java 规范请求 JSR-102”将它最终用作“Java 标准扩展”。从 2000
年初就已经开始了 JDOM 开发。 <br /><br />　　JDOM 与 DOM 主要有两方面不同。首先，JDOM 仅使用具体类而不使用接口。这在某些方面简化了 API，但是也限制了灵活性。第二，API 大量使用了 Collections 类，简化了那些已经熟悉这些类的 Java 开发者的使用。 <br /><br />　
　JDOM 文档声明其目的是“使用 20%（或更少）的精力解决 80%（或更多）Java/XML 问题”（根据学习曲线假定为
20%）。JDOM 对于大多数 Java/XML 应用程序来说当然是有用的，并且大多数开发者发现 API 比 DOM 容易理解得多。JDOM
还包括对程序行为的相当广泛检查以防止用户做任何在 XML 中无意义的事。然而，它仍需要您充分理解 XML
以便做一些超出基本的工作（或者甚至理解某些情况下的错误）。这也许是比学习 DOM 或 JDOM 接口都更有意义的工作。 <br /><br />　　
JDOM 自身不包含解析器。它通常使用 SAX2 解析器来解析和验证输入 XML 文档（尽管它还可以将以前构造的 DOM
表示作为输入）。它包含一些转换器以将 JDOM 表示输出成 SAX2 事件流、DOM 模型或 XML 文本文档。JDOM 是在 Apache
许可证变体下发布的开放源码。 <br /><br />　　<b>5: DOM4J</b> <br /><br />　　虽然 DOM4J
代表了完全独立的开发结果，但最初，它是 JDOM 的一种智能分支。它合并了许多超出基本 XML 文档表示的功能，包括集成的 XPath
支持、XML Schema 支持以及用于大文档或流化文档的基于事件的处理。它还提供了构建文档表示的选项，它通过 DOM4J API 和标准
DOM 接口具有并行访问功能。从 2000 下半年开始，它就一直处于开发之中。 <br /><br />　　为支持所有这些功能，DOM4J
使用接口和抽象基本类方法。DOM4J 大量使用了 API 中的 Collections
类，但是在许多情况下，它还提供一些替代方法以允许更好的性能或更直接的编码方法。直接好处是，虽然 DOM4J 付出了更复杂的 API
的代价，但是它提供了比 JDOM 大得多的灵活性。 <br /><br />　　在添加灵活性、XPath 集成和对大文档处理的目标时，DOM4J
的目标与 JDOM 是一样的：针对 Java 开发者的易用性和直观操作。它还致力于成为比 JDOM 更完整的解决方案，实现在本质上处理所有
Java/XML 问题的目标。在完成该目标时，它比 JDOM 更少强调防止不正确的应用程序行为。 <br /><br />　　DOM4J
是一个非常非常优秀的Java XML
API，具有性能优异、功能强大和极端易用使用的特点，同时它也是一个开放源代码的软件。如今你可以看到越来越多的 Java 软件都在使用
DOM4J 来读写 XML，特别值得一提的是连 Sun 的 JAXM 也在用 DOM4J。 <br /><br />　　<b>6:总述</b> <br /><br />　
　JDOM 和 DOM 在性能测试时表现不佳，在测试 10M 文档时内存溢出。在小文档情况下还值得考虑使用 DOM 和 JDOM。虽然
JDOM 的开发者已经说明他们期望在正式发行版前专注性能问题，但是从性能观点来看，它确实没有值得推荐之处。另外，DOM
仍是一个非常好的选择。DOM 实现广泛应用于多种编程语言。它还是许多其它与 XML 相关的标准的基础，因为它正式获得 W3C
推荐（与基于非标准的 Java 模型相对），所以在某些类型的项目中可能也需要它（如在 javascript 中使用 DOM）。 <br /><br />　　SAX表现较好，这要依赖于它特定的解析方式。一个 SAX 检测即将到来的XML流，但并没有载入到内存（当然当XML流被读入时，会有部分文档暂时隐藏在内存中）。 <br /><br />　　无疑，DOM4J是最好的，目前许多开源项目中大量采用 DOM4J，例如大名鼎鼎的 Hibernate 也用 DOM4J 来读取 XML 配置文件。如果不考虑可移植性，那就采用DOM4J吧！ </font><br /></div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>29</wp:post_id>
		<wp:post_date>2007-06-07 17:34:51</wp:post_date>
		<wp:post_date_gmt>2007-06-07 17:34:51</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>xml%e7%9a%84%e8%a7%a3%e6%9e%90%e6%96%b9%e5%bc%8f</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="java"><![CDATA[Java]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>spaces_a43755b404d273dfcedbd14ccb4f51ab_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[http://cid-04001c604af3f011.users.api.live.net/Users(288261576051650577)/Blogs('4001C604AF3F011!102')/Entries('4001C604AF3F011!436')?authkey=X13wC75MXT0%24]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>65</wp:comment_id>
			<wp:comment_author><![CDATA[KinQing]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2007-06-11 15:43:29</wp:comment_date>
			<wp:comment_date_gmt>2007-06-11 15:43:29</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[可以看看下面这篇文章,几种工具的性能评测:http://www.ibm.com/developerworks/cn/xml/x-injava/]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>[CXF]CXF中重要概念: Service Model</title>
		<link>http://jeff.familyyu.net/2007/06/12/cxfcxf%e4%b8%ad%e9%87%8d%e8%a6%81%e6%a6%82%e5%bf%b5-service-model/</link>
		<pubDate>Tue, 12 Jun 2007 17:25:19 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang1.wordpress.com/2007/06/12/cxfcxf%e4%b8%ad%e9%87%8d%e8%a6%81%e6%a6%82%e5%bf%b5-service-model</guid>
		<description></description>
		<content:encoded><![CDATA[<div id="msgcns!4001C604AF3F011!439" class="bvMsg">推荐我同事<a href="http://willem.bokeland.com/">willem</a>写的几篇关于CXF的文章,里面阐述了一个很重要的概念ServiceModel.(而且我觉得他写得很清晰.;-) )<a href="http://willem.bokeland.com/blog/794/6089/2007/06/05/199825">
</a>
<ul>
	<li><a href="http://willem.bokeland.com/blog/794/6089/2007/06/05/199825">我眼中的CXF之Service Model</a></li>
	<li><a href="http://willem.bokeland.com/blog/794/6089/2007/05/20/192870">何为CXF</a></li>
	<li><a href="http://willem.bokeland.com/blog/794/3110/2006/10/22/75588">JAX-WS</a></li>
</ul>
这里,为什么会存在一个Service Model呢,主要是因为它可以有很多个front-end,比如说 JAX-WS,simple(POJO类型的), JS etc,所以基于这种可变的,我们需要抽象出一个稳定的,这样,CXF内部runtime的程序打交道都是跟Service Model,它不需要去管前端是有JAX-WS or POJO的..  其实,我到是觉得可以把Service Model看做是meta data 管理器,因为如果你想要所有的元数据,比如说wsdl的信息啊等等的,你都可以从这取到.

</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>30</wp:post_id>
		<wp:post_date>2007-06-12 17:25:19</wp:post_date>
		<wp:post_date_gmt>2007-06-12 17:25:19</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>cxfcxf%e4%b8%ad%e9%87%8d%e8%a6%81%e6%a6%82%e5%bf%b5-service-model</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="chinese"><![CDATA[Chinese]]></category>
		<category domain="post_tag" nicename="cxf"><![CDATA[CXF]]></category>
		<category domain="category" nicename="soa"><![CDATA[SOA]]></category>
		<category domain="category" nicename="web-service"><![CDATA[Web Service]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>spaces_a43755b404d273dfcedbd14ccb4f51ab_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[http://cid-04001c604af3f011.users.api.live.net/Users(288261576051650577)/Blogs('4001C604AF3F011!102')/Entries('4001C604AF3F011!439')?authkey=X13wC75MXT0%24]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_efficient_related_posts</wp:meta_key>
			<wp:meta_value><![CDATA[a:8:{i:0;a:4:{s:2:"ID";s:3:"272";s:10:"post_title";s:40:"Apache CXF Web Service Development book.";s:7:"matches";s:1:"1";s:9:"permalink";s:76:"http://jeff.familyyu.net/2010/02/20/apache-cxf-web-service-development-book/";}i:1;a:4:{s:2:"ID";s:3:"167";s:10:"post_title";s:30:"IMS rolled out its 0.1 version";s:7:"matches";s:1:"1";s:9:"permalink";s:67:"http://jeff.familyyu.net/2007/11/13/ims-rolled-out-its-0-1-version/";}i:2;a:4:{s:2:"ID";s:3:"146";s:10:"post_title";s:29:"CXF ServiceInfo Model diagram";s:7:"matches";s:1:"1";s:9:"permalink";s:66:"http://jeff.familyyu.net/2007/09/06/cxf-serviceinfo-model-diagram/";}i:3;a:4:{s:2:"ID";s:1:"6";s:10:"post_title";s:53:"[CXF]CXF中的两个概念:Invoker & PhaseInterceptor";s:7:"matches";s:1:"1";s:9:"permalink";s:121:"http://jeff.familyyu.net/2007/08/26/cxfcxf%e4%b8%ad%e7%9a%84%e4%b8%a4%e4%b8%aa%e6%a6%82%e5%bf%b5invoker-phaseinterceptor/";}i:4;a:4:{s:2:"ID";s:2:"10";s:10:"post_title";s:61:"[CXF]CXF当中的Configuration -- Spring2.0可扩展XML配置";s:7:"matches";s:1:"1";s:9:"permalink";s:141:"http://jeff.familyyu.net/2007/08/23/cxfcxf%e5%bd%93%e4%b8%ad%e7%9a%84configuration-spring2-0%e5%8f%af%e6%89%a9%e5%b1%95xml%e9%85%8d%e7%bd%ae/";}i:5;a:4:{s:2:"ID";s:2:"11";s:10:"post_title";s:26:"[CXF]CXF中重要概念Bus";s:7:"matches";s:1:"1";s:9:"permalink";s:91:"http://jeff.familyyu.net/2007/08/22/cxfcxf%e4%b8%ad%e9%87%8d%e8%a6%81%e6%a6%82%e5%bf%b5bus/";}i:6;a:4:{s:2:"ID";s:2:"13";s:10:"post_title";s:34:"[CXF]CXF中ServiceInfo的结构图";s:7:"matches";s:1:"1";s:9:"permalink";s:99:"http://jeff.familyyu.net/2007/08/16/cxfcxf%e4%b8%adserviceinfo%e7%9a%84%e7%bb%93%e6%9e%84%e5%9b%be/";}i:7;a:4:{s:2:"ID";s:2:"17";s:10:"post_title";s:30:"[CXF]一句话概括Apache CXF";s:7:"matches";s:1:"1";s:9:"permalink";s:95:"http://jeff.familyyu.net/2007/07/16/cxf%e4%b8%80%e5%8f%a5%e8%af%9d%e6%a6%82%e6%8b%acapache-cxf/";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_relation_threshold</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>简说Web Service</title>
		<link>http://jeff.familyyu.net/2007/06/02/%e7%ae%80%e8%af%b4web-service/</link>
		<pubDate>Sat, 02 Jun 2007 16:07:51 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang1.wordpress.com/2007/06/02/%e7%ae%80%e8%af%b4web-service</guid>
		<description></description>
		<content:encoded><![CDATA[<div id="msgcns!4001C604AF3F011!435" class="bvMsg"><font size="2">是时候也该写写web service了,我记得刚来的时候,都在看书,看&lt;&lt;Understanding Web Service&gt;&gt;等,书里面介绍的东西都比较抽象,说实话,那时候看了不少资料,但是还是不大清楚,可能是一下子看了太多的东西,而且没有一个整体的认识所导致的结果.<br />Web service就是Application和Application之间打交道,比如所我用Java的程序,我想调用dotnet的系统...也就是所可以programatically访问你的系统,这样就要解决语言无关的问题.那么,要解决这个问题,xml的技术是最合适不过的,因为xml他是一个self-descriped的语言,而且是个很通用的数据交换标准.<br />要知道Web Service,那么你一定要知道WSDL,SOAP的规范.<br />先说WSDL吧,刚刚说过,我们用xml来作为程序之间数据的交换,那么对于每个应用系统来说,你总得有些contract,什么意思呢?就是说,你要从某个系统获得到某个结果,那么你一定要知道这个你需要传递的参数,你说传递回来的结果等等的. 那么这些东西总得用地方描述啊.这些东西呢,就是要放在WSDL的文件里. <br />WSDL分成两个部分,一个部分是Logical的,也就是我们刚刚上面所说的,还有一个部分叫protocol,里面呢包含了xml数据的绑定方式,比如说SOAP binding的话,他规范了这个xml报文需要什么的格式,比如说有&lt;Header&gt;...&lt;/Header&gt;等等的,还有呢也定义了传输方式,你从一个地方要到另外一个地方,你一定要定义一个传输方式,比如有HTTP,SMTP,FTP,JMS等等的..<br />在WSDL Logical部分,里面有分为Types,Message,Operation,Port Type. Types就是定义传输过程中xml的数据类型,比如说参数的数据类型啊,返回的数据类型啊. Message就是</font><font size="2">an abstract, typed definition of the data being
        communicated. </font><font size="2">Port Type呢,就是java语言中的Interface定义了需要几个参数,返回什么结果.<br /><br />其实Web Service的东西很多,有巨多的规范等等,但我现在开始缓过来的是,接下去的我说要打交道的,一般都是跟xml有关系,因为我们传递的是xml数据格式,用的是xsd的数据类型...<br />用Web service做东西,我老感觉有MDA的感觉,比如说,我只要写个WSDL,你可以用CXF,AXIS,XFIRE等工具来生成相对应的Java Code等等....<br /><br /></font><font size="2"><span style="font-family:宋体,Simsun;"><font size="2"><br /></font><br /></span></font></div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>31</wp:post_id>
		<wp:post_date>2007-06-02 16:07:51</wp:post_date>
		<wp:post_date_gmt>2007-06-02 16:07:51</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e7%ae%80%e8%af%b4web-service</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="web-service"><![CDATA[Web Service]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>spaces_a43755b404d273dfcedbd14ccb4f51ab_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[http://cid-04001c604af3f011.users.api.live.net/Users(288261576051650577)/Blogs('4001C604AF3F011!102')/Entries('4001C604AF3F011!435')?authkey=X13wC75MXT0%24]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Five Stages of Dealing with Web Services</title>
		<link>http://jeff.familyyu.net/2007/06/17/five-stages-of-dealing-with-web-services/</link>
		<pubDate>Sun, 17 Jun 2007 17:22:10 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang1.wordpress.com/2007/06/17/five-stages-of-dealing-with-web-services</guid>
		<description></description>
		<content:encoded><![CDATA[<div id="msgcns!4001C604AF3F011!445" class="bvMsg"><font size="4"><span style="font-family:Garamond,Times,Serif,Simsun;color:rgb(255,0,0);">Dave Podnar’s Five Stages of Dealing with Web Services</span><br style="font-family:Garamond,Times,Serif,Simsun;color:rgb(255,0,0);" /><span style="font-family:Garamond,Times,Serif,Simsun;color:rgb(255,0,0);">1. Denial—It’s Simple Object Access Protocol, right?</span><br style="font-family:Garamond,Times,Serif,Simsun;color:rgb(255,0,0);" /><span style="font-family:Garamond,Times,Serif,Simsun;color:rgb(255,0,0);">2. Over Involvement—OK, I’ll read the SOAP, WSDL, WS-I BP, JAX-RPC, SAAJ,JAX-P, ... specs. Next, I’ll check the Wiki and finally follow an example showing service and client sides.</span><br style="font-family:Garamond,Times,Serif,Simsun;color:rgb(255,0,0);" /><span style="font-family:Garamond,Times,Serif,Simsun;color:rgb(255,0,0);">3. Anger—I can’t believe those #$%&amp;*@s made it so difficult!</span><br style="font-family:Garamond,Times,Serif,Simsun;color:rgb(255,0,0);" /><span style="font-family:Garamond,Times,Serif,Simsun;color:rgb(255,0,0);">4. Guilt—Everyone is using Web Services, it must be me, I must be missing</span><br style="font-family:Garamond,Times,Serif,Simsun;color:rgb(255,0,0);" /><span style="font-family:Garamond,Times,Serif,Simsun;color:rgb(255,0,0);">something.</span><br style="font-family:Garamond,Times,Serif,Simsun;color:rgb(255,0,0);" /></font><span style="font-family:Lucida Handwriting,Cursive,Simsun;"><font size="4"><span style="color:rgb(255,0,0);font-family:Garamond,Times,Serif,Simsun;">5. Acceptance—It is what it is, Web Services aren’t simple or easy.</span></font><br /><br />摘自<a href="http://www.isbnonline.com/SOA-Using-Java-TM-Web-Services/book/9780130449689/">&lt;SOA: using java web service&gt;</a>书籍. 这是一本07年刚出来的书，怎么说呢？我把他归为:web service 新手(象我这样的.)或者是从事web service开发的(又是我, </span><span style="font-family:Lucida Handwriting,Cursive,Simsun;">;-) </span><span style="font-family:Lucida Handwriting,Cursive,Simsun;">)必读书. 这是我唯一一本看到介绍web service具体框架内容的,而且介绍的很详细，很清楚的一本书. 看到这本书，犹如我当年学设计模式，看到&lt;Design Pattern Explained&gt;书的感觉，虽然不是那么权威，但解释得深入浅出.<br /><br />我现在应该属于2后3上之间了吧..，看来过段时间，我情绪要控制下，因为可能会进入anger状态. ;-),不过看这本书的时候，我得到了稍微一些安慰，作者花了3年时间，得出一个结论: web services aren't simple or easy!!!!!,很大程度上让我找到了安慰(我以前以为就我有这困惑 ：-）），哈哈哈哈....  <br /><br /></span></div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>32</wp:post_id>
		<wp:post_date>2007-06-17 17:22:10</wp:post_date>
		<wp:post_date_gmt>2007-06-17 17:22:10</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>five-stages-of-dealing-with-web-services</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="web-service"><![CDATA[Web Service]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>spaces_a43755b404d273dfcedbd14ccb4f51ab_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[http://cid-04001c604af3f011.users.api.live.net/Users(288261576051650577)/Blogs('4001C604AF3F011!102')/Entries('4001C604AF3F011!445')?authkey=X13wC75MXT0%24]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>69</wp:comment_id>
			<wp:comment_author><![CDATA[宁]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2007-06-30 12:59:58</wp:comment_date>
			<wp:comment_date_gmt>2007-06-30 12:59:58</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[WS背负得责任太大了，以致于协议这么复杂。留个脚印先，有机会一定读读你推荐的书。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Subversion不应该那么用</title>
		<link>http://jeff.familyyu.net/2007/06/16/subversion%e4%b8%8d%e5%ba%94%e8%af%a5%e9%82%a3%e4%b9%88%e7%94%a8/</link>
		<pubDate>Sat, 16 Jun 2007 12:25:52 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang1.wordpress.com/2007/06/16/subversion%e4%b8%8d%e5%ba%94%e8%af%a5%e9%82%a3%e4%b9%88%e7%94%a8</guid>
		<description></description>
		<content:encoded><![CDATA[<div id="msgcns!4001C604AF3F011!441" class="bvMsg">我还记得我刚到achievo的时候,第一次是做Log方法的重构，虽然修改很少，但是涉及到的文件多... 而且当时是用VSS,要一个文件夹一个文件夹提交.. 记得当时好像是不能基于整个project的.
因为我以前是用CVS,所以刚转到VSS的时候，当我checkout一个文件的时候，我以为他顺带获取最新的文件.结果不是（不过这个好像是可以配置的.).. 所以我后来提交的时候，好像覆盖了几个文件,就因为这几个文件,我那天加班，因为我要挨个文件查过去...&nbsp;

我记得在Achievo的2年里,一般提交文件，都是一个文件一个文件提交，因为每个文件要写comment. 这样弄的很麻烦，特别是在1年前转到SVN下，也这么弄，弄得非常麻烦。如果做个大型的重构，简直来说，就很麻烦. 而且，还有个很重要的问题,那就是，如果你发现你这次的提交破坏了build,你可以revert你这次的提交..如果你分成很多次提交的话，就很麻烦，如果次数一多，你就发现根本不可能...所以，无形中失去了一个很重要的功能.

观察Apache下面的CXF项目的开发的时候,提交代码都是以一个项目来提交,comment里面呢，就写提交或者改动的目的或者原因，但没必要写你修改了哪个方法.(这些SVN会告诉你的)...

来新公司之后,我觉得作为软件开发,有几个东西是一定要的.
1. CruiseControl (或者其他的集成工具)
2. Subversion
3. JIRA or Bugzilla etc
4. Maillist
5. WIKI
这里我觉得subversion和cruisecontrol很基本的，一般都会有，JIRA or bugzilla也一般会有。但我想强调的是maillist and WIKI,我觉得这两者给我的感觉特别好，有什么问题在maillist上面问...

</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>33</wp:post_id>
		<wp:post_date>2007-06-16 12:25:52</wp:post_date>
		<wp:post_date_gmt>2007-06-16 12:25:52</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>subversion%e4%b8%8d%e5%ba%94%e8%af%a5%e9%82%a3%e4%b9%88%e7%94%a8</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="chinese"><![CDATA[Chinese]]></category>
		<category domain="category" nicename="scm"><![CDATA[SCM]]></category>
		<category domain="post_tag" nicename="subversion"><![CDATA[subversion]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>spaces_a43755b404d273dfcedbd14ccb4f51ab_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[http://cid-04001c604af3f011.users.api.live.net/Users(288261576051650577)/Blogs('4001C604AF3F011!102')/Entries('4001C604AF3F011!441')?authkey=X13wC75MXT0%24]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_efficient_related_posts</wp:meta_key>
			<wp:meta_value><![CDATA[a:0:{}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_relation_threshold</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>66</wp:comment_id>
			<wp:comment_author><![CDATA[Crystal]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2007-06-16 13:54:03</wp:comment_date>
			<wp:comment_date_gmt>2007-06-16 13:54:03</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[不好意思，上面一不小心按了两次添加。。。嘿嘿]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>67</wp:comment_id>
			<wp:comment_author><![CDATA[Crystal]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2007-06-16 13:53:09</wp:comment_date>
			<wp:comment_date_gmt>2007-06-16 13:53:09</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[哇～～你真是有心呀～～
是不是得让stone george之类的人颁个什么奖给你？哈哈～～
 ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>68</wp:comment_id>
			<wp:comment_author><![CDATA[Crystal]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2007-06-16 13:53:05</wp:comment_date>
			<wp:comment_date_gmt>2007-06-16 13:53:05</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[哇～～你真是有心呀～～
是不是得让stone george之类的人颁个什么奖给你？哈哈～～
 ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>说电视节目</title>
		<link>http://jeff.familyyu.net/2007/06/14/%e8%af%b4%e7%94%b5%e8%a7%86%e8%8a%82%e7%9b%ae/</link>
		<pubDate>Thu, 14 Jun 2007 05:51:03 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang1.wordpress.com/2007/06/14/%e8%af%b4%e7%94%b5%e8%a7%86%e8%8a%82%e7%9b%ae</guid>
		<description></description>
		<content:encoded><![CDATA[<div id="msgcns!4001C604AF3F011!440" class="bvMsg">今天在订阅的"Quote of Day",看到这么一句话,觉得很搞笑:&nbsp;

I find television very educating. Every time somebody turns on the set, I go into the other room and read a book.
- <a href="http://www.quotationspage.com/quote/850.html">Groucho Marx</a>

现在电视频道越来越多,电视节目也是,但是好的电视节目越来越少... 我越来越觉得什么东西都得"淘",什么东西都得搜索了..

</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>34</wp:post_id>
		<wp:post_date>2007-06-14 05:51:03</wp:post_date>
		<wp:post_date_gmt>2007-06-14 05:51:03</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e8%af%b4%e7%94%b5%e8%a7%86%e8%8a%82%e7%9b%ae</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="chinese"><![CDATA[Chinese]]></category>
		<category domain="category" nicename="thoughts"><![CDATA[Thoughts]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>spaces_a43755b404d273dfcedbd14ccb4f51ab_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[http://cid-04001c604af3f011.users.api.live.net/Users(288261576051650577)/Blogs('4001C604AF3F011!102')/Entries('4001C604AF3F011!440')?authkey=X13wC75MXT0%24]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>推荐读</title>
		<link>http://jeff.familyyu.net/2007/06/10/%e6%8e%a8%e8%8d%90%e8%af%bb/</link>
		<pubDate>Sun, 10 Jun 2007 16:12:46 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang1.wordpress.com/2007/06/10/%e6%8e%a8%e8%8d%90%e8%af%bb</guid>
		<description></description>
		<content:encoded><![CDATA[<div id="msgcns!4001C604AF3F011!437" class="bvMsg">这个周末读了下<a href="http://www.bookgo.org/archives/e/c07df6417c7dbb3796d2360277b0be4c.html">&lt;Enterprise Integration Pattern&gt;</a> ,有种相读恨晚的感觉,当然了,这也主要是和我最近做的东西有关系... 这本书目前还没读完,五百多页...但读起来感觉很舒服,解决了我心中的一些疑惑...以致于我本来周末想看解析XML方式的比较,都没看完..<br />还有感觉今年开始,整合大潮的脚步越来越近了... 不管是infoq,还是theServerSide,报道SOA的新闻和资料也越来越多了...<br />这里再推荐两篇文章:<br />1: <a href="http://www.javaworld.com/javaworld/jw-10-2004/jw-1004-soa_p.html">建立简单的SOA的J2EE系统</a> ,这篇文章我觉得主要是用来了解,怎么个Service Oriented Artitecture..<br />2: <a href="http://www.infoq.com/articles/Evolutionary-integration">Evolutionary integration with ESBS</a>.  这篇文章主要是了解下ESB的应用,说实话,我到现在还是不大清楚ESB的定义..<br /><br />不过,还是再强调下&lt;EIP&gt;这本书,如果你是从事Web Service的开发或者说是系统的集成,大力推荐这本书!!!<br /><br /></div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>35</wp:post_id>
		<wp:post_date>2007-06-10 16:12:46</wp:post_date>
		<wp:post_date_gmt>2007-06-10 16:12:46</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e6%8e%a8%e8%8d%90%e8%af%bb</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="web-service"><![CDATA[Web Service]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>spaces_a43755b404d273dfcedbd14ccb4f51ab_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[http://cid-04001c604af3f011.users.api.live.net/Users(288261576051650577)/Blogs('4001C604AF3F011!102')/Entries('4001C604AF3F011!437')?authkey=X13wC75MXT0%24]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>来北京了</title>
		<link>http://jeff.familyyu.net/2007/05/13/%e6%9d%a5%e5%8c%97%e4%ba%ac%e4%ba%86/</link>
		<pubDate>Sun, 13 May 2007 08:22:07 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang1.wordpress.com/2007/05/13/%e6%9d%a5%e5%8c%97%e4%ba%ac%e4%ba%86</guid>
		<description></description>
		<content:encoded><![CDATA[<div id="msgcns!4001C604AF3F011!430" class="bvMsg">

来北京，有一个多月了，本来想早点写点东西的。无奈前段时间太忙。

怎么说呢，深圳跟北京比起来，还是有挺大的不同。来北京之后，感觉深圳其实是个不大的城市，
特别是在深圳关内上班的话，远的话，也就只需要4，50分钟的路程。
但是在北京，很普通的，都需要4，50分钟的路程。还有一点感觉比较明显的是，这边的治安比深圳的好太多了。

就IT环境来说，深圳和北京的IT环境，确实有那么一段距离的差距。北京的大公司，或者说大外企的研发中心，
比深圳那边要多的多，深圳IT的环境，说白了，主要是以做外包为主，其中一大部分是在做华为，中兴的外包；还有一部分才是做
香港，欧美的外包。 但北京的，好像大家都不喜欢这种外包性质的公司.

再有感触的一点是，北京真的不缺人，不缺学历高的人。这边的高校太多了，随便一抓，一把都是研究生，这句话真在这里体现出来。
可以说，这次我工作的转移，是个很大的转折点，是个很好的机会，对我自己，也是个比较大的挑战..
现在开始在做web service这块的东西，随着对web service这块东西的熟悉和了解，觉得这东西还是很有意思的，以前我做的东西，销售的对象是最终用户。现在做的这东西，销售的对象是开发人员。

</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>36</wp:post_id>
		<wp:post_date>2007-05-13 08:22:07</wp:post_date>
		<wp:post_date_gmt>2007-05-13 08:22:07</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e6%9d%a5%e5%8c%97%e4%ba%ac%e4%ba%86</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="chinese"><![CDATA[Chinese]]></category>
		<category domain="category" nicename="thoughts"><![CDATA[Thoughts]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>spaces_a43755b404d273dfcedbd14ccb4f51ab_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[http://cid-04001c604af3f011.users.api.live.net/Users(288261576051650577)/Blogs('4001C604AF3F011!102')/Entries('4001C604AF3F011!430')?authkey=X13wC75MXT0%24]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>62</wp:comment_id>
			<wp:comment_author><![CDATA[Unknown]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2007-05-26 13:28:06</wp:comment_date>
			<wp:comment_date_gmt>2007-05-26 13:28:06</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[在哪里工作其实都差不多，关键是看发展空间、‘钱’途如何，有奔头辛苦几年也无妨 ， 呵呵
等以后交通发达了，城市距离就不算啥了，工作在北京，可以生活在苏杭 ：）]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>63</wp:comment_id>
			<wp:comment_author><![CDATA[扬]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2007-05-21 10:40:33</wp:comment_date>
			<wp:comment_date_gmt>2007-05-21 10:40:33</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[不错，不错。。。。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>64</wp:comment_id>
			<wp:comment_author><![CDATA[Westlife_xu]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2007-05-16 04:01:56</wp:comment_date>
			<wp:comment_date_gmt>2007-05-16 04:01:56</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[北京适合学习，工作，不适合生活]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>汽车,英语,电脑</title>
		<link>http://jeff.familyyu.net/2006/10/04/%e6%b1%bd%e8%bd%a6%e8%8b%b1%e8%af%ad%e7%94%b5%e8%84%91/</link>
		<pubDate>Wed, 04 Oct 2006 04:29:50 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang1.wordpress.com/2006/10/04/%e6%b1%bd%e8%bd%a6%e8%8b%b1%e8%af%ad%e7%94%b5%e8%84%91</guid>
		<description></description>
		<content:encoded><![CDATA[<div id="msgcns!4001C604AF3F011!422" class="bvMsg">记得很早的时候,大家都说,你一定要学会英语,电脑,汽车这三样东西,那么以后就能找到好工作.学好英语和电脑能找到好工作,这我能理解,但为什么要学会开车呢??
现在看来,其实,为什么这三样东西能排在一起呢?那是因为学会了这三样东西,他们会改变你的生活方式.&nbsp;

</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>38</wp:post_id>
		<wp:post_date>2006-10-04 04:29:50</wp:post_date>
		<wp:post_date_gmt>2006-10-04 04:29:50</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e6%b1%bd%e8%bd%a6%e8%8b%b1%e8%af%ad%e7%94%b5%e8%84%91</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="chinese"><![CDATA[Chinese]]></category>
		<category domain="category" nicename="thoughts"><![CDATA[Thoughts]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>spaces_a43755b404d273dfcedbd14ccb4f51ab_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[http://cid-04001c604af3f011.users.api.live.net/Users(288261576051650577)/Blogs('4001C604AF3F011!102')/Entries('4001C604AF3F011!422')?authkey=X13wC75MXT0%24]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>61</wp:comment_id>
			<wp:comment_author><![CDATA[Dai]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2006-11-26 14:51:41</wp:comment_date>
			<wp:comment_date_gmt>2006-11-26 14:51:41</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[ 路过 看看!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>中国的车和司机</title>
		<link>http://jeff.familyyu.net/2006/09/29/%e4%b8%ad%e5%9b%bd%e7%9a%84%e8%bd%a6%e5%92%8c%e5%8f%b8%e6%9c%ba/</link>
		<pubDate>Fri, 29 Sep 2006 14:01:37 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang1.wordpress.com/2006/09/29/%e4%b8%ad%e5%9b%bd%e7%9a%84%e8%bd%a6%e5%92%8c%e5%8f%b8%e6%9c%ba</guid>
		<description></description>
		<content:encoded><![CDATA[<div id="msgcns!4001C604AF3F011!421" class="bvMsg">老外来中国最佩服的是的士司机的技术,最怕的就是过马路...
佩服技术呢? 因为是在他们看来,很多时候都会撞车的,但结果却没撞.
过马路呢?是因为他要一直环顾四周,因为在中国,车和人一起发生抵触的时候,一般要人做出让步...
而在国外,都是车要做出让步,因为这样,才安全.
其实,说到底了,现在车在中国还只能是那些资金比较充裕的老板,以及中产阶级所拥有.
在中国,人是最多的,多则不值钱....
今天,又看见很多车乱串,互不相让,很多时候,就是因为这样,才导致的堵车等等....
是啊,中国现在是发展了,是越来越多的人有车了..
但是,怎么就不学学点秩序呢?学学那边的好的习惯呢...&nbsp;

&nbsp;

</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>39</wp:post_id>
		<wp:post_date>2006-09-29 14:01:37</wp:post_date>
		<wp:post_date_gmt>2006-09-29 14:01:37</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e4%b8%ad%e5%9b%bd%e7%9a%84%e8%bd%a6%e5%92%8c%e5%8f%b8%e6%9c%ba</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="chinese"><![CDATA[Chinese]]></category>
		<category domain="category" nicename="thoughts"><![CDATA[Thoughts]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>spaces_a43755b404d273dfcedbd14ccb4f51ab_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[http://cid-04001c604af3f011.users.api.live.net/Users(288261576051650577)/Blogs('4001C604AF3F011!102')/Entries('4001C604AF3F011!421')?authkey=X13wC75MXT0%24]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>随便说说</title>
		<link>http://jeff.familyyu.net/2006/09/10/%e9%9a%8f%e4%be%bf%e8%af%b4%e8%af%b4/</link>
		<pubDate>Sun, 10 Sep 2006 16:14:44 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang1.wordpress.com/2006/09/10/%e9%9a%8f%e4%be%bf%e8%af%b4%e8%af%b4</guid>
		<description></description>
		<content:encoded><![CDATA[<div id="msgcns!4001C604AF3F011!420" class="bvMsg">
<div>最近发现:</div>
<div>自己还是很犹豫...</div>
<div>自己还是不够豪爽....</div>
<div>自己还是很在意别人的看法....</div>
<div></div>
<div>又发现:</div>
<div>自己其实挺喜欢一个人安静的想东西...</div>
<div>自己挺喜欢懒懒的感觉,哪儿也不去,就在家休息...</div>
<div>自己还是喜欢一边听歌一边睡觉....</div>
<div></div>
<div>其实,来深圳一年多,或者说随着时间又过了一年多,发现自己确实是有改变了一些,但是,改变的力度还只是那么一点点....</div>
<div></div>
<div>最后,以上只是随便说说</div>
</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>40</wp:post_id>
		<wp:post_date>2006-09-10 16:14:44</wp:post_date>
		<wp:post_date_gmt>2006-09-10 16:14:44</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e9%9a%8f%e4%be%bf%e8%af%b4%e8%af%b4</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="chinese"><![CDATA[Chinese]]></category>
		<category domain="category" nicename="thoughts"><![CDATA[Thoughts]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>spaces_a43755b404d273dfcedbd14ccb4f51ab_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[http://cid-04001c604af3f011.users.api.live.net/Users(288261576051650577)/Blogs('4001C604AF3F011!102')/Entries('4001C604AF3F011!420')?authkey=X13wC75MXT0%24]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>[CXF]CXF中的两个概念:Invoker &amp; PhaseInterceptor</title>
		<link>http://jeff.familyyu.net/2007/08/26/cxfcxf%e4%b8%ad%e7%9a%84%e4%b8%a4%e4%b8%aa%e6%a6%82%e5%bf%b5invoker-phaseinterceptor/</link>
		<pubDate>Sun, 26 Aug 2007 10:48:06 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang1.wordpress.com/2007/08/26/cxfcxf%e4%b8%ad%e7%9a%84%e4%b8%a4%e4%b8%aa%e6%a6%82%e5%bf%b5invoker-phaseinterceptor</guid>
		<description></description>
		<content:encoded><![CDATA[<div id="msgcns!4001C604AF3F011!479" class="bvMsg">在读CXF代码中,其中有个Invoker的概念,在CXF的WIKI上有对为什么有这个概念的解释,写得很清楚: 参考[1]&nbsp;

另外,在CXF当中的Interceptor概念中,引入PhaseInterceptor,就是说从一个endpoint发送message到另外一个endpoint的时候,它所要经历的Phases,那么这些Phases是哪些呢?而且分别代码什么呢? 参考[2]

[1] <a href="http://cwiki.apache.org/CXF20DOC/invokers.html">http://cwiki.apache.org/CXF20DOC/invokers.html</a>
[2] <a href="http://cwiki.apache.org/CXF20DOC/interceptors.html">http://cwiki.apache.org/CXF20DOC/interceptors.html</a>

</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>6</wp:post_id>
		<wp:post_date>2007-08-26 10:48:06</wp:post_date>
		<wp:post_date_gmt>2007-08-26 10:48:06</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>cxfcxf%e4%b8%ad%e7%9a%84%e4%b8%a4%e4%b8%aa%e6%a6%82%e5%bf%b5invoker-phaseinterceptor</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="chinese"><![CDATA[Chinese]]></category>
		<category domain="post_tag" nicename="cxf"><![CDATA[CXF]]></category>
		<category domain="post_tag" nicename="design-patterns"><![CDATA[Design Patterns]]></category>
		<category domain="category" nicename="soa"><![CDATA[SOA]]></category>
		<category domain="category" nicename="web-service"><![CDATA[Web Service]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>spaces_a43755b404d273dfcedbd14ccb4f51ab_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[http://cid-04001c604af3f011.users.api.live.net/Users(288261576051650577)/Blogs('4001C604AF3F011!102')/Entries('4001C604AF3F011!479')?authkey=X13wC75MXT0%24]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_efficient_related_posts</wp:meta_key>
			<wp:meta_value><![CDATA[a:8:{i:0;a:4:{s:2:"ID";s:2:"10";s:10:"post_title";s:61:"[CXF]CXF当中的Configuration -- Spring2.0可扩展XML配置";s:7:"matches";s:1:"2";s:9:"permalink";s:141:"http://jeff.familyyu.net/2007/08/23/cxfcxf%e5%bd%93%e4%b8%ad%e7%9a%84configuration-spring2-0%e5%8f%af%e6%89%a9%e5%b1%95xml%e9%85%8d%e7%bd%ae/";}i:1;a:4:{s:2:"ID";s:2:"19";s:10:"post_title";s:38:"[CXF]CXF中DynamicProxy模式的应用";s:7:"matches";s:1:"2";s:9:"permalink";s:109:"http://jeff.familyyu.net/2007/07/15/cxfcxf%e4%b8%addynamicproxy%e6%a8%a1%e5%bc%8f%e7%9a%84%e5%ba%94%e7%94%a8/";}i:2;a:4:{s:2:"ID";s:2:"23";s:10:"post_title";s:46:"[CXF]CXF中Collection Parameter模式的应用";s:7:"matches";s:1:"2";s:9:"permalink";s:117:"http://jeff.familyyu.net/2007/07/14/cxfcxf%e4%b8%adcollection-parameter%e6%a8%a1%e5%bc%8f%e7%9a%84%e5%ba%94%e7%94%a8/";}i:3;a:4:{s:2:"ID";s:2:"22";s:10:"post_title";s:42:"[CXF]CXF中的AbstractFactory模式应用.";s:7:"matches";s:1:"2";s:9:"permalink";s:112:"http://jeff.familyyu.net/2007/07/14/cxfcxf%e4%b8%ad%e7%9a%84abstractfactory%e6%a8%a1%e5%bc%8f%e5%ba%94%e7%94%a8/";}i:4;a:4:{s:2:"ID";s:2:"20";s:10:"post_title";s:34:"[CXF]CXF中的Observer模式应用";s:7:"matches";s:1:"2";s:9:"permalink";s:105:"http://jeff.familyyu.net/2007/07/12/cxfcxf%e4%b8%ad%e7%9a%84observer%e6%a8%a1%e5%bc%8f%e5%ba%94%e7%94%a8/";}i:5;a:4:{s:2:"ID";s:3:"272";s:10:"post_title";s:40:"Apache CXF Web Service Development book.";s:7:"matches";s:1:"1";s:9:"permalink";s:76:"http://jeff.familyyu.net/2010/02/20/apache-cxf-web-service-development-book/";}i:6;a:4:{s:2:"ID";s:3:"167";s:10:"post_title";s:30:"IMS rolled out its 0.1 version";s:7:"matches";s:1:"1";s:9:"permalink";s:67:"http://jeff.familyyu.net/2007/11/13/ims-rolled-out-its-0-1-version/";}i:7;a:4:{s:2:"ID";s:3:"146";s:10:"post_title";s:29:"CXF ServiceInfo Model diagram";s:7:"matches";s:1:"1";s:9:"permalink";s:66:"http://jeff.familyyu.net/2007/09/06/cxf-serviceinfo-model-diagram/";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_relation_threshold</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Spring继续快速的占领着企业应用</title>
		<link>http://jeff.familyyu.net/2007/09/03/spring%e7%bb%a7%e7%bb%ad%e5%bf%ab%e9%80%9f%e7%9a%84%e5%8d%a0%e9%a2%86%e7%9d%80%e4%bc%81%e4%b8%9a%e5%ba%94%e7%94%a8/</link>
		<pubDate>Mon, 03 Sep 2007 16:38:42 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang1.wordpress.com/2007/09/03/spring%e7%bb%a7%e7%bb%ad%e5%bf%ab%e9%80%9f%e7%9a%84%e5%8d%a0%e9%a2%86%e7%9d%80%e4%bc%81%e4%b8%9a%e5%ba%94%e7%94%a8</guid>
		<description></description>
		<content:encoded><![CDATA[<div id="msgcns!4001C604AF3F011!482" class="bvMsg">

今天晚上听了Rod Johnson的<a href="http://www.infoq.com/presentations/spring-2-rod-johnson">Spring2.0&amp;Beyond</a>的讲座,让我惊讶的是Spring的东西越来越多了,以前我们看Spring,它是有这些模块的.
1. Bean的管理. (IOC)
2. 事务的处理. (AOP)
3. DAO这一层的抽象.(比如JDBCTemplate, HibernateTemplate).
4. 还有一些Opensource Integration (比如: quartz)
当然了,那时候还有spring MVC,但感觉不是那么的流行.
但是现在回头看spring2.0的时候,我不得不惊讶了. 它现在可以说是准备做成一个One Stop Shop了.
增加了很多东西.
1. Spring portfolios, 比如什么LDAPTemplate etc.
2. Spring web service.
3. Spring xml DSL.(spring configuration 2.0扩展配置)
4. Spring OSGI.
5. Spring Web Flow.
6. Spring multiple language support.
......
可以说,真的是,越来越强大.如Rod所说.(Simplicity and Power).

这里还要说一点的是,multiple language support, 在CXF当中,我们有一个支持动态语言的,比如说groovy,ruby的.我们是可以直接使用spring的这个功能来实现,配置可以是:
[xml]
&lt;lang:jruby id=&quot;helloworldImpl&quot; &lt;code&gt;script-interfaces=&quot;demo.spring.HelloWorld&quot;&lt;/code&gt; script-source=&quot;classpath:demo/spring/HelloWorldImpl.rb&quot; scope=&quot;prototype&quot;&gt;
&lt;/lang:jruby&gt;
  &lt;simple:server id=&quot;pojoservice&quot;  address=&quot;/HelloWorld&quot;&gt;
      &lt;simple:serviceBean&gt;
          &lt;ref bean=&quot;helloworldImpl&quot; /&gt;
      &lt;/simple:serviceBean&gt;
  &lt;/simple:server&gt;
[/xml]
我当时回复说,能不能把这个<code> "script-interfaces</code>" 去掉. 这显然是不合理的,因为script-interfaces就是Contract. spring支持multiple language support的本意是说隐藏了他的具体实现. 我们把Java的实现分成API 和Implementation,那是因为我们想隐藏Implementation. 但是我们肯定是需要API的,API实际上就是Contract,就是要跟Client打交道或者说是要发布出去的.
就好比WSDL和具体的语言实现. 问这个问题就相当于说我们能不能发布web-service,不需要WSDL一样. 答案也和WSDL类似,那就是你可以不写wsdl,但是你可能需要在你的Implementation中加以某种方式(比如Annotation),这样让我们来生成WSDL.

</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>7</wp:post_id>
		<wp:post_date>2007-09-03 16:38:42</wp:post_date>
		<wp:post_date_gmt>2007-09-03 16:38:42</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>spring%e7%bb%a7%e7%bb%ad%e5%bf%ab%e9%80%9f%e7%9a%84%e5%8d%a0%e9%a2%86%e7%9d%80%e4%bc%81%e4%b8%9a%e5%ba%94%e7%94%a8</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="java"><![CDATA[Java]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>spaces_a43755b404d273dfcedbd14ccb4f51ab_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[http://cid-04001c604af3f011.users.api.live.net/Users(288261576051650577)/Blogs('4001C604AF3F011!102')/Entries('4001C604AF3F011!482')?authkey=X13wC75MXT0%24]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Three fundamental qualities for a person.</title>
		<link>http://jeff.familyyu.net/2007/08/28/three-fundamental-qualities-for-a-person/</link>
		<pubDate>Tue, 28 Aug 2007 16:37:10 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang1.wordpress.com/2007/08/28/three-fundamental-qualities-for-a-person</guid>
		<description></description>
		<content:encoded><![CDATA[<div id="msgcns!4001C604AF3F011!481" class="bvMsg">
<ol>
	<li>Honesty</li>
	<li>Caring Other People</li>
	<li>Able to laugh at yourself.</li>
</ol>
Detail please see: <a href="http://www.npr.org/templates/story/story.php?storyId=13863318">http://www.npr.org/templates/story/story.php?storyId=13863318</a>

</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>8</wp:post_id>
		<wp:post_date>2007-08-28 16:37:10</wp:post_date>
		<wp:post_date_gmt>2007-08-28 16:37:10</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>three-fundamental-qualities-for-a-person</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="thoughts"><![CDATA[Thoughts]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>spaces_a43755b404d273dfcedbd14ccb4f51ab_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[http://cid-04001c604af3f011.users.api.live.net/Users(288261576051650577)/Blogs('4001C604AF3F011!102')/Entries('4001C604AF3F011!481')?authkey=X13wC75MXT0%24]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>简说WS-Addressing</title>
		<link>http://jeff.familyyu.net/2007/08/26/%e7%ae%80%e8%af%b4ws-addressing/</link>
		<pubDate>Sun, 26 Aug 2007 16:18:26 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang1.wordpress.com/2007/08/26/%e7%ae%80%e8%af%b4ws-addressing</guid>
		<description></description>
		<content:encoded><![CDATA[<div id="msgcns!4001C604AF3F011!480" class="bvMsg">WS-Addressing主要是做什么呢?我们先来看一个普通的,没有加入WS-A的SOAP信息:<br /><br />A SOAP 1.2 message, without WS-Addressing, sent over HTTP transport looks like:<br />(001) POST /fabrikam/Purchasing HTTP 1.1/POST<br />(002) Host: example.com<br />(003) SOAPAction: http://example.com/fabrikam/SubmitPO<br />(004)<br />(005) &lt;S:Envelope xmlns:S=&quot;http://www.w3.org/2003/05/soap-envelope&quot;<br />xmlns:wombat=&quot;http://wombat.org/&quot;&gt;<br />(006) &lt;S:Header&gt;<br />(007) &lt;wombat:MessageID&gt;<br />(008) uuid:e197db59-0982-4c9c-9702-4234d204f7f4<br />(009) &lt;/wombat:MessageID&gt;<br />(010) &lt;S:Header&gt;<br />(011) &lt;S:Body&gt;<br />(012) ...<br />(013) &lt;/S:Body&gt;<br />(014) &lt;/S:Envelope&gt;<br />Line (001) - (003) shows the HTTP transport headers. Line (005) - (014) shows the SOAP message in HTTP body.<br />这里,没有WS-A的情况下,所有Transport层的信息都没有放到SOAP的Message里面. <br />我们来看看WS-A存在的目的:<br /><font color="#c00000">SOAP does not provide a standard way to specify where a message is
going, how to return a response, or where to report an error. Those
details have historically been left up to the transport layer. For
example, when a standard SOAP request is sent over HTTP, the URI of the
HTTP request serves as the message's destination.<br />Addressing at the transport level is sufficient for many existing
services, but it has been a limiting factor in the development of
others. WS-Addressing defines standard ways to route a message over
multiple transports or direct a response to a third party.<br /><font color="#000000"><br />简单来说呢?就是想把本来是在Transport这一层的信息写入到SOAP的信息头&lt;Head&gt;中.下面可以看下有了WS-A后的SOAP信息:<br />A SOAP 1.2 message, with WS-Addressing, sent over HTTP transport looks like:<br />(001) POST /fabrikam/Purchasing HTTP 1.1/POST<br />(002) Host: example.com<br />(003) SOAPAction: http://example.com/fabrikam/SubmitPO<br />(004)<br />(005) &lt;S:Envelope xmlns:S=&quot;http://www.w3.org/2003/05/soap-envelope&quot;<br />xmlns:wsa=&quot;http://www.w3.org/2005/08/addressing/&quot;&gt;<br />(006) &lt;S:Header&gt;<br />(007) &lt;wsa:MessageID&gt;<br />(008) uuid:e197db59-0982-4c9c-9702-4234d204f7f4<br />(009) &lt;/wsa:MessageID&gt;<br /><font color="#ff0000">(010) &lt;wsa:To&gt;<br />(011) http://example.com/fabrikam/Purchasing<br />(012) &lt;/wsa:To&gt;<br />(013) &lt;wsa:Action&gt;<br />(014) http://example.com/fabrikam/SubmitPO<br />(015) &lt;/wsa:Action&gt;</font><br />(016) &lt;S:Header&gt;<br />(017) &lt;S:Body&gt;<br />(018) ...<br />(019) &lt;/S:Body&gt;<br />(020) &lt;/S:Envelope&gt;<br /><br />在这个WS-Addressing规范中,主要引入了两个东西: 1. Endpoint References (EPR) 2. Message addressing properties (MAPs).  如[1]中文章所说: 可以把EPR想象成具体的某个地址,比如说某市某县某胡同的2号楼. 而把MAPs想象成地址的布局.比如有收信地址,收信人.<br /><br />把这些Transport的信息放入Soap信息中,有个好处就是能实现Transport-neutral,因为我们传递的是SOAP信息.<br /><br />参考资料: <br />[1] <a href="http://dev2dev.bea.com/pub/a/2005/01/ws_addressing_intro.html">http://dev2dev.bea.com/pub/a/2005/01/ws_addressing_intro.html</a><br />[2] <a href="http://www.javapassion.com/webservices/wsaddressing.pdf">http://www.javapassion.com/webservices/wsaddressing.pdf</a><br /></font></font></div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>9</wp:post_id>
		<wp:post_date>2007-08-26 16:18:26</wp:post_date>
		<wp:post_date_gmt>2007-08-26 16:18:26</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e7%ae%80%e8%af%b4ws-addressing</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="web-service"><![CDATA[Web Service]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>spaces_a43755b404d273dfcedbd14ccb4f51ab_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[http://cid-04001c604af3f011.users.api.live.net/Users(288261576051650577)/Blogs('4001C604AF3F011!102')/Entries('4001C604AF3F011!480')?authkey=X13wC75MXT0%24]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>[CXF]CXF当中的Configuration -- Spring2.0可扩展XML配置</title>
		<link>http://jeff.familyyu.net/2007/08/23/cxfcxf%e5%bd%93%e4%b8%ad%e7%9a%84configuration-spring2-0%e5%8f%af%e6%89%a9%e5%b1%95xml%e9%85%8d%e7%bd%ae/</link>
		<pubDate>Thu, 23 Aug 2007 16:27:27 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang1.wordpress.com/2007/08/23/cxfcxf%e5%bd%93%e4%b8%ad%e7%9a%84configuration-spring2-0%e5%8f%af%e6%89%a9%e5%b1%95xml%e9%85%8d%e7%bd%ae</guid>
		<description></description>
		<content:encoded><![CDATA[<div id="msgcns!4001C604AF3F011!478" class="bvMsg">还是忍不住,昨天看完了CXF中Bus后,就一直想着CXF的Configuration的实现问题.可以说,CXF中的configuration是依赖于spring2.0中所提供的可扩展XML.&nbsp;

如果你使用CXF的话,如果你是通过xml文件来部署endpoint的话,那么下面的这段,你肯定不陌生:

&lt;jaxws:endpoint
id="hello_world"
implementor="demo.hw.server.GreeterImpl"
wsdlLocation="WEB-INF/wsdl/hello_world.wsdl"
address="/hello_world"&gt;
&lt;jaxws:features&gt;
&lt;bean class="org.apache.cxf.feature.LoggingFeature"/&gt;
&lt;/jaxws:features&gt;
&lt;/jaxws:endpoint&gt;

在Spring当中,本来没有endpoint这样的tag,这属于我们自定义的tag. 那么在spring2.0当中,我们可以很容易的扩展他原有的标签.

到底怎么来实现Spring的可扩展XML配置呢. 可以参考以下几篇文章: (当然了,你也可以从CXF的源代码中看到大量这样的实现).

<a href="http://www.javaeye.com/topic/102450">http://www.javaeye.com/topic/102450</a>
<a href="http://www.javaeye.com/topic/30963">http://www.javaeye.com/topic/30963</a>
<a href="http://www.javaeye.com/topic/30964">http://www.javaeye.com/topic/30964</a>
<a href="http://www.memestorm.com/blog/spring-components-xml-configuration-on-steroids/">http://www.memestorm.com/blog/spring-components-xml-configuration-on-steroids/</a>

</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>10</wp:post_id>
		<wp:post_date>2007-08-23 16:27:27</wp:post_date>
		<wp:post_date_gmt>2007-08-23 16:27:27</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>cxfcxf%e5%bd%93%e4%b8%ad%e7%9a%84configuration-spring2-0%e5%8f%af%e6%89%a9%e5%b1%95xml%e9%85%8d%e7%bd%ae</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="chinese"><![CDATA[Chinese]]></category>
		<category domain="post_tag" nicename="cxf"><![CDATA[CXF]]></category>
		<category domain="post_tag" nicename="design-patterns"><![CDATA[Design Patterns]]></category>
		<category domain="category" nicename="soa"><![CDATA[SOA]]></category>
		<category domain="category" nicename="web-service"><![CDATA[Web Service]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>spaces_a43755b404d273dfcedbd14ccb4f51ab_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[http://cid-04001c604af3f011.users.api.live.net/Users(288261576051650577)/Blogs('4001C604AF3F011!102')/Entries('4001C604AF3F011!478')?authkey=X13wC75MXT0%24]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_efficient_related_posts</wp:meta_key>
			<wp:meta_value><![CDATA[a:8:{i:0;a:4:{s:2:"ID";s:1:"6";s:10:"post_title";s:53:"[CXF]CXF中的两个概念:Invoker & PhaseInterceptor";s:7:"matches";s:1:"2";s:9:"permalink";s:121:"http://jeff.familyyu.net/2007/08/26/cxfcxf%e4%b8%ad%e7%9a%84%e4%b8%a4%e4%b8%aa%e6%a6%82%e5%bf%b5invoker-phaseinterceptor/";}i:1;a:4:{s:2:"ID";s:2:"19";s:10:"post_title";s:38:"[CXF]CXF中DynamicProxy模式的应用";s:7:"matches";s:1:"2";s:9:"permalink";s:109:"http://jeff.familyyu.net/2007/07/15/cxfcxf%e4%b8%addynamicproxy%e6%a8%a1%e5%bc%8f%e7%9a%84%e5%ba%94%e7%94%a8/";}i:2;a:4:{s:2:"ID";s:2:"23";s:10:"post_title";s:46:"[CXF]CXF中Collection Parameter模式的应用";s:7:"matches";s:1:"2";s:9:"permalink";s:117:"http://jeff.familyyu.net/2007/07/14/cxfcxf%e4%b8%adcollection-parameter%e6%a8%a1%e5%bc%8f%e7%9a%84%e5%ba%94%e7%94%a8/";}i:3;a:4:{s:2:"ID";s:2:"22";s:10:"post_title";s:42:"[CXF]CXF中的AbstractFactory模式应用.";s:7:"matches";s:1:"2";s:9:"permalink";s:112:"http://jeff.familyyu.net/2007/07/14/cxfcxf%e4%b8%ad%e7%9a%84abstractfactory%e6%a8%a1%e5%bc%8f%e5%ba%94%e7%94%a8/";}i:4;a:4:{s:2:"ID";s:2:"20";s:10:"post_title";s:34:"[CXF]CXF中的Observer模式应用";s:7:"matches";s:1:"2";s:9:"permalink";s:105:"http://jeff.familyyu.net/2007/07/12/cxfcxf%e4%b8%ad%e7%9a%84observer%e6%a8%a1%e5%bc%8f%e5%ba%94%e7%94%a8/";}i:5;a:4:{s:2:"ID";s:3:"272";s:10:"post_title";s:40:"Apache CXF Web Service Development book.";s:7:"matches";s:1:"1";s:9:"permalink";s:76:"http://jeff.familyyu.net/2010/02/20/apache-cxf-web-service-development-book/";}i:6;a:4:{s:2:"ID";s:3:"167";s:10:"post_title";s:30:"IMS rolled out its 0.1 version";s:7:"matches";s:1:"1";s:9:"permalink";s:67:"http://jeff.familyyu.net/2007/11/13/ims-rolled-out-its-0-1-version/";}i:7;a:4:{s:2:"ID";s:3:"146";s:10:"post_title";s:29:"CXF ServiceInfo Model diagram";s:7:"matches";s:1:"1";s:9:"permalink";s:66:"http://jeff.familyyu.net/2007/09/06/cxf-serviceinfo-model-diagram/";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_relation_threshold</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>[CXF]CXF中重要概念Bus</title>
		<link>http://jeff.familyyu.net/2007/08/22/cxfcxf%e4%b8%ad%e9%87%8d%e8%a6%81%e6%a6%82%e5%bf%b5bus/</link>
		<pubDate>Wed, 22 Aug 2007 16:16:40 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang1.wordpress.com/2007/08/22/cxfcxf%e4%b8%ad%e9%87%8d%e8%a6%81%e6%a6%82%e5%bf%b5bus</guid>
		<description></description>
		<content:encoded><![CDATA[<div id="msgcns!4001C604AF3F011!477" class="bvMsg">记得我刚看CXF代码的时候,对其中的BUS这个概念很不清楚..因为提到Bus,好像就总跟传说中的ESB相关联. 问题在于是这个ESB的概念巨模糊,特别是对于刚跨入SOA或者Web service世界里的人来说,那就更不好理解了.&nbsp;

对于企业应用程序开发人员,我们可以把Bus看作是Spring框架中的BeanFactory. BeanFactory是负责管理Bean的,采用的是IOC的模式. 而在CXF中,Bus是管理那些全局配置的.比如你给我一个Namespace是http://schemas.xmlsoap.org/soap/,那么我就知道你需要的是一个SoapBinding. 还比如说我给你一个Transport的Namespace是:http://apache.org/cxf/binding/http,那么我就知道你需要的是一个Http传输. 所以这里的Bus,实质上也就是个资源管理器,你在这里可以注册或者删除一个资源.

Bus同时也是管理着接口和实现的连接.比如说,你的BindingFactory具体的实现是:org.apache.cxf.binding.http.HttpBindingFactory. 所以从某种意义上来说,Bus就是Spring当中的BeanFactory,如果你把BindingFactory等东西看作是一个普通的Bean的话.

在CXF当中,提供了三种方式对Bus的配置:
1.通过bus-extension.xml
2.通过API.
3.通过cxf-extension-*.xml

这里,对于Bus的配置,采取了跟Spring当中类似的做法,也就是采取了IOC的模式.
其中前2种方法是CXF内部的,也就是说不对spring的东西进行依赖. 第1,2种的方案其实是一样的,只不过一个是通过API,一个是通过xml配置文件而已.

这里我们以Http Binding这个来举例: 看下面这个bus-extension.xml:
&lt;extensions xmlns="http://cxf.apache.org/bus/extension"&gt;
&lt;extension class="org.apache.cxf.binding.http.HttpBindingFactory"
interface="org.apache.cxf.binding.BindingFactory" deferred="true"&gt;
&lt;namespace&gt;http://apache.org/cxf/binding/http&lt;/namespace&gt;
&lt;/extension&gt;
&lt;/extensions&gt;

其中,CXF当中存在了一系列的类,来负责解析,来配置这个Bus. 参与的类有:
Extension: 也就是Model
ExtensionManager: 负责取某个具体的Extension.
ExtensionFragmentParser: 负责解析bus-extension.xml的文件.
ExtensionManagerBus: CXF中bus-extension配置的Bus.其实也就是负责从bus-extension.xml文件中构建成Bus.注意,这里他也支持lazy-initialization的配置. 可以从deferred="true"看出.

在CXF当中,有两种方式来初始化Bus,一是通过CXF自带的bus-extension.xml,另外一个是通过跟spring相关的cxf-extension-*.xml. 那么这里呢,有个两个类: 一是CXFBusFactory是负责从bus-extension.xml来初始化Bus;二是SpringBusFactory负责从cxf-extension-*.xml来初始化Bus.在这里稍微一提的是,通过Spring来配置Bus的时候,一般是有个META-INF/cxf/cxf.extension,然后在cxf.extension第一行来指定是在哪个位置存放你的xml配置文件.

其实,在CXF中,跟spring的整合是很好的,比如说,如果你要通过xml文件来配置endpoint,他本身就是依赖于spring2.0的xml语法.在基于spring2.0 xml语法上做的.  当然了,你可以使用CXF让他不依赖于spring,但那样的话,你就丧失了可以用xml来配置endpoint的一个功能.

</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>11</wp:post_id>
		<wp:post_date>2007-08-22 16:16:40</wp:post_date>
		<wp:post_date_gmt>2007-08-22 16:16:40</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>cxfcxf%e4%b8%ad%e9%87%8d%e8%a6%81%e6%a6%82%e5%bf%b5bus</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="chinese"><![CDATA[Chinese]]></category>
		<category domain="post_tag" nicename="cxf"><![CDATA[CXF]]></category>
		<category domain="category" nicename="soa"><![CDATA[SOA]]></category>
		<category domain="category" nicename="web-service"><![CDATA[Web Service]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>spaces_a43755b404d273dfcedbd14ccb4f51ab_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[http://cid-04001c604af3f011.users.api.live.net/Users(288261576051650577)/Blogs('4001C604AF3F011!102')/Entries('4001C604AF3F011!477')?authkey=X13wC75MXT0%24]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_efficient_related_posts</wp:meta_key>
			<wp:meta_value><![CDATA[a:8:{i:0;a:4:{s:2:"ID";s:3:"272";s:10:"post_title";s:40:"Apache CXF Web Service Development book.";s:7:"matches";s:1:"1";s:9:"permalink";s:76:"http://jeff.familyyu.net/2010/02/20/apache-cxf-web-service-development-book/";}i:1;a:4:{s:2:"ID";s:3:"167";s:10:"post_title";s:30:"IMS rolled out its 0.1 version";s:7:"matches";s:1:"1";s:9:"permalink";s:67:"http://jeff.familyyu.net/2007/11/13/ims-rolled-out-its-0-1-version/";}i:2;a:4:{s:2:"ID";s:3:"146";s:10:"post_title";s:29:"CXF ServiceInfo Model diagram";s:7:"matches";s:1:"1";s:9:"permalink";s:66:"http://jeff.familyyu.net/2007/09/06/cxf-serviceinfo-model-diagram/";}i:3;a:4:{s:2:"ID";s:1:"6";s:10:"post_title";s:53:"[CXF]CXF中的两个概念:Invoker & PhaseInterceptor";s:7:"matches";s:1:"1";s:9:"permalink";s:121:"http://jeff.familyyu.net/2007/08/26/cxfcxf%e4%b8%ad%e7%9a%84%e4%b8%a4%e4%b8%aa%e6%a6%82%e5%bf%b5invoker-phaseinterceptor/";}i:4;a:4:{s:2:"ID";s:2:"10";s:10:"post_title";s:61:"[CXF]CXF当中的Configuration -- Spring2.0可扩展XML配置";s:7:"matches";s:1:"1";s:9:"permalink";s:141:"http://jeff.familyyu.net/2007/08/23/cxfcxf%e5%bd%93%e4%b8%ad%e7%9a%84configuration-spring2-0%e5%8f%af%e6%89%a9%e5%b1%95xml%e9%85%8d%e7%bd%ae/";}i:5;a:4:{s:2:"ID";s:2:"13";s:10:"post_title";s:34:"[CXF]CXF中ServiceInfo的结构图";s:7:"matches";s:1:"1";s:9:"permalink";s:99:"http://jeff.familyyu.net/2007/08/16/cxfcxf%e4%b8%adserviceinfo%e7%9a%84%e7%bb%93%e6%9e%84%e5%9b%be/";}i:6;a:4:{s:2:"ID";s:2:"17";s:10:"post_title";s:30:"[CXF]一句话概括Apache CXF";s:7:"matches";s:1:"1";s:9:"permalink";s:95:"http://jeff.familyyu.net/2007/07/16/cxf%e4%b8%80%e5%8f%a5%e8%af%9d%e6%a6%82%e6%8b%acapache-cxf/";}i:7;a:4:{s:2:"ID";s:2:"19";s:10:"post_title";s:38:"[CXF]CXF中DynamicProxy模式的应用";s:7:"matches";s:1:"1";s:9:"permalink";s:109:"http://jeff.familyyu.net/2007/07/15/cxfcxf%e4%b8%addynamicproxy%e6%a8%a1%e5%bc%8f%e7%9a%84%e5%ba%94%e7%94%a8/";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_relation_threshold</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>70</wp:comment_id>
			<wp:comment_author><![CDATA[宁]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2007-09-18 08:10:49</wp:comment_date>
			<wp:comment_date_gmt>2007-09-18 08:10:49</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[CXF与Spring的整合在于利用Spring2.0 提供的扩展机制，有关内容可参考http://jnn.javaeye.com/admin/show/120186]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>MTOM, XOP Links</title>
		<link>http://jeff.familyyu.net/2007/08/20/mtom-xop-links/</link>
		<pubDate>Mon, 20 Aug 2007 16:56:28 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang1.wordpress.com/2007/08/20/mtom-xop-links</guid>
		<description></description>
		<content:encoded><![CDATA[<div id="msgcns!4001C604AF3F011!476" class="bvMsg">看了下面几个链接,可以让你对MTOM,XOP,SwA名词有些了解.<br /><a href="http://dev2dev.bea.com/pub/a/2004/05/websvcs_nottingham.html">Understanding Web Services Attachments</a>
<br /><a href="http://ws.apache.org/axis2/1_0/mtom-guide.html#3">http://ws.apache.org/axis2/1_0/mtom-guide.html#3</a></div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>12</wp:post_id>
		<wp:post_date>2007-08-20 16:56:28</wp:post_date>
		<wp:post_date_gmt>2007-08-20 16:56:28</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>mtom-xop-links</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="web-service"><![CDATA[Web Service]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>spaces_a43755b404d273dfcedbd14ccb4f51ab_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[http://cid-04001c604af3f011.users.api.live.net/Users(288261576051650577)/Blogs('4001C604AF3F011!102')/Entries('4001C604AF3F011!476')?authkey=X13wC75MXT0%24]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>[CXF]CXF中ServiceInfo的结构图</title>
		<link>http://jeff.familyyu.net/2007/08/16/cxfcxf%e4%b8%adserviceinfo%e7%9a%84%e7%bb%93%e6%9e%84%e5%9b%be/</link>
		<pubDate>Thu, 16 Aug 2007 09:34:32 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang1.wordpress.com/2007/08/16/cxfcxf%e4%b8%adserviceinfo%e7%9a%84%e7%bb%93%e6%9e%84%e5%9b%be</guid>
		<description></description>
		<content:encoded><![CDATA[<div id="msgcns!4001C604AF3F011!472" class="bvMsg">CXF中内部的ServiceModel,负责存放所有从WSDL或者从Java code中读取到的meta data.&nbsp;

<img src="http://byfiles.storage.live.com/y1pS2dnMw0tcFKKkcKyCpvxPvC6RzJnlsVRD9E4rCBtmTPYUs0Y_3IKLuYoytnvTFx-WrYebVMWPIM" alt="" />

</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>13</wp:post_id>
		<wp:post_date>2007-08-16 09:34:32</wp:post_date>
		<wp:post_date_gmt>2007-08-16 09:34:32</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>cxfcxf%e4%b8%adserviceinfo%e7%9a%84%e7%bb%93%e6%9e%84%e5%9b%be</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="chinese"><![CDATA[Chinese]]></category>
		<category domain="post_tag" nicename="cxf"><![CDATA[CXF]]></category>
		<category domain="category" nicename="web-service"><![CDATA[Web Service]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>spaces_a43755b404d273dfcedbd14ccb4f51ab_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[http://cid-04001c604af3f011.users.api.live.net/Users(288261576051650577)/Blogs('4001C604AF3F011!102')/Entries('4001C604AF3F011!472')?authkey=X13wC75MXT0%24]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_efficient_related_posts</wp:meta_key>
			<wp:meta_value><![CDATA[a:8:{i:0;a:4:{s:2:"ID";s:3:"272";s:10:"post_title";s:40:"Apache CXF Web Service Development book.";s:7:"matches";s:1:"1";s:9:"permalink";s:76:"http://jeff.familyyu.net/2010/02/20/apache-cxf-web-service-development-book/";}i:1;a:4:{s:2:"ID";s:3:"167";s:10:"post_title";s:30:"IMS rolled out its 0.1 version";s:7:"matches";s:1:"1";s:9:"permalink";s:67:"http://jeff.familyyu.net/2007/11/13/ims-rolled-out-its-0-1-version/";}i:2;a:4:{s:2:"ID";s:3:"146";s:10:"post_title";s:29:"CXF ServiceInfo Model diagram";s:7:"matches";s:1:"1";s:9:"permalink";s:66:"http://jeff.familyyu.net/2007/09/06/cxf-serviceinfo-model-diagram/";}i:3;a:4:{s:2:"ID";s:1:"6";s:10:"post_title";s:53:"[CXF]CXF中的两个概念:Invoker & PhaseInterceptor";s:7:"matches";s:1:"1";s:9:"permalink";s:121:"http://jeff.familyyu.net/2007/08/26/cxfcxf%e4%b8%ad%e7%9a%84%e4%b8%a4%e4%b8%aa%e6%a6%82%e5%bf%b5invoker-phaseinterceptor/";}i:4;a:4:{s:2:"ID";s:2:"10";s:10:"post_title";s:61:"[CXF]CXF当中的Configuration -- Spring2.0可扩展XML配置";s:7:"matches";s:1:"1";s:9:"permalink";s:141:"http://jeff.familyyu.net/2007/08/23/cxfcxf%e5%bd%93%e4%b8%ad%e7%9a%84configuration-spring2-0%e5%8f%af%e6%89%a9%e5%b1%95xml%e9%85%8d%e7%bd%ae/";}i:5;a:4:{s:2:"ID";s:2:"11";s:10:"post_title";s:26:"[CXF]CXF中重要概念Bus";s:7:"matches";s:1:"1";s:9:"permalink";s:91:"http://jeff.familyyu.net/2007/08/22/cxfcxf%e4%b8%ad%e9%87%8d%e8%a6%81%e6%a6%82%e5%bf%b5bus/";}i:6;a:4:{s:2:"ID";s:2:"17";s:10:"post_title";s:30:"[CXF]一句话概括Apache CXF";s:7:"matches";s:1:"1";s:9:"permalink";s:95:"http://jeff.familyyu.net/2007/07/16/cxf%e4%b8%80%e5%8f%a5%e8%af%9d%e6%a6%82%e6%8b%acapache-cxf/";}i:7;a:4:{s:2:"ID";s:2:"19";s:10:"post_title";s:38:"[CXF]CXF中DynamicProxy模式的应用";s:7:"matches";s:1:"1";s:9:"permalink";s:109:"http://jeff.familyyu.net/2007/07/15/cxfcxf%e4%b8%addynamicproxy%e6%a8%a1%e5%bc%8f%e7%9a%84%e5%ba%94%e7%94%a8/";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_relation_threshold</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>简说XML的解析方式(DOM,SAX,StAX)</title>
		<link>http://jeff.familyyu.net/2007/08/13/%e7%ae%80%e8%af%b4xml%e7%9a%84%e8%a7%a3%e6%9e%90%e6%96%b9%e5%bc%8fdomsaxstax/</link>
		<pubDate>Mon, 13 Aug 2007 06:56:25 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang1.wordpress.com/2007/08/13/%e7%ae%80%e8%af%b4xml%e7%9a%84%e8%a7%a3%e6%9e%90%e6%96%b9%e5%bc%8fdomsaxstax</guid>
		<description></description>
		<content:encoded><![CDATA[<div id="msgcns!4001C604AF3F011!471" class="bvMsg">一般来说,解析XML文件存在着两种方式,一种是event-based API，比如说象SAX,XNI. 第二种是tree-based API,比如说DOM,JDOM,DOM4j等等. 一般来说,读取配置文件时,我们一般比较喜欢应用tree-based API这种方式,就是把xml文件读入,变成DOM形式的一棵树,然后进行查找，获取自己说想要的东西. 但是,这种方式有个缺点,那就是如果你这个XML文件很大的话,你需要占用很大的内存.<br />所以对于很大的一个xml文件,又不需要进行随机查找的时候,比较适合采用event-based API,那就是说他解析xml文件,如果是START_ELEMENT，那么他就调用startElement()的回调方法..他遍历过了就过了，不能再回去. <br />在event-based API中又存在两种方式: 一个是PUSH的方式,就比如说是SAX. 另外一种是PULL的方式,比如StAX. <br />怎么来理解PUSH和PULL的区别呢. 先假设有这么三个角色: application, xmlFile, xmlParser. 那么,如果我们采用PUSH的方式,步骤为:<br /> 1. 创建一个xmlParser.<br /> 2. 把我们的application处理xml的注册到xmlParser.<br /> 3. xmlParser遍历xmlFile,然后来调用application.<br />这里面,用的是Observer的模式,就是接收到event的时候,去调用event的callback函数, 这里面有个很不好的地方就是,你application反而是被Parser控制了.<br />于是,就出现了PULL方式的解析.<br /> 1. 创建一个xmlParser<br /> 2. xmlParser打开一个xmlFile<br /> 3. application调用这个xmlParser, 来获取xmlParser打开xmlFile所得到的一系列event.<br />这里,用到了Iterator的模式. 最主要的一点是: 这个时候application控制了xmlParser.<br />StAX有两种API,一种是cursor-based,一种是iterator-based. 这两种详细的比较参考: <a href="http://java.sun.com/webservices/docs/1.6/tutorial/doc/SJSXP3.html#wp102139">http://java.sun.com/webservices/docs/1.6/tutorial/doc/SJSXP3.html#wp102139</a><br /><br />这里,SAX和StAX的另外一点区别是: SAX只能读xml文件. StAX不但能读xml文件,而且还能写xml文件.<br /><br />参考资料:<br /><a href="http://www.xml.com/pub/a/2003/09/17/stax.html?page=1">An Introduction to StAX</a><br /><a href="http://www.topxml.com/java/articles/sax_xml/default.asp">Having Good SAX with Java</a><br /></div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>14</wp:post_id>
		<wp:post_date>2007-08-13 06:56:25</wp:post_date>
		<wp:post_date_gmt>2007-08-13 06:56:25</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e7%ae%80%e8%af%b4xml%e7%9a%84%e8%a7%a3%e6%9e%90%e6%96%b9%e5%bc%8fdomsaxstax</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="java"><![CDATA[Java]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>spaces_a43755b404d273dfcedbd14ccb4f51ab_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[http://cid-04001c604af3f011.users.api.live.net/Users(288261576051650577)/Blogs('4001C604AF3F011!102')/Entries('4001C604AF3F011!471')?authkey=X13wC75MXT0%24]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>java.util.concurrent包</title>
		<link>http://jeff.familyyu.net/2007/07/21/java-util-concurrent%e5%8c%85/</link>
		<pubDate>Sat, 21 Jul 2007 17:00:29 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang1.wordpress.com/2007/07/21/java-util-concurrent%e5%8c%85</guid>
		<description></description>
		<content:encoded><![CDATA[<div id="msgcns!4001C604AF3F011!470" class="bvMsg">这几天,在看java.util.concurrent包,我以前一直以为说,JDK1.5中相比1.4来说,无非就增加两个:一个是Generic,一个是Annotation,但是,前段时间在看CXF的源代码的时候,需要研究到Executor,以及AtomicReference类等..才发现,在多线程方面,JDK1.5比JDK1.4进步了很多,巨多..其中那个包的代码大多来自Doug Lea的作品..也正是有了JDK1.5 concurrent包,Java就又有了一个叫non-blocking的概念.<br />下面是我这段时间看的觉得不错的一些资源<br /><a href="http://www.few.vu.nl/~tzolov/links/java1.5-concurrency-IBM-tutorial.pdf">&lt;concurrency in JDK1.5&gt; PDF</a><br />还有一些来自Brian Goetz在IBM developerworks上写的文章:<font face="Arial" size="3"><br /></font><ol><li><font face="Arial" size="3"><a href="http://www.ibm.com/developerworks/java/library/j-jtp04186/index.html?S_TACT=105AGX02&amp;S_CMP=EDU">Introduction to nonblocking algorithms</a></font><li><a href="http://www.ibm.com/developerworks/java/library/j-jtp11234/">More flexible, scalable locking in JDK 5.0</a><li><a href="http://www.ibm.com/developerworks/java/library/j-jtp11234/">Going atomic</a></li></li></li></ol></div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>15</wp:post_id>
		<wp:post_date>2007-07-21 17:00:29</wp:post_date>
		<wp:post_date_gmt>2007-07-21 17:00:29</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>java-util-concurrent%e5%8c%85</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="java"><![CDATA[Java]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>spaces_a43755b404d273dfcedbd14ccb4f51ab_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[http://cid-04001c604af3f011.users.api.live.net/Users(288261576051650577)/Blogs('4001C604AF3F011!102')/Entries('4001C604AF3F011!470')?authkey=X13wC75MXT0%24]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>准备从组织后卫转得分后卫.</title>
		<link>http://jeff.familyyu.net/2007/07/18/%e5%87%86%e5%a4%87%e4%bb%8e%e7%bb%84%e7%bb%87%e5%90%8e%e5%8d%ab%e8%bd%ac%e5%be%97%e5%88%86%e5%90%8e%e5%8d%ab/</link>
		<pubDate>Wed, 18 Jul 2007 15:17:22 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang1.wordpress.com/2007/07/18/%e5%87%86%e5%a4%87%e4%bb%8e%e7%bb%84%e7%bb%87%e5%90%8e%e5%8d%ab%e8%bd%ac%e5%be%97%e5%88%86%e5%90%8e%e5%8d%ab</guid>
		<description></description>
		<content:encoded><![CDATA[<div id="msgcns!4001C604AF3F011!467" class="bvMsg">今天跟公司外部的人打了篮球,感觉体力,命中率都不行... 我一直是个喜欢打内线的人,那种爽感很爽,那么多人防守,然后你进球了,超爽.;-), 虽然说打内线比较容易有身体上的对抗,对我比较不利,但是那种情况下进球是打外线无法体会到的..
但是现在感觉是时候转型了,打内线对我确实很不利,而且容易受伤,现在开始,我得准备打外线,在外线提高投篮命中率,当然了,我还是会注意配合的,谁叫我喜欢打配合的球呢...;-)&nbsp;

</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>16</wp:post_id>
		<wp:post_date>2007-07-18 15:17:22</wp:post_date>
		<wp:post_date_gmt>2007-07-18 15:17:22</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%87%86%e5%a4%87%e4%bb%8e%e7%bb%84%e7%bb%87%e5%90%8e%e5%8d%ab%e8%bd%ac%e5%be%97%e5%88%86%e5%90%8e%e5%8d%ab</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="chinese"><![CDATA[Chinese]]></category>
		<category domain="category" nicename="thoughts"><![CDATA[Thoughts]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>spaces_a43755b404d273dfcedbd14ccb4f51ab_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[http://cid-04001c604af3f011.users.api.live.net/Users(288261576051650577)/Blogs('4001C604AF3F011!102')/Entries('4001C604AF3F011!467')?authkey=X13wC75MXT0%24]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>[CXF]一句话概括Apache CXF</title>
		<link>http://jeff.familyyu.net/2007/07/16/cxf%e4%b8%80%e5%8f%a5%e8%af%9d%e6%a6%82%e6%8b%acapache-cxf/</link>
		<pubDate>Mon, 16 Jul 2007 16:36:43 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang1.wordpress.com/2007/07/16/cxf%e4%b8%80%e5%8f%a5%e8%af%9d%e6%a6%82%e6%8b%acapache-cxf</guid>
		<description></description>
		<content:encoded><![CDATA[<div id="msgcns!4001C604AF3F011!466" class="bvMsg">我觉得用一句话来概括CXF就是:
Apache CXF就是帮助你如果把你的Service,一般来说就是Business Interface的服务转成Web Service的形式,这样可以供其它应用程序通过web service的方式来调用.</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>17</wp:post_id>
		<wp:post_date>2007-07-16 16:36:43</wp:post_date>
		<wp:post_date_gmt>2007-07-16 16:36:43</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>cxf%e4%b8%80%e5%8f%a5%e8%af%9d%e6%a6%82%e6%8b%acapache-cxf</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="chinese"><![CDATA[Chinese]]></category>
		<category domain="post_tag" nicename="cxf"><![CDATA[CXF]]></category>
		<category domain="category" nicename="web-service"><![CDATA[Web Service]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>spaces_a43755b404d273dfcedbd14ccb4f51ab_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[http://cid-04001c604af3f011.users.api.live.net/Users(288261576051650577)/Blogs('4001C604AF3F011!102')/Entries('4001C604AF3F011!466')?authkey=X13wC75MXT0%24]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_efficient_related_posts</wp:meta_key>
			<wp:meta_value><![CDATA[a:8:{i:0;a:4:{s:2:"ID";s:3:"272";s:10:"post_title";s:40:"Apache CXF Web Service Development book.";s:7:"matches";s:1:"1";s:9:"permalink";s:76:"http://jeff.familyyu.net/2010/02/20/apache-cxf-web-service-development-book/";}i:1;a:4:{s:2:"ID";s:3:"167";s:10:"post_title";s:30:"IMS rolled out its 0.1 version";s:7:"matches";s:1:"1";s:9:"permalink";s:67:"http://jeff.familyyu.net/2007/11/13/ims-rolled-out-its-0-1-version/";}i:2;a:4:{s:2:"ID";s:3:"146";s:10:"post_title";s:29:"CXF ServiceInfo Model diagram";s:7:"matches";s:1:"1";s:9:"permalink";s:66:"http://jeff.familyyu.net/2007/09/06/cxf-serviceinfo-model-diagram/";}i:3;a:4:{s:2:"ID";s:1:"6";s:10:"post_title";s:53:"[CXF]CXF中的两个概念:Invoker & PhaseInterceptor";s:7:"matches";s:1:"1";s:9:"permalink";s:121:"http://jeff.familyyu.net/2007/08/26/cxfcxf%e4%b8%ad%e7%9a%84%e4%b8%a4%e4%b8%aa%e6%a6%82%e5%bf%b5invoker-phaseinterceptor/";}i:4;a:4:{s:2:"ID";s:2:"10";s:10:"post_title";s:61:"[CXF]CXF当中的Configuration -- Spring2.0可扩展XML配置";s:7:"matches";s:1:"1";s:9:"permalink";s:141:"http://jeff.familyyu.net/2007/08/23/cxfcxf%e5%bd%93%e4%b8%ad%e7%9a%84configuration-spring2-0%e5%8f%af%e6%89%a9%e5%b1%95xml%e9%85%8d%e7%bd%ae/";}i:5;a:4:{s:2:"ID";s:2:"11";s:10:"post_title";s:26:"[CXF]CXF中重要概念Bus";s:7:"matches";s:1:"1";s:9:"permalink";s:91:"http://jeff.familyyu.net/2007/08/22/cxfcxf%e4%b8%ad%e9%87%8d%e8%a6%81%e6%a6%82%e5%bf%b5bus/";}i:6;a:4:{s:2:"ID";s:2:"13";s:10:"post_title";s:34:"[CXF]CXF中ServiceInfo的结构图";s:7:"matches";s:1:"1";s:9:"permalink";s:99:"http://jeff.familyyu.net/2007/08/16/cxfcxf%e4%b8%adserviceinfo%e7%9a%84%e7%bb%93%e6%9e%84%e5%9b%be/";}i:7;a:4:{s:2:"ID";s:2:"19";s:10:"post_title";s:38:"[CXF]CXF中DynamicProxy模式的应用";s:7:"matches";s:1:"1";s:9:"permalink";s:109:"http://jeff.familyyu.net/2007/07/15/cxfcxf%e4%b8%addynamicproxy%e6%a8%a1%e5%bc%8f%e7%9a%84%e5%ba%94%e7%94%a8/";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_relation_threshold</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Windows上定时关机</title>
		<link>http://jeff.familyyu.net/2007/07/15/windows%e4%b8%8a%e5%ae%9a%e6%97%b6%e5%85%b3%e6%9c%ba/</link>
		<pubDate>Sun, 15 Jul 2007 16:34:40 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang1.wordpress.com/2007/07/15/windows%e4%b8%8a%e5%ae%9a%e6%97%b6%e5%85%b3%e6%9c%ba</guid>
		<description></description>
		<content:encoded><![CDATA[<div id="msgcns!4001C604AF3F011!465" class="bvMsg">我有个习惯,晚上睡觉前,比较喜欢听NPR的<a href="http://www.npr.org/templates/story/story.php?storyId=4538138">ThisIBelieve</a>节目. 顺便推荐下这个节目,我觉得很好,锻炼听力的同时,也可以让自己的心情平静... 我还记得在Achievo的英语角时候组织过一次这个活动,感觉挺好的.
好,我这里要说的是,以前我都是去下载个自动关机小软件. 但是现在这个病毒横行的年代,不放心.下面这个命令很容易的帮你定时在某个时刻关机(其实通过计划任务也可以实现,但没命令行来的方便):
打开命令行,或者点运行,输入: (在一点的时候关机)&nbsp;

at 1:00 shutdown -s

这个时候你可以到你的计划任务里,就可以看到你刚刚说新增的这个任务.

&nbsp;

</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>18</wp:post_id>
		<wp:post_date>2007-07-15 16:34:40</wp:post_date>
		<wp:post_date_gmt>2007-07-15 16:34:40</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>windows%e4%b8%8a%e5%ae%9a%e6%97%b6%e5%85%b3%e6%9c%ba</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="chinese"><![CDATA[Chinese]]></category>
		<category domain="category" nicename="others"><![CDATA[Others]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>spaces_a43755b404d273dfcedbd14ccb4f51ab_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[http://cid-04001c604af3f011.users.api.live.net/Users(288261576051650577)/Blogs('4001C604AF3F011!102')/Entries('4001C604AF3F011!465')?authkey=X13wC75MXT0%24]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Why am I blogging here?</title>
		<link>http://jeff.familyyu.net/2007/09/06/why-am-i-blogging-here/</link>
		<pubDate>Thu, 06 Sep 2007 07:03:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang.wordpress.com/2007/09/06/why-am-i-blogging-here</guid>
		<description></description>
		<content:encoded><![CDATA[The reasons that why I am switching blog from MSN space to bloggers are:<br />1. MSN space doesn't have the label concept, it just has the folder, and a particular blog can only belong to the one folder, which is depressed me mostly.<br />2. It is so hard to make it beautiful in writing some blogs with Code. I am thinking that MSN space target users are not for programmers like me.<br />3. MSN space layout and the template is ugly.<br />4. Accessing to the MSN space is kind of slow.<br /><br />So I decided to reactive my blogger account, and I will blog the IT stuff here by using my poor english. ;-)]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>145</wp:post_id>
		<wp:post_date>2007-09-06 18:03:00</wp:post_date>
		<wp:post_date_gmt>2007-09-06 07:03:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>why-am-i-blogging-here</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="thoughts"><![CDATA[Thoughts]]></category>
		<wp:postmeta>
			<wp:meta_key>blogger_429d160645182d8e72b48e90f5e50eb3_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[7274802217738354980]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_author</wp:meta_key>
			<wp:meta_value><![CDATA[Jeff Yu   (余昌)]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_blog</wp:meta_key>
			<wp:meta_value><![CDATA[jeff.familyyu.net]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>CXF ServiceInfo Model diagram</title>
		<link>http://jeff.familyyu.net/2007/09/06/cxf-serviceinfo-model-diagram/</link>
		<pubDate>Thu, 06 Sep 2007 07:58:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang.wordpress.com/2007/09/06/cxf-serviceinfo-model-diagram</guid>
		<description></description>
		<content:encoded><![CDATA[If you want to know the CXF code, you need to now the CXF ServiceInfo Model. what is that model about? We can think the ServiceInfo as a JAVA model to the WSDL. so all the runtime code are all dealing with ServiceInfo instead of WSDL.

<a href="http://jeff.familyyu.net/wp-content/uploads/2011/01/serviceinfo.jpg"><img src="http://jeff.familyyu.net/wp-content/uploads/2011/01/serviceinfo.jpg?w=300" border="0" alt="" /></a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>146</wp:post_id>
		<wp:post_date>2007-09-06 18:58:00</wp:post_date>
		<wp:post_date_gmt>2007-09-06 07:58:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>cxf-serviceinfo-model-diagram</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="cxf"><![CDATA[CXF]]></category>
		<category domain="category" nicename="soa"><![CDATA[SOA]]></category>
		<category domain="category" nicename="web-service"><![CDATA[Web Service]]></category>
		<wp:postmeta>
			<wp:meta_key>blogger_blog</wp:meta_key>
			<wp:meta_value><![CDATA[jeff.familyyu.net]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_author</wp:meta_key>
			<wp:meta_value><![CDATA[Jeff Yu   (余昌)]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_429d160645182d8e72b48e90f5e50eb3_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[497364230326604981]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_efficient_related_posts</wp:meta_key>
			<wp:meta_value><![CDATA[a:8:{i:0;a:4:{s:2:"ID";s:3:"272";s:10:"post_title";s:40:"Apache CXF Web Service Development book.";s:7:"matches";s:1:"1";s:9:"permalink";s:76:"http://jeff.familyyu.net/2010/02/20/apache-cxf-web-service-development-book/";}i:1;a:4:{s:2:"ID";s:3:"167";s:10:"post_title";s:30:"IMS rolled out its 0.1 version";s:7:"matches";s:1:"1";s:9:"permalink";s:67:"http://jeff.familyyu.net/2007/11/13/ims-rolled-out-its-0-1-version/";}i:2;a:4:{s:2:"ID";s:1:"6";s:10:"post_title";s:53:"[CXF]CXF中的两个概念:Invoker & PhaseInterceptor";s:7:"matches";s:1:"1";s:9:"permalink";s:121:"http://jeff.familyyu.net/2007/08/26/cxfcxf%e4%b8%ad%e7%9a%84%e4%b8%a4%e4%b8%aa%e6%a6%82%e5%bf%b5invoker-phaseinterceptor/";}i:3;a:4:{s:2:"ID";s:2:"10";s:10:"post_title";s:61:"[CXF]CXF当中的Configuration -- Spring2.0可扩展XML配置";s:7:"matches";s:1:"1";s:9:"permalink";s:141:"http://jeff.familyyu.net/2007/08/23/cxfcxf%e5%bd%93%e4%b8%ad%e7%9a%84configuration-spring2-0%e5%8f%af%e6%89%a9%e5%b1%95xml%e9%85%8d%e7%bd%ae/";}i:4;a:4:{s:2:"ID";s:2:"11";s:10:"post_title";s:26:"[CXF]CXF中重要概念Bus";s:7:"matches";s:1:"1";s:9:"permalink";s:91:"http://jeff.familyyu.net/2007/08/22/cxfcxf%e4%b8%ad%e9%87%8d%e8%a6%81%e6%a6%82%e5%bf%b5bus/";}i:5;a:4:{s:2:"ID";s:2:"13";s:10:"post_title";s:34:"[CXF]CXF中ServiceInfo的结构图";s:7:"matches";s:1:"1";s:9:"permalink";s:99:"http://jeff.familyyu.net/2007/08/16/cxfcxf%e4%b8%adserviceinfo%e7%9a%84%e7%bb%93%e6%9e%84%e5%9b%be/";}i:6;a:4:{s:2:"ID";s:2:"17";s:10:"post_title";s:30:"[CXF]一句话概括Apache CXF";s:7:"matches";s:1:"1";s:9:"permalink";s:95:"http://jeff.familyyu.net/2007/07/16/cxf%e4%b8%80%e5%8f%a5%e8%af%9d%e6%a6%82%e6%8b%acapache-cxf/";}i:7;a:4:{s:2:"ID";s:2:"19";s:10:"post_title";s:38:"[CXF]CXF中DynamicProxy模式的应用";s:7:"matches";s:1:"1";s:9:"permalink";s:109:"http://jeff.familyyu.net/2007/07/15/cxfcxf%e4%b8%addynamicproxy%e6%a8%a1%e5%bc%8f%e7%9a%84%e5%ba%94%e7%94%a8/";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_relation_threshold</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>71</wp:comment_id>
			<wp:comment_author><![CDATA[Alexey Zavizionov]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.blogger.com/profile/01172046139726230558</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2008-09-18 01:53:00</wp:comment_date>
			<wp:comment_date_gmt>2008-09-17 14:53:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks for the post!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Brief introduction on WS-Addressing</title>
		<link>http://jeff.familyyu.net/2007/09/06/brief-introduction-on-ws-addressing/</link>
		<pubDate>Thu, 06 Sep 2007 08:11:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang.wordpress.com/2007/09/06/brief-introduction-on-ws-addressing</guid>
		<description></description>
		<content:encoded><![CDATA[what is WS-Addressing? Before answer this question, lets see a soap message without WS-A.<br /><br />A SOAP 1.2 message, without WS-Addressing, sent over HTTP transport looks like:<br /><div style="background:gray;"><br />(001) POST /fabrikam/Purchasing HTTP 1.1/POST<br />(002) Host: example.com<br />(003) SOAPAction: http://example.com/fabrikam/SubmitPO<br />(004) <br />(005)  &lt;s:envelope s="http://www.w3.org/2003/05/soap-envelope" wombat="http://wombat.org/"&gt;<br />(006) &lt;s:header&gt;<br />(007) &lt;wombat:messageid&gt;<br />(008) uuid:e197db59-0982-4c9c-9702-4234d204f7f4<br />(009) &lt;/wombat:messageid&gt;<br />(010) &lt;s:header&gt;<br />(011) &lt;s:body&gt;<br />(012) ...<br />(013) &lt;/s:body&gt;<br />(014) &lt;/s:envelope&gt;<br /></div> <br />Line (001) - (003) shows the HTTP transport headers. Line (005) - (014) shows the SOAP message in HTTP body.<br /><br />Here we can see, we didn't put any transport information in the SOAP message without the WS-A.<br /><br />The Intent of WS-Addressing:<br /><br /><div style="color:blue;"><br />SOAP does not provide a standard way to specify where a message is going, how to return a response, or where to report an error. Those details have historically been left up to the transport layer. For example, when a standard SOAP request is sent over HTTP, the URI of the HTTP request serves as the message's destination.<br />Addressing at the transport level is sufficient for many existing services, but it has been a limiting factor in the development of others. WS-Addressing defines standard ways to route a message over multiple transports or direct a response to a third party.<br /></div><br /><br />Simply put, we want to put the transport information in the SOAP message Header Part. lets see below SOAP message with WS-Addressing feature.<br /><br />A SOAP 1.2 message, with WS-Addressing, sent over HTTP transport looks like:<br /><div style="background:gray;"><br />(001) POST /fabrikam/Purchasing HTTP 1.1/POST<br />(002) Host: example.com<br />(003) SOAPAction: http://example.com/fabrikam/SubmitPO<br />(004)<br />(005) &lt;s:envelope s="http://www.w3.org/2003/05/soap-envelope" wsa="http://www.w3.org/2005/08/addressing/"&gt;<br />(006) &lt;s:header&gt;<br />(007) &lt;wsa:messageid&gt;<br />(008) uuid:e197db59-0982-4c9c-9702-4234d204f7f4<br />(009) &lt;/wsa:messageid&gt;<br /><span style="color:red;"><br />(010) &lt;wsa:to&gt;<br />(011) http://example.com/fabrikam/Purchasing<br />(012) &lt;/wsa:to&gt;<br />(013) &lt;wsa:action&gt;<br />(014) http://example.com/fabrikam/SubmitPO<br />(015) &lt;/wsa:action&gt;</span><br />(016) &lt;s:header&gt;<br />(017) &lt;s:body&gt;<br />(018) ...<br />(019) &lt;/s:body&gt;<br />(020) &lt;/s:envelope&gt;<br /></div><br /><br />In the WS-Addressing specification, it has introduced two concepts:<br />1. Endpoint Reference (EPR)<br />2. Message Addressing Properties (MAPs)<br />Like an article[1] says: we can think the EPR as the concrete address. consider the MAPs as envelop layout, such as it has receiver etc. The benefits of the WS-Addressing is that we put the transport in the SOAP message, so we are able to deal with message across multiple transports. <br /><br />Reference:<br />[1] <a href="http://dev2dev.bea.com/pub/a/2005/01/ws_addressing_intro.html">http://dev2dev.bea.com/pub/a/2005/01/ws_addressing_intro.html</a><br />[2] <a href="http://www.javapassion.com/webservices/wsaddressing.pdf">http://www.javapassion.com/webservices/wsaddressing.pdf</a><br /><br />You can see the chinese version of this article <a href="http://jeffyuchang.spaces.live.com/blog/cns!4001C604AF3F011!480.entry">here</a>.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>147</wp:post_id>
		<wp:post_date>2007-09-06 19:11:00</wp:post_date>
		<wp:post_date_gmt>2007-09-06 08:11:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>brief-introduction-on-ws-addressing</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="soa"><![CDATA[SOA]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_blog</wp:meta_key>
			<wp:meta_value><![CDATA[jeff.familyyu.net]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_author</wp:meta_key>
			<wp:meta_value><![CDATA[Jeff Yu   (余昌)]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_429d160645182d8e72b48e90f5e50eb3_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[6884336401056800392]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>JCA links</title>
		<link>http://jeff.familyyu.net/2007/09/17/jca-links/</link>
		<pubDate>Sun, 16 Sep 2007 15:07:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang.wordpress.com/2007/09/17/jca-links</guid>
		<description></description>
		<content:encoded><![CDATA[Some links about JCA (Java Connector architecture):<br />1. <a href="http://www.theserverside.com/tt/articles/article.tss?l=J2EE1_4">Serve it up Java2 Enterprise Edition 1.4</a><br />2. <a href="http://www.ibm.com/developerworks/edu/j-dw-javajca-i.html">Introduction to the J2EE Connector Architecture</a> (wrote by IBM guy)<br />3. <a href="http://www.javaworld.com/javaworld/jw-11-2001/jw-1121-jca.html">Connect the enterprise with the JCA, Part 1</a><br />4. <a href="http://www.javaworld.com/javaworld/jw-02-2002/jw-0201-jca2.html">Connect the enterprise with the JCA, Part 2</a><br />5. <a href="http://www.javaworld.com/javaworld/jw-06-2005/jw-0606-jca.html">Develop inbound connectors with JCA 1.5</a><br />6. <a href="http://java.sun.com/j2ee/connector/download.html">JCA specifications</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>148</wp:post_id>
		<wp:post_date>2007-09-17 02:07:00</wp:post_date>
		<wp:post_date_gmt>2007-09-16 15:07:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>jca-links</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="java"><![CDATA[Java]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_blog</wp:meta_key>
			<wp:meta_value><![CDATA[jeff.familyyu.net]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_author</wp:meta_key>
			<wp:meta_value><![CDATA[Jeff Yu   (余昌)]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_429d160645182d8e72b48e90f5e50eb3_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[5139544543215729601]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>More JCA Links</title>
		<link>http://jeff.familyyu.net/2007/09/19/more-jca-links/</link>
		<pubDate>Wed, 19 Sep 2007 10:51:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang.wordpress.com/2007/09/19/more-jca-links</guid>
		<description></description>
		<content:encoded><![CDATA[1. <a href="http://www.ibm.com/developerworks/java/library/j-jca1/">JCA 1.5, Part 1: Optimizations and life-cycle management</a><br />2. <a href="http://www.ibm.com/developerworks/java/library/j-jca2/">JCA 1.5, Part 2: Work management and transaction inflow</a><br />3. <a href="http://www.ibm.com/developerworks/opensource/library/j-jca3/">JCA 1.5, Part 3: Message inflow</a><br />4. <a href="http://developers.sun.com/appserver/reference/techart/resource_adapters.html">Creating Resource Adapters with J2EE Connector Architecture 1.5</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>151</wp:post_id>
		<wp:post_date>2007-09-19 21:51:00</wp:post_date>
		<wp:post_date_gmt>2007-09-19 10:51:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>more-jca-links</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="java"><![CDATA[Java]]></category>
		<wp:postmeta>
			<wp:meta_key>blogger_blog</wp:meta_key>
			<wp:meta_value><![CDATA[jeff.familyyu.net]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_author</wp:meta_key>
			<wp:meta_value><![CDATA[Jeff Yu   (余昌)]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_429d160645182d8e72b48e90f5e50eb3_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[8820367910596362370]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Create a simple EJB 2.x sample.</title>
		<link>http://jeff.familyyu.net/2007/09/22/create-a-simple-ejb2-sample/</link>
		<pubDate>Fri, 21 Sep 2007 17:31:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang.wordpress.com/2007/09/22/create-a-simple-ejb-sample</guid>
		<description></description>
		<content:encoded><![CDATA[Although I have been developing EJB for almost two years, I havent spent time in investigating the EJB infrastructure, especially in this EJB-anti era.
Since now I am working on the JCA1.5 stuff, need to pick up the EJB stuff again, and this is a good chance for me to investigate EJB a little more.

1. RemoteObject
[java]
public interface GreeterRemote extends EJBObject {
String greetMe(String user) throws RemoteException;
}
[/java]
2. HomeObject
[java]
public interface GreeterHome extends EJBHome {
GreeterHome create() throws RemoteException, CreateException;
}
[/java]
3. BusinessImpl (SessionBean)
[java]
public class GreeterBean implements SessionBean {

private SessionContext sessionContext;

public void ejbActivate() throws EJBException, RemoteException {
}

public void ejbPassivate() throws EJBException, RemoteException {
}

public void ejbRemove() throws EJBException, RemoteException {
}

public void setSessionContext(SessionContext context) throws EJBException, RemoteException {
this.sessionContext = context;
}

/**
* Implement business method.
*/
public String greetMe(String user) throws EJBException, RemoteException {
return &quot;From Server, greetMe by [&quot; + user + &quot;]&quot;;
}
}
[/java]
4. ejb-jar.xml

5. jboss-ejb-jar.xml (vendor-specific xml config)

6. Package the files, and deploy it to container.
The jar structure would be:
|---META-INF
|-----------/ejb-jar.xml
|-----------/jboss-ejb-jar.xml
|----java
|--------/GreeterRemote.class
|--------/GreeterHome.class
|--------/GreeterBean.class]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>152</wp:post_id>
		<wp:post_date>2007-09-22 04:31:00</wp:post_date>
		<wp:post_date_gmt>2007-09-21 17:31:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>create-a-simple-ejb2-sample</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="java"><![CDATA[Java]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_blog</wp:meta_key>
			<wp:meta_value><![CDATA[jeff.familyyu.net]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_author</wp:meta_key>
			<wp:meta_value><![CDATA[Jeff Yu   (余昌)]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_429d160645182d8e72b48e90f5e50eb3_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[4096839380831492062]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[create-a-simple-ejb-sample]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>ClassLoader Links</title>
		<link>http://jeff.familyyu.net/2007/09/25/classloader-links/</link>
		<pubDate>Mon, 24 Sep 2007 16:25:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang.wordpress.com/2007/09/25/classloader-links</guid>
		<description></description>
		<content:encoded><![CDATA[Recently, I am working on implementing the JCA stuff, one thing is very important for me is about the ClassLoader. ClassLoader becomes more and more important as now we got a lot of middle-ware stuff. You know, software has the version, a specific software can have multiple version as time goes by, so different middle-ware software might use different jar version, it may caused something incompatible due to different version.(such as API changes etc).<br /><br />1. <a href="http://tomcat.apache.org/tomcat-5.5-doc/class-loader-howto.html">Tomcat ClassLoader explained.</a><br />2. <a href="http://java.sun.com/j2se/1.4.2/docs/guide/standards/index.html">JDK endorsed standards override mechanism.</a><br />3. <a href="http://java.sun.com/j2se/1.4.2/docs/guide/extensions/spec.html">Extension Mechanism Architecuture</a><br />4. <a href="http://www.theserverside.com/tt/articles/article.tss?l=ClassLoading">Understanding J2EE Application Server Class Loading Architectures</a><br />5. <a href="http://www.onjava.com/lpt/a/onjava/2001/06/26/ejb.html">EJB 2 and J2EE Packaging</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>153</wp:post_id>
		<wp:post_date>2007-09-25 03:25:00</wp:post_date>
		<wp:post_date_gmt>2007-09-24 16:25:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>classloader-links</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="java"><![CDATA[Java]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_blog</wp:meta_key>
			<wp:meta_value><![CDATA[jeff.familyyu.net]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_author</wp:meta_key>
			<wp:meta_value><![CDATA[Jeff Yu   (余昌)]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_429d160645182d8e72b48e90f5e50eb3_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[1230313106353849222]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>计算机技术性的Blog迁移到Blogger上.</title>
		<link>http://jeff.familyyu.net/2007/10/01/%e8%ae%a1%e7%ae%97%e6%9c%ba%e6%8a%80%e6%9c%af%e6%80%a7%e7%9a%84blog%e8%bf%81%e7%a7%bb%e5%88%b0blogger%e4%b8%8a/</link>
		<pubDate>Mon, 01 Oct 2007 10:55:29 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang1.wordpress.com/2007/10/01/%e8%ae%a1%e7%ae%97%e6%9c%ba%e6%8a%80%e6%9c%af%e6%80%a7%e7%9a%84blog%e8%bf%81%e7%a7%bb%e5%88%b0blogger%e4%b8%8a</guid>
		<description></description>
		<content:encoded><![CDATA[<div id="msgcns!4001C604AF3F011!485" class="bvMsg">接下去的技术性的Blog将转移到Blogger上.地址是: <a href="http://jeffyuchang.blogspot.com">http://jeffyuchang.blogspot.com</a>.&nbsp;

</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>141</wp:post_id>
		<wp:post_date>2007-10-01 10:55:29</wp:post_date>
		<wp:post_date_gmt>2007-10-01 10:55:29</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e8%ae%a1%e7%ae%97%e6%9c%ba%e6%8a%80%e6%9c%af%e6%80%a7%e7%9a%84blog%e8%bf%81%e7%a7%bb%e5%88%b0blogger%e4%b8%8a</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="others"><![CDATA[Others]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>spaces_a43755b404d273dfcedbd14ccb4f51ab_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[http://cid-04001c604af3f011.users.api.live.net/Users(288261576051650577)/Blogs('4001C604AF3F011!102')/Entries('4001C604AF3F011!485')?authkey=X13wC75MXT0%24]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Write your own ClassLoader</title>
		<link>http://jeff.familyyu.net/2007/09/28/write-your-own-classloader/</link>
		<pubDate>Fri, 28 Sep 2007 04:12:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang.wordpress.com/2007/09/28/write-your-own-classloader</guid>
		<description></description>
		<content:encoded><![CDATA[In general, classLoader is using the parent-first algorithm, which means if you want to load a Class, it will find the parent ClassLoader (it doesn't mean it is parent-class), if the parent ClassLoader doesn't find the specified Class, and then it tries to load class in the child classLoader.<br />So when you need to write your own ClassLoader? if you want to implement child-first classloader algorithm, then you need to write. A typical scenario is the Application Server that you are using is using older third party jar than you need for your APP.<br /><br />Two links about custom classloader:<br />1. <a href="http://www.javaworld.com/javaworld/javaqa/2003-06/01-qa-0606-load.html">Find a way out of the ClassLoader maze</a><br /><br />2. <a href="http://www.javaworld.com/javaworld/javaqa/2003-03/01-qa-0314-forname.html">Get a load of that name</a>!]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>154</wp:post_id>
		<wp:post_date>2007-09-28 15:12:00</wp:post_date>
		<wp:post_date_gmt>2007-09-28 04:12:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>write-your-own-classloader</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="java"><![CDATA[Java]]></category>
		<category domain="category" nicename="thoughts"><![CDATA[Thoughts]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_blog</wp:meta_key>
			<wp:meta_value><![CDATA[jeff.familyyu.net]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_author</wp:meta_key>
			<wp:meta_value><![CDATA[Jeff Yu   (余昌)]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_429d160645182d8e72b48e90f5e50eb3_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[4806088428519098022]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Implementing a JCA Resource Adapter.</title>
		<link>http://jeff.familyyu.net/2007/09/28/implementing-a-jca-resource-adapter/</link>
		<pubDate>Fri, 28 Sep 2007 10:53:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang.wordpress.com/2007/09/28/implementing-a-jca-resource-adapter</guid>
		<description></description>
		<content:encoded><![CDATA[JCA(Java Connector Architecture) is a bridge that connect Exteranl System (i.e EIS) to App Server, so that they can communicate.<br />We can split the connection into two categories.<br />1. Outbound connection.<br />This is App Server initialize the request to EIS. The flow is: App Server -&gt; RA (resource Adapter) -&gt; EIS.<br />2. Inbound connection.<br />This is EIS initialize the request to App Server. The flow is: EIS -&gt; RA -&gt; App Server.<br />One thing needs to say, this is also called Message-Inflow support, (a.k.a MDB support), it is introduced in the JCA1.5. Here it considers the MDBean as an endpoint that accept the incoming Message which send from the EIS. The RA needs to establish a listener, whose responsibility is to accept Message from EIS, and then convert the Message to the MDBean acceptable Object if any, deliver the received Message to the MDBean.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>155</wp:post_id>
		<wp:post_date>2007-09-28 21:53:00</wp:post_date>
		<wp:post_date_gmt>2007-09-28 10:53:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>implementing-a-jca-resource-adapter</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="java"><![CDATA[Java]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_blog</wp:meta_key>
			<wp:meta_value><![CDATA[jeff.familyyu.net]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_author</wp:meta_key>
			<wp:meta_value><![CDATA[Jeff Yu   (余昌)]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_429d160645182d8e72b48e90f5e50eb3_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[8940854836059819372]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Two commencement speeches.</title>
		<link>http://jeff.familyyu.net/2007/10/01/two-commencement-speeches/</link>
		<pubDate>Sun, 30 Sep 2007 17:58:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang.wordpress.com/2007/10/01/two-commencement-speeches</guid>
		<description></description>
		<content:encoded><![CDATA[I really enjoy these two speeches, especially for Steve Jobs, it really can cheer me up.

1. <a href="http://news-service.stanford.edu/news/2005/june15/jobs-061505.html">Steve Jobs Stanford commencement speech (Transcript)</a>
<div>

<a href="http://youtube.com/v/D1R-jKKp3NA">http://youtube.com/v/D1R-jKKp3NA</a>

</div>
2. <a href="http://www.scribd.com/doc/97979/Bill-Gates-Harvard-Commencement-transcript">Bill Gates Harvard Commencement speech (Transcript)</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>156</wp:post_id>
		<wp:post_date>2007-10-01 04:58:00</wp:post_date>
		<wp:post_date_gmt>2007-09-30 17:58:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>two-commencement-speeches</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="others"><![CDATA[Others]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_blog</wp:meta_key>
			<wp:meta_value><![CDATA[jeff.familyyu.net]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_author</wp:meta_key>
			<wp:meta_value><![CDATA[Jeff Yu   (余昌)]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_429d160645182d8e72b48e90f5e50eb3_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[7406898829224417261]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Daily used Applications</title>
		<link>http://jeff.familyyu.net/2007/10/01/daily-used-applications/</link>
		<pubDate>Mon, 01 Oct 2007 06:53:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang.wordpress.com/2007/10/01/daily-used-applications</guid>
		<description></description>
		<content:encoded><![CDATA[Listed out some application that I used daily basis.

1. Text editor
Notepad++ (I used the UltraEdit before, but then found it was a little bit slow in my computer, so switch to a free software)

2. Java Editor
Eclipse

3. Mail Client
Thunderbird

4. Source Control
Subversion

5. Explore
Firefox

6. download tool
Thunder

7. IM
trillian

8. Database Designer
DBDesigner

.....
(To be continued)]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>157</wp:post_id>
		<wp:post_date>2007-10-01 17:53:00</wp:post_date>
		<wp:post_date_gmt>2007-10-01 06:53:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>daily-used-applications</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="others"><![CDATA[Others]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_blog</wp:meta_key>
			<wp:meta_value><![CDATA[jeff.familyyu.net]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_author</wp:meta_key>
			<wp:meta_value><![CDATA[Jeff Yu   (余昌)]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_429d160645182d8e72b48e90f5e50eb3_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[4682395917130364218]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>CruiseControl Tips</title>
		<link>http://jeff.familyyu.net/2007/10/10/cruisecontrol-tips/</link>
		<pubDate>Wed, 10 Oct 2007 10:08:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang.wordpress.com/2007/10/10/cruisecontrol-tips</guid>
		<description></description>
		<content:encoded><![CDATA[Out Of Memory Solution:<br /><br />1. Downloaded saxon6-5-5.zip from saxon.sourceforge.net<br />2. Extracted saxon.jar from the zip file<br />3. Added saxon.jar to CC lib dir<br />4. Removed xalan-2.6.0.jar from CC lib dir<br />5. Edited CRUISE_PATH in cruisecontrol.sh to add saxon.jar to classpath<br />-----------------------------------------------------------------------------------------------------<br />FAQ link:<br /><br />http://confluence.public.thoughtworks.org/display/CC/Frequently+Asked+Questions#FrequentlyAskedQuestions-faq4<br />-----------------------------------------------------------------------------------------<br /><br />Q: I am running some jUnit tests, and the results don't show up in cruise control's JSP. What's going on?<br /><br />A: There are a couple things that the buildresults.jsp needs. First, your jUnit results need to be xml formatted. You can set this by adding  element, within your jUnit ANT task. Second, make sure that you merge your unit test results with cruise control's own xml report of the build. Do this in the  section of your config file, like this:<br /><br />if you had one file:<br /><br /> &amp;lt log ...&amp;gt<br />    &amp;lt merge file=""/&amp;gt<br /> &amp;lt /log &amp;gt<br /><br />and if you had a directory of files:<br /><br />&amp;lt log ...&amp;gt<br />    &amp;lt merge dir=""/&amp;gt<br /> &amp;lt/log &amp;gt<br /><br />Cruise control may also report that you don't have any unit tests if they failed to build and never got to the point of being run in your junit task.<br /><br />Finally, if you are using a custom XML format and not the default Ant one, you will need to update unittests.xsl as appropriate<br />------------------------------------------------------------------------------------------<br />Code coverage solution<br /><br />We link to it directly by adding something similar to the following to buildresults.jsp:<br />&amp;lt cruisecontrol:artifactsLink &amp;gt<br />  <a href='../jcoverage'>JCoverage Report</a><br />&amp;lt /cruisecontrol:artifactsLink &amp;gt<br />Er, I think that"s right. In any case, you should just be able to follow the default "Artifacts" link from the buildresults page, right? And if it helps, the line in your config.xml that publishes the jcoverage dir should be similar to the following: <br /><br />-----------------------------------------------------------------------------------------------------<br />General CruiseControl Add Button (Tab) solution:<br /><br />http://sourceforge.net/mailarchive/message.php?msg_id=15825063]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>158</wp:post_id>
		<wp:post_date>2007-10-10 21:08:00</wp:post_date>
		<wp:post_date_gmt>2007-10-10 10:08:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>cruisecontrol-tips</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="java"><![CDATA[Java]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_blog</wp:meta_key>
			<wp:meta_value><![CDATA[jeff.familyyu.net]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_author</wp:meta_key>
			<wp:meta_value><![CDATA[Jeff Yu   (余昌)]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_429d160645182d8e72b48e90f5e50eb3_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[2229641357976380424]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>J2EE Application Server&#039;s ClassLoader</title>
		<link>http://jeff.familyyu.net/2007/10/11/j2ee-application-servers-classloader/</link>
		<pubDate>Thu, 11 Oct 2007 03:03:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang.wordpress.com/2007/10/11/j2ee-application-servers-classloader</guid>
		<description></description>
		<content:encoded><![CDATA[1. <a href="http://www.jboss.org/wiki/Wiki.jsp?page=ClassLoadingConfiguration">JBoss ClassLoader Configuration</a><br /><br />2. <a href="http://www.jboss.org/wiki/Wiki.jsp?page=JBossClassLoadingUseCases">JBoss ClassLoader UseCases</a> (Stongly recommend)<br /><br />3. <a href="http://edocs.bea.com/wls/docs92/programming/classloading.html">Weblogic ClassLoader</a> (Strongly recommend)]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>159</wp:post_id>
		<wp:post_date>2007-10-11 14:03:00</wp:post_date>
		<wp:post_date_gmt>2007-10-11 03:03:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>j2ee-application-servers-classloader</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="java"><![CDATA[Java]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_blog</wp:meta_key>
			<wp:meta_value><![CDATA[jeff.familyyu.net]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_author</wp:meta_key>
			<wp:meta_value><![CDATA[Jeff Yu   (余昌)]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_429d160645182d8e72b48e90f5e50eb3_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[1211267783044690946]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>72</wp:comment_id>
			<wp:comment_author><![CDATA[Nellie]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://salinasinsurance.blogspot.com</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2008-11-11 09:57:00</wp:comment_date>
			<wp:comment_date_gmt>2008-11-10 22:57:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Well written article.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>SOAP with Attachment Links</title>
		<link>http://jeff.familyyu.net/2007/10/22/soap-with-attachment-links/</link>
		<pubDate>Mon, 22 Oct 2007 02:51:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang.wordpress.com/2007/10/22/soap-with-attachment-links</guid>
		<description></description>
		<content:encoded><![CDATA[Some links on SwA and MTOM.<br /><br />1. <a href="http://dev2dev.bea.com/pub/a/2004/05/websvcs_nottingham.html">Understanding Webservice Attachment</a><br />2. <a href="http://ws.apache.org/axis2/1_0/mtom-guide.html#3">Axis2 sending binary data with soap</a> (recommend)<br />3. <a href="http://www.theserverside.com/tt/articles/article.tss?l=SendingAttachmentsWithSOAP">Sending Attachment with SOAP</a> (Strongly recommend)<br />4. <a href="http://www.mnot.net/blog/2004/02/14/xop">XOP and MTOM</a><br />5. <a href="http://cwiki.apache.org/CXF20DOC/mtom-attachments.html">Enable MTOM in Apache CXF</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>160</wp:post_id>
		<wp:post_date>2007-10-22 13:51:00</wp:post_date>
		<wp:post_date_gmt>2007-10-22 02:51:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>soap-with-attachment-links</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="java"><![CDATA[Java]]></category>
		<category domain="category" nicename="soa"><![CDATA[SOA]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_blog</wp:meta_key>
			<wp:meta_value><![CDATA[jeff.familyyu.net]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_author</wp:meta_key>
			<wp:meta_value><![CDATA[Jeff Yu   (余昌)]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_429d160645182d8e72b48e90f5e50eb3_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[819804856717129363]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>JBoss war classloader</title>
		<link>http://jeff.familyyu.net/2007/10/25/jboss-war-classloader/</link>
		<pubDate>Thu, 25 Oct 2007 10:52:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang.wordpress.com/2007/10/25/jboss-war-classloader</guid>
		<description></description>
		<content:encoded><![CDATA[(Note: below only has been tested against JBoss4.0.5 and JBoss4.2)

By default, when you deploy a war file to JBoss, it uses the "child-first" and "tomcat" classloader, which is not as same as JBoss's classloader.

If you want to change it to use the JBoss's classloader, Need to update the "jboss-service.xml" in the $JBoss_HOME/server/default/deploy/jbossweb-tomcat55.sar/META-INF folder (for JBoss4.0.5). This file located in the $JBoss_HOME/server/default/deploy/jboss-web.deployer/META-INF folder for JBoss4.2.1.

There are two options in the jboss-service.xml:
[xml]
&lt;attribute name=&quot;Java2ClassLoadingCompliance&quot;&gt;false&lt;/attribute&gt;
&lt;attribute name=&quot;UseJBossWebLoader&quot;&gt;false&lt;/attribute&gt;
[/xml]
Above is the value by default.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>161</wp:post_id>
		<wp:post_date>2007-10-25 21:52:00</wp:post_date>
		<wp:post_date_gmt>2007-10-25 10:52:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>jboss-war-classloader</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="java"><![CDATA[Java]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_blog</wp:meta_key>
			<wp:meta_value><![CDATA[jeff.familyyu.net]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_author</wp:meta_key>
			<wp:meta_value><![CDATA[Jeff Yu   (余昌)]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_429d160645182d8e72b48e90f5e50eb3_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[8813707998466381984]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>OSGI introduction</title>
		<link>http://jeff.familyyu.net/2007/11/07/osgi-introduction/</link>
		<pubDate>Tue, 06 Nov 2007 15:28:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang.wordpress.com/2007/11/07/osgi-introduction</guid>
		<description></description>
		<content:encoded><![CDATA[Today, I am totally concentrating on the OSGI stuff, firstly, what OSGI tries to resolve or provide.<br />1. Better separation of application logic into modules, with runtime enforcement of module boundaries.<br />2. The ability to deploy multiple versions of a module (or library) concurrently. (Which is a big problem for today's classloader).<br />3. The ability to dynamically discover and use services provided by other modules in the system<br />4. The ability to dynamically install, update and uninstall modules in a running system<br /><br />Like BEA guy in the presentation[Ref 4] said, OSGI is more like a SOA stuff, see the service registry concept, it is very similar to the UDDI... well, since OSGI is still in developing in the JEE world, there are some issues right now. (excerpt from the BEA guy's presentation).<br /><br />1. configuration, dependency ordering. (for example, will start this bundle if others bundles are started).<br />2. security? (I am not familiar with this stuff, but it is saying it is not reflecting on the OSGI, it is on Java itself).<br /><br />....<br /><br />Well, the most exiting thing about the OSGI is, by introducing the OSGI, we will build the micro-kernel system. such as, every system will has its own kernel, and all others related services are built on this, as a bundle(from OSGI spec) form. This is how operating system did. It has a kernel, and other software all are build on this kernel... I would say it would definitely change how we used to build enterprise system.<br /><br /><br />References:<br />1. <a href="http://neilbartlett.name/blog/osgi-articles/">http://neilbartlett.name/blog/osgi-articles/</a><br />2. <a href="http://static.springframework.org/osgi/docs/1.0-m3/reference/html_single/">Spring OSGI Reference Guide</a><br />3. <a href="http://www.parleys.com/display/PARLEYS/OSGi,+the+good+the+bad+the+ugly">BEA OSGI presentation</a><br />4. <a href="http://felix.apache.org/site/presentations.data/best-practices-apachecon-20060628.pdf">OSGI Best Practice</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>162</wp:post_id>
		<wp:post_date>2007-11-07 02:28:00</wp:post_date>
		<wp:post_date_gmt>2007-11-06 15:28:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>osgi-introduction</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="java"><![CDATA[Java]]></category>
		<category domain="category" nicename="osgi"><![CDATA[OSGi]]></category>
		<category domain="category" nicename="thoughts"><![CDATA[Thoughts]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_blog</wp:meta_key>
			<wp:meta_value><![CDATA[jeff.familyyu.net]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_author</wp:meta_key>
			<wp:meta_value><![CDATA[Jeff Yu   (余昌)]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_429d160645182d8e72b48e90f5e50eb3_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[4202961330442508187]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>OSGI doesn&#039;t look up class in its own package.</title>
		<link>http://jeff.familyyu.net/2007/11/07/osgi-doesnt-look-up-class-in-its-own-package/</link>
		<pubDate>Tue, 06 Nov 2007 15:46:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang.wordpress.com/2007/11/07/osgi-doesnt-look-up-class-in-its-own-package</guid>
		<description></description>
		<content:encoded><![CDATA[Today I am trying the sample code from <a href="http://www.eclipsezone.com/eclipse/forums/t90796.html">this article.</a>.<br /><br />Say, I am exporting one package as: com.example.movies. Then I write another bundle called FlatMovies.jar that contains a class inside com.example.movies(say package as the exported one).<br /><br />In this situation, I would get a ClassNotFoundException when I try to start the FlatMovies bundle..<br /><br />Not sure why, here make it a note.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>163</wp:post_id>
		<wp:post_date>2007-11-07 02:46:00</wp:post_date>
		<wp:post_date_gmt>2007-11-06 15:46:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>osgi-doesnt-look-up-class-in-its-own-package</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="java"><![CDATA[Java]]></category>
		<category domain="category" nicename="osgi"><![CDATA[OSGi]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_blog</wp:meta_key>
			<wp:meta_value><![CDATA[jeff.familyyu.net]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_author</wp:meta_key>
			<wp:meta_value><![CDATA[Jeff Yu   (余昌)]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_429d160645182d8e72b48e90f5e50eb3_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[6262428081048861330]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>More thoughts and refrences on OSGI</title>
		<link>http://jeff.familyyu.net/2007/11/07/more-thoughts-and-refrences-on-osgi/</link>
		<pubDate>Wed, 07 Nov 2007 05:46:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang.wordpress.com/2007/11/07/more-thoughts-and-refrences-on-osgi</guid>
		<description></description>
		<content:encoded><![CDATA[After seeing the Costin Leau's presentation, get a bit more familiar with the OSGI, as Costin said, OSGI primarily tries to approach following problem:<br /><br />1. System Modularity. (visibility)<br />2. Versioning.<br />3. (Operational Control) Dynamic loading/unloading.<br /><br />The most hard part of it would be:<br /><br />1. Declarative Service Registry. In other words, it is about beans (service) collaboration.<br />2. Build Bundle Repository. I know it is not so hard as the first one, but it takes time to convert all the existed jars to bundle...<br /><br /><br />Reference<br />1. <a href="http://www.parleys.com/display/PARLEYS/Spring%20OSGi">Costin Leau's Spring-OSGI presentation</a><br />2. <a href="http://www.infoq.com/interviews/osgi-adrian-colyer">Adrian Coyler's interview at InfoQ</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>164</wp:post_id>
		<wp:post_date>2007-11-07 16:46:00</wp:post_date>
		<wp:post_date_gmt>2007-11-07 05:46:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>more-thoughts-and-refrences-on-osgi</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="java"><![CDATA[Java]]></category>
		<category domain="category" nicename="osgi"><![CDATA[OSGi]]></category>
		<wp:postmeta>
			<wp:meta_key>blogger_blog</wp:meta_key>
			<wp:meta_value><![CDATA[jeff.familyyu.net]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_author</wp:meta_key>
			<wp:meta_value><![CDATA[Jeff Yu   (余昌)]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_429d160645182d8e72b48e90f5e50eb3_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[7215801145773090738]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>A little thinking on REST</title>
		<link>http://jeff.familyyu.net/2007/11/07/a-little-thinking-on-rest/</link>
		<pubDate>Wed, 07 Nov 2007 06:08:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang.wordpress.com/2007/11/07/a-little-thinking-on-rest</guid>
		<description></description>
		<content:encoded><![CDATA[<a href="http://www.ics.uci.edu/~fielding/pubs/dissertation/rest_arch_style.htm">REST</a> is becoming a buzzword now, a lot of people are adopting REST, building RESTful services, especially for Dynamic Language, Ruby On Rails application is an obvious example on this.<br /><br />However, I am thinking that for Java, it still needs some time to move to RESTful Service, or there are still some issues that RESTful services need to solve, or needs some time to take.<br /><br />1. Now, we can expose services RESTful way, but due to the data format is not defined, you can use any kind of data format if you want. So you need to use your own parser to parse the data to Java Object. (Using Java as an implementation language for example). Yeah, I know we can used the 3rd data binding library, such as JAXB, Xmlbean etc, but we still need to define our own xml schema for data exchange.<br /><br />I think why the HTTP succeed is that it has a Engine(Internet Explore) that can consume the Resources. For HTTP, it always return the resources as HTML format, which can consumed by Internet Explore. Now, every one has that engine, so it is not a problem.<br /><br />Yes, RESTful web services do not have the operation concept, but its data still have not been defined yet. Someone said constraints leads to the simplicity... <a href="http://atompub.org/">Atom</a> seems to define data format. So that we can get data in a uniform way too.<br /><br />2. Resource-Oriented versus Service-Oriented development, this is a mind change stuff, and I guess it needs some time for developers to change their mind and adopt it.<br /><br />3. I am not sure that from now on, developers are all concern about Resources, in their mind, there are no databases, no files, all of them are Resources... say, there might be not using ORM tool, since now developers are all operating the object stuff, and all other data are exposed in RESTful way..<br /><br />4. Security stuff, using HTTPS do the authentication sometimes is too heavy...<br /><br />Very Interesting...]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>165</wp:post_id>
		<wp:post_date>2007-11-07 17:08:00</wp:post_date>
		<wp:post_date_gmt>2007-11-07 06:08:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>a-little-thinking-on-rest</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="java"><![CDATA[Java]]></category>
		<category domain="category" nicename="rest"><![CDATA[REST]]></category>
		<wp:postmeta>
			<wp:meta_key>blogger_blog</wp:meta_key>
			<wp:meta_value><![CDATA[jeff.familyyu.net]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_author</wp:meta_key>
			<wp:meta_value><![CDATA[Jeff Yu   (余昌)]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_429d160645182d8e72b48e90f5e50eb3_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[5246751760824805316]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>JNDI introduction</title>
		<link>http://jeff.familyyu.net/2007/11/11/jndi-introduction/</link>
		<pubDate>Sat, 10 Nov 2007 19:21:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang.wordpress.com/2007/11/11/jndi-introduction</guid>
		<description></description>
		<content:encoded><![CDATA[If you are using EJB, you must be familiar with JNDI concept, since if you want to find a EJB Remote Object, you need to obtain the object through JNDI..
Yes, I know JNDI, it is a naming service and directory service for EJB, that was my original thought and understanding on JNDI. JNDI is so simple that I could imagine that and I don't even need to take a look at some related materials on it, we can get its meaning from the name itself. So it gives me an impression that the JNDI is belonged to the EJB, if you want to use JNDI, you need to start the EJB container, which I really don't like to do that today. (I'm a POJO fans, the deploy-redeploy cycle test is really a time-consuming, low productivity stuff).

Today, I am looking on the JMS stuff, which I need to talk with JNDI again, from my original understanding, I need to start the EJB container to use JNDI, then I found the tutorial[1] from SUN, and then I found my original understanding was wrong, JNDI is not belonged to EJB, we just can say EJB uses JNDI by providing RMI JNDI spi.

The JNDI offer two functionalities:
1. Name &amp; Naming service.
2. Directory &amp; Directory Service.

It is also involved with two Interfaces:
1. API. Application Programming Interface.
2. SPI: Service Providing Interface.

So, for the EJB case, it provides the RMI as SPI implementation; for the JMS case, its implementation, such as ActiveMQ, will provide the JNDI SPI implementation.

Lets see how we get a Object from JNDI typically:
[java]
Hashtable env = new Hashtable();
env.put(Context.INITIAL_CONTEXT_FACTORY,&quot;com.sun.jndi.fscontext.RefFSContextFactory&quot;);
Context ctx = new InitialContext(env);
Object obj = ctx.lookup(name);
System.out.println(name + &quot; is bound to: &quot; + obj);
ctx.close();
[/java]
We set the "INITIAL_CONTEXT_FACTORY" in the environment, which is the SPI's implementation's class. we might need to set other properties that the SPI's implementation need through the "key-value" in the environment, such as provider url, username, password etc.

Reference
1: <a href="http://java.sun.com/products/jndi/tutorial/trailmap.html">Sun's JNDI tutorial</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>166</wp:post_id>
		<wp:post_date>2007-11-11 06:21:00</wp:post_date>
		<wp:post_date_gmt>2007-11-10 19:21:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>jndi-introduction</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="java"><![CDATA[Java]]></category>
		<wp:postmeta>
			<wp:meta_key>blogger_blog</wp:meta_key>
			<wp:meta_value><![CDATA[jeff.familyyu.net]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_author</wp:meta_key>
			<wp:meta_value><![CDATA[Jeff Yu   (余昌)]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_429d160645182d8e72b48e90f5e50eb3_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[7877351179877615140]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>IMS rolled out its 0.1 version</title>
		<link>http://jeff.familyyu.net/2007/11/13/ims-rolled-out-its-0-1-version/</link>
		<pubDate>Mon, 12 Nov 2007 17:32:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang.wordpress.com/2007/11/13/ims-rolled-out-its-0-1-version</guid>
		<description></description>
		<content:encoded><![CDATA[I created a little project at <a href="http://code.google.com/p/blogging/">Google Code</a>, it rolled out its 0.1 version in 5 Nov 2007.. In this release, it demonstrates below functionalities (copied from release note)..

<span style="font-weight: bold;">ims-core module</span>
<ol>
	<li>Using JAXWS + JAXB (CXF runtime) to publish web service.</li>
	<li>Using Spring acegi as web service authorization.</li>
	<li>Using ws-security (plain password) as authentication.</li>
	<li>Using Spring AOP transaction.</li>
	<li>Using DBUnit to do the dao unit test.</li>
	<li>Using easymock to do the service layer unit test.</li>
	<li>Using cxf local transport to do the web service unit test.</li>
</ol>
<span style="font-weight: bold;">ims-web module</span>
<ol>
	<li>Using CXF wsdl2java (codegen tool) to generate the stub.</li>
	<li>Using JAXWS customization to use the java.util.Date instead of XMLGregorianCalendar.</li>
	<li>Using JAXWS + JAXB (CXF runtime) to access the web service.</li>
	<li>Using Spring acegi web application filter and Jcaptcha as security implementation.</li>
	<li>Using div + css as layout design implementation.</li>
</ol>
You can download the source code from <a href="http://blogging.googlecode.com/files/ims-0.1-src.zip">here</a>, since its war size is about 20M, I don't provide it in the website, you need to refer to the README.txt in the source code to build it, it is quite straightforward to get it working.. (actually you just need to set up database manually, and then update the database connection config file appropriately).

I've also created some tasks for 0.2 release or future in the <a href="http://code.google.com/p/blogging/issues/list">issue page</a>, if you want to join this project, drop me a mail, (or add a comment here), I would add you as a commiter.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>167</wp:post_id>
		<wp:post_date>2007-11-13 04:32:00</wp:post_date>
		<wp:post_date_gmt>2007-11-12 17:32:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>ims-rolled-out-its-0-1-version</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="cxf"><![CDATA[CXF]]></category>
		<category domain="category" nicename="java"><![CDATA[Java]]></category>
		<category domain="category" nicename="soa"><![CDATA[SOA]]></category>
		<category domain="post_tag" nicename="spring"><![CDATA[Spring]]></category>
		<category domain="category" nicename="web-service"><![CDATA[Web Service]]></category>
		<wp:postmeta>
			<wp:meta_key>blogger_429d160645182d8e72b48e90f5e50eb3_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[2421152960852901884]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_author</wp:meta_key>
			<wp:meta_value><![CDATA[Jeff Yu   (余昌)]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_blog</wp:meta_key>
			<wp:meta_value><![CDATA[jeff.familyyu.net]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_efficient_related_posts</wp:meta_key>
			<wp:meta_value><![CDATA[a:8:{i:0;a:4:{s:2:"ID";s:3:"272";s:10:"post_title";s:40:"Apache CXF Web Service Development book.";s:7:"matches";s:1:"1";s:9:"permalink";s:76:"http://jeff.familyyu.net/2010/02/20/apache-cxf-web-service-development-book/";}i:1;a:4:{s:2:"ID";s:3:"173";s:10:"post_title";s:24:"Spring 2.x IOC exploring";s:7:"matches";s:1:"1";s:9:"permalink";s:61:"http://jeff.familyyu.net/2007/11/18/spring-2-x-ioc-exploring/";}i:2;a:4:{s:2:"ID";s:3:"172";s:10:"post_title";s:45:"Is it a bad idea to reply on Spring too much?";s:7:"matches";s:1:"1";s:9:"permalink";s:81:"http://jeff.familyyu.net/2007/11/17/is-it-a-bad-idea-to-reply-on-spring-too-much/";}i:3;a:4:{s:2:"ID";s:3:"171";s:10:"post_title";s:26:"Spring 1.2.x IOC exploring";s:7:"matches";s:1:"1";s:9:"permalink";s:63:"http://jeff.familyyu.net/2007/11/17/spring-1-2-x-ioc-exploring/";}i:4;a:4:{s:2:"ID";s:3:"146";s:10:"post_title";s:29:"CXF ServiceInfo Model diagram";s:7:"matches";s:1:"1";s:9:"permalink";s:66:"http://jeff.familyyu.net/2007/09/06/cxf-serviceinfo-model-diagram/";}i:5;a:4:{s:2:"ID";s:1:"6";s:10:"post_title";s:53:"[CXF]CXF中的两个概念:Invoker & PhaseInterceptor";s:7:"matches";s:1:"1";s:9:"permalink";s:121:"http://jeff.familyyu.net/2007/08/26/cxfcxf%e4%b8%ad%e7%9a%84%e4%b8%a4%e4%b8%aa%e6%a6%82%e5%bf%b5invoker-phaseinterceptor/";}i:6;a:4:{s:2:"ID";s:2:"10";s:10:"post_title";s:61:"[CXF]CXF当中的Configuration -- Spring2.0可扩展XML配置";s:7:"matches";s:1:"1";s:9:"permalink";s:141:"http://jeff.familyyu.net/2007/08/23/cxfcxf%e5%bd%93%e4%b8%ad%e7%9a%84configuration-spring2-0%e5%8f%af%e6%89%a9%e5%b1%95xml%e9%85%8d%e7%bd%ae/";}i:7;a:4:{s:2:"ID";s:2:"11";s:10:"post_title";s:26:"[CXF]CXF中重要概念Bus";s:7:"matches";s:1:"1";s:9:"permalink";s:91:"http://jeff.familyyu.net/2007/08/22/cxfcxf%e4%b8%ad%e9%87%8d%e8%a6%81%e6%a6%82%e5%bf%b5bus/";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_relation_threshold</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Packaging OSGi bundle.</title>
		<link>http://jeff.familyyu.net/2007/11/14/packaging-osgi-bundle/</link>
		<pubDate>Tue, 13 Nov 2007 16:50:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang.wordpress.com/2007/11/14/packaging-osgi-bundle</guid>
		<description></description>
		<content:encoded><![CDATA[It is tedious for you to write the Import-Package, Export-Package directly in the MENIFEAST.MF file... Here is a <a href="http://felix.apache.org/site/maven-bundle-plugin-bnd.html">felix maven plugin</a> that helps you make life easier.<br /><br />Today, talked with <a href="http://gnodet.blogspot.com/">Guillaume</a> , it makes me know clear and more about the packaging OSGi bundle options.<br /><br />1.&lt;Export-Package&gt;. (It is detailed explained in the Reference 1).<br />2.&lt; Private-Package&gt;: it will actually "merge" (copied) the jars and include in the bundle you are creating all the packages referenced.<br />3. &lt; Import-Package&gt; If you want to import something as optional, use the syntax as: javax.jmdns*;resolution:=optional,<br />4. &lt;Spring-Context&gt; This option is for spring-OSGi, it specified where spring config file need to load, and some other spring-osgi attributes, such as: create-asynchronously etc, take "publish-context" for example, if we specify the "publish-context := fasle", then you registered some bean in the registry, meanwhile, in the test case, you use the "waitOnContextCreation()" method, you would get a timeout error.<br /><br />5. If you want to test the configuration admin functionalities, you need to install below 3 bundles:<br />1) org.apache.felix:org.apache.felix.configadmin<br />2) org.apache.felix:org.osgi.compendium<br />3) org.apache.geronimo.specs:geronimo-servlet_2.5_spec<br /><br />6. If you install a bundle, you get below error message:<br /><blockquote>Missing Constraint: Import-Package: *; version="0.0.0"</blockquote><br />It means you are missing libraries dependency in the pom file.<br /><br />Reference:<br />1. <a href="http://felix.apache.org/site/maven-bundle-plugin-bnd.html">Felix maven pulgin info</a><br />2. <a href="http://www.aqute.biz/Code/Bnd">BND tool</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>168</wp:post_id>
		<wp:post_date>2007-11-14 03:50:00</wp:post_date>
		<wp:post_date_gmt>2007-11-13 16:50:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>packaging-osgi-bundle</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="maven"><![CDATA[Maven]]></category>
		<category domain="category" nicename="osgi"><![CDATA[OSGi]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_blog</wp:meta_key>
			<wp:meta_value><![CDATA[jeff.familyyu.net]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_author</wp:meta_key>
			<wp:meta_value><![CDATA[Jeff Yu   (余昌)]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_429d160645182d8e72b48e90f5e50eb3_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[8404288403746747412]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Weak,Soft,Strong Reference In Java</title>
		<link>http://jeff.familyyu.net/2007/11/15/weaksoftstrong-reference-in-java/</link>
		<pubDate>Wed, 14 Nov 2007 15:25:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang.wordpress.com/2007/11/15/weaksoftstrong-reference-in-java</guid>
		<description></description>
		<content:encoded><![CDATA[Do not know Weak, Soft, Strong Reference concept in Java...<br />Here you go:<br />1.<a href="http://blog.centuryminds.com/2007/11/10/weak-and-soft-references-in-java/"> Weak and Soft Reference In Java</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>169</wp:post_id>
		<wp:post_date>2007-11-15 02:25:00</wp:post_date>
		<wp:post_date_gmt>2007-11-14 15:25:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>weaksoftstrong-reference-in-java</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="java"><![CDATA[Java]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_blog</wp:meta_key>
			<wp:meta_value><![CDATA[jeff.familyyu.net]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_author</wp:meta_key>
			<wp:meta_value><![CDATA[Jeff Yu   (余昌)]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_429d160645182d8e72b48e90f5e50eb3_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[1952789382083297588]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Simply wrap a jar as a bundle</title>
		<link>http://jeff.familyyu.net/2007/11/16/simply-wrap-a-jar-as-a-bundle/</link>
		<pubDate>Thu, 15 Nov 2007 16:32:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang.wordpress.com/2007/11/16/simply-wrap-a-jar-as-a-bundle</guid>
		<description></description>
		<content:encoded><![CDATA[If you need to wrap a jar to be a bundle, you can use the felix maven bundle, just uses the &lt; Import-Package &gt; and &lt; Export-Package &gt; if will help you get the job done.. quite simple..]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>170</wp:post_id>
		<wp:post_date>2007-11-16 03:32:00</wp:post_date>
		<wp:post_date_gmt>2007-11-15 16:32:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>simply-wrap-a-jar-as-a-bundle</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="maven"><![CDATA[Maven]]></category>
		<category domain="category" nicename="osgi"><![CDATA[OSGi]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_blog</wp:meta_key>
			<wp:meta_value><![CDATA[jeff.familyyu.net]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_author</wp:meta_key>
			<wp:meta_value><![CDATA[Jeff Yu   (余昌)]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_429d160645182d8e72b48e90f5e50eb3_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[8746793970092906667]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Spring 1.2.x IOC exploring</title>
		<link>http://jeff.familyyu.net/2007/11/17/spring-1-2-x-ioc-exploring/</link>
		<pubDate>Fri, 16 Nov 2007 15:15:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang.wordpress.com/2007/11/17/spring-1-2-x-ioc-exploring</guid>
		<description></description>
		<content:encoded><![CDATA[Spring uses bean factory to manage the application beans.  what we most uses is using the xml config file to define the beans dependency and initializations..

Here I do not want to elaborate the whole config thing, there are a lot of material in the Internet and Reference, which did a better job than me, I just want to list some features that you might not use that often, and might don't know it yet.
<ol>
	<li>Bean's auto-wiring. (By Name, By Type, Construcotor, auto-detect).. but here I think it is better for us to wire beans explicitly. But if you are a COC fan, then you might be like this functionality.</li>
	<li>Bean creation by static factory method or by instance factory method. In most of cases, we are using bean creation by constructor, but for legacy codes integration, we might need the other two options.</li>
	<li>Method Injection, by using look-up method Injection &amp; arbitrary method replacement.</li>
	<li>"depends-on" attribute, in case there is a bean rely on other bean's initialization.</li>
	<li>Lifecycle interfaces. (InitializatingBean, DisposableBean) or using init-method, destory-method in config file.</li>
	<li>Aware-suffix interface, such as BeanFactoryAware, ApplicationContextAware... if you want to get the BeanFactory or ApplicationContext object in your bean, such as publish events in the applicationContext, you can implement *Aware interface to get it. Spring will populate the context to your bean.</li>
	<li>FactoryBean. This one is quite easy to get confused by the BeanFactory at first glance. They are totally different.. BeanFactory is managing beans.. FactoryBean just take charges of creating a bean. Remember in most cases, we are creating a bean via constructor..what if we want to create a proxy class, which target is the bean's instance.. Then implements the FactoryBean's interface to do that. (commonly, it is used in the spring's library itself, such as AOP proxy class, JndiObjectFactoryBean and so on.</li>
</ol>
Reference:
1. <a href="http://static.springframework.org/spring/docs/1.2.x/reference/beans.html">Spring 1.2.x Reference</a>
2. &lt;&lt;Expert one-on-one Design and Development&gt;&gt; chapter 11.
3. <a href="http://www.javapassion.com/j2ee/#Spring_Framework_Dependency_Injection">Java Passion Free course</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>171</wp:post_id>
		<wp:post_date>2007-11-17 02:15:00</wp:post_date>
		<wp:post_date_gmt>2007-11-16 15:15:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>spring-1-2-x-ioc-exploring</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="ioc"><![CDATA[IOC]]></category>
		<category domain="category" nicename="java"><![CDATA[Java]]></category>
		<category domain="post_tag" nicename="spring"><![CDATA[Spring]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_blog</wp:meta_key>
			<wp:meta_value><![CDATA[jeff.familyyu.net]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_author</wp:meta_key>
			<wp:meta_value><![CDATA[Jeff Yu   (余昌)]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_429d160645182d8e72b48e90f5e50eb3_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[5078901634000890314]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_efficient_related_posts</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{i:0;a:4:{s:2:"ID";s:3:"173";s:10:"post_title";s:24:"Spring 2.x IOC exploring";s:7:"matches";s:1:"2";s:9:"permalink";s:61:"http://jeff.familyyu.net/2007/11/18/spring-2-x-ioc-exploring/";}i:1;a:4:{s:2:"ID";s:3:"260";s:10:"post_title";s:40:"JBoss AS5 MC articles and presentations.";s:7:"matches";s:1:"1";s:9:"permalink";s:76:"http://jeff.familyyu.net/2009/11/16/jboss-as5-mc-articles-and-presentations/";}i:2;a:4:{s:2:"ID";s:3:"175";s:10:"post_title";s:30:"Guice simplicity impressed me.";s:7:"matches";s:1:"1";s:9:"permalink";s:66:"http://jeff.familyyu.net/2007/11/18/guice-simplicity-impressed-me/";}i:3;a:4:{s:2:"ID";s:3:"174";s:10:"post_title";s:12:"Guice videos";s:7:"matches";s:1:"1";s:9:"permalink";s:49:"http://jeff.familyyu.net/2007/11/18/guice-videos/";}i:4;a:4:{s:2:"ID";s:3:"172";s:10:"post_title";s:45:"Is it a bad idea to reply on Spring too much?";s:7:"matches";s:1:"1";s:9:"permalink";s:81:"http://jeff.familyyu.net/2007/11/17/is-it-a-bad-idea-to-reply-on-spring-too-much/";}i:5;a:4:{s:2:"ID";s:3:"167";s:10:"post_title";s:30:"IMS rolled out its 0.1 version";s:7:"matches";s:1:"1";s:9:"permalink";s:67:"http://jeff.familyyu.net/2007/11/13/ims-rolled-out-its-0-1-version/";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_relation_threshold</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Is it a bad idea to reply on Spring too much?</title>
		<link>http://jeff.familyyu.net/2007/11/17/is-it-a-bad-idea-to-reply-on-spring-too-much/</link>
		<pubDate>Fri, 16 Nov 2007 16:56:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang.wordpress.com/2007/11/17/is-it-a-bad-idea-to-reply-on-spring-too-much</guid>
		<description></description>
		<content:encoded><![CDATA[Since spring is more and more powerful &amp; popular, to some extent, it becomes the de facto JEE application's infrastructure, so a lot of projects in the open source area(Apache CXF, Apache Servicemix ...) use spring as its basic configuration &amp; bean management... some of my colleagues said it was a bad idea that we rely on spring too much. I don't so, reasons are:
<ol>
	<li>Spring is open source, we can see how it gets the job done, we know how it works, we can modify it as what we want.</li>
	<li>Take Apache CXF for example, since now a lot of people are using spring, it is not a good idea to create another XSD or DTD to ask people to learn for configuration, always remember people are lazy, we need to reduce the learning curve. Since spring did a good job, at least, if you want to write a new one, you need to specify where the spring configuration can't meet your requirement..</li>
	<li>Some people think relying on spring too much, maybe one day, we will lose our place, since interface21 people (which create and provide support for spring) will take over our product... I don't agree with it, spring is good at one place, but it doesn't mean that they are good at everything, or they do not have time to take everything... look how eclipse and those eclipse plug-ins work together..</li>
</ol>
All in all, I don't think rely on spring too much is a bad thing, instead, I think we need to adopt those good libraries, not to write a new one simply because we are afraid that we might lose our place.. remember, open source software means you can see how codes work, you can change them.. Successful people always stand on a giant...]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>172</wp:post_id>
		<wp:post_date>2007-11-17 03:56:00</wp:post_date>
		<wp:post_date_gmt>2007-11-16 16:56:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>is-it-a-bad-idea-to-reply-on-spring-too-much</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="spring"><![CDATA[Spring]]></category>
		<category domain="category" nicename="thoughts"><![CDATA[Thoughts]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_blog</wp:meta_key>
			<wp:meta_value><![CDATA[jeff.familyyu.net]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_author</wp:meta_key>
			<wp:meta_value><![CDATA[Jeff Yu   (余昌)]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_429d160645182d8e72b48e90f5e50eb3_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[2502362596623787203]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_efficient_related_posts</wp:meta_key>
			<wp:meta_value><![CDATA[a:3:{i:0;a:4:{s:2:"ID";s:3:"173";s:10:"post_title";s:24:"Spring 2.x IOC exploring";s:7:"matches";s:1:"1";s:9:"permalink";s:61:"http://jeff.familyyu.net/2007/11/18/spring-2-x-ioc-exploring/";}i:1;a:4:{s:2:"ID";s:3:"171";s:10:"post_title";s:26:"Spring 1.2.x IOC exploring";s:7:"matches";s:1:"1";s:9:"permalink";s:63:"http://jeff.familyyu.net/2007/11/17/spring-1-2-x-ioc-exploring/";}i:2;a:4:{s:2:"ID";s:3:"167";s:10:"post_title";s:30:"IMS rolled out its 0.1 version";s:7:"matches";s:1:"1";s:9:"permalink";s:67:"http://jeff.familyyu.net/2007/11/13/ims-rolled-out-its-0-1-version/";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_relation_threshold</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Spring 2.x IOC exploring</title>
		<link>http://jeff.familyyu.net/2007/11/18/spring-2-x-ioc-exploring/</link>
		<pubDate>Sat, 17 Nov 2007 17:02:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang.wordpress.com/2007/11/18/spring-2-x-ioc-exploring</guid>
		<description></description>
		<content:encoded><![CDATA[OK, Lets see how the IOC (DI) module move forward in the spring 2.x version.
<ol>
	<li>XML configuration extensions.&nbsp;

I would say this enhancement make the third-party library, which build on spring's IOC container, a lot of easier for the configuration. Such as Apache CXF, Apache Activemq and so on. Personally, I would consider this is a big improvement for the configuration, and integration with other libraries.
Adding a custom xml configuration typically has below four steps:
<ul>
	<li>Authoring an xml schema to describe your custom element(s).</li>
	<li>Coding a custom NameSpaceHandler implementation.</li>
	<li>Coding one or more BeanDefinitionParser implementation. (This is the real job that need to be done. populate the data from xml file).</li>
	<li>Registering the above artifact with spring.</li>
</ul>
The most real job is parsing the xml in the BeanDefinitionParser class, and get the data from xml to bean.

The spring's registering way is an inspiration of how we can register the stuff modularly, instead of putting all of configuration file in one center place, we can split them in its own module, but with the same relative path, such as /META-INF/spring/spring.handlers for spring's example.</li>
	<li>New Bean scopes.
In the Spring1.x IOC module, it just has two scope:the singleton and non-singleton, it is way too coarse-grain. In the 2.x version, it adds more scopes, like Session scope, Request scope etc..it also has custom scope.</li>
	<li>Spring Java config.
To be specific, this is introduced by the spring2.5.. I am gonna try this later and give it a comparison with <a href="http://code.google.com/p/google-guice/">Guice</a> in next couple entries..</li>
</ol>
Reference
1. <a href="http://static.springframework.org/spring/docs/2.0.x/reference/extensible-xml.html">Spring 2.x extensible xml explanation</a>
2. <a href="http://www.memestorm.com/blog/spring-components-xml-configuration-on-steroids/">spring-components-xml-configuration-on-steroids (example)</a>
3. <a href="http://www.infoq.com/articles/spring-2-intro">Spring2.o Intro</a> (Posted at InfoQ)
4. <a href="http://cwiki.apache.org/CXF20DOC/configuration-for-developers.html">How CXF configuration works</a>
5. <a href="http://static.springframework.org/spring-javaconfig/docs/1.0-m2a/reference/html/">Spring Java config reference</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>173</wp:post_id>
		<wp:post_date>2007-11-18 04:02:00</wp:post_date>
		<wp:post_date_gmt>2007-11-17 17:02:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>spring-2-x-ioc-exploring</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="ioc"><![CDATA[IOC]]></category>
		<category domain="category" nicename="java"><![CDATA[Java]]></category>
		<category domain="post_tag" nicename="spring"><![CDATA[Spring]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_blog</wp:meta_key>
			<wp:meta_value><![CDATA[jeff.familyyu.net]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_author</wp:meta_key>
			<wp:meta_value><![CDATA[Jeff Yu   (余昌)]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_429d160645182d8e72b48e90f5e50eb3_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[4479353328506491548]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_efficient_related_posts</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{i:0;a:4:{s:2:"ID";s:3:"171";s:10:"post_title";s:26:"Spring 1.2.x IOC exploring";s:7:"matches";s:1:"2";s:9:"permalink";s:63:"http://jeff.familyyu.net/2007/11/17/spring-1-2-x-ioc-exploring/";}i:1;a:4:{s:2:"ID";s:3:"260";s:10:"post_title";s:40:"JBoss AS5 MC articles and presentations.";s:7:"matches";s:1:"1";s:9:"permalink";s:76:"http://jeff.familyyu.net/2009/11/16/jboss-as5-mc-articles-and-presentations/";}i:2;a:4:{s:2:"ID";s:3:"175";s:10:"post_title";s:30:"Guice simplicity impressed me.";s:7:"matches";s:1:"1";s:9:"permalink";s:66:"http://jeff.familyyu.net/2007/11/18/guice-simplicity-impressed-me/";}i:3;a:4:{s:2:"ID";s:3:"174";s:10:"post_title";s:12:"Guice videos";s:7:"matches";s:1:"1";s:9:"permalink";s:49:"http://jeff.familyyu.net/2007/11/18/guice-videos/";}i:4;a:4:{s:2:"ID";s:3:"172";s:10:"post_title";s:45:"Is it a bad idea to reply on Spring too much?";s:7:"matches";s:1:"1";s:9:"permalink";s:81:"http://jeff.familyyu.net/2007/11/17/is-it-a-bad-idea-to-reply-on-spring-too-much/";}i:5;a:4:{s:2:"ID";s:3:"167";s:10:"post_title";s:30:"IMS rolled out its 0.1 version";s:7:"matches";s:1:"1";s:9:"permalink";s:67:"http://jeff.familyyu.net/2007/11/13/ims-rolled-out-its-0-1-version/";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_relation_threshold</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Guice videos</title>
		<link>http://jeff.familyyu.net/2007/11/18/guice-videos/</link>
		<pubDate>Sat, 17 Nov 2007 18:02:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang.wordpress.com/2007/11/18/guice-videos</guid>
		<description></description>
		<content:encoded><![CDATA[Firstly, little background, Bob Lee's famous: <a href="http://crazybob.org/2006/01/i-dont-get-spring.html">I don't get Spring</a> thread, and then he created the <a href="http://code.google.com/p/google-guice/">Guice</a>, lightweight dependency injection.

Some Guice introduction videos from youtube. Very interesting, even if you don't want to use guice, it worths you to listen.
1. <a href="http://www.youtube.com/watch?v=8RGhT-YySDY">Java On Guice: Dependency injection, the Java Way</a>
2. <a href="http://www.youtube.com/watch?v=l81T1AQWX84">OSS Speaker Series - Java on Guice</a>
3. <a href="http://www.youtube.com/watch?v=x_NpraeC3tk">Google Developer Day Beijing-Guice,Java Dependency Injection</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>174</wp:post_id>
		<wp:post_date>2007-11-18 05:02:00</wp:post_date>
		<wp:post_date_gmt>2007-11-17 18:02:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>guice-videos</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="guice"><![CDATA[Guice]]></category>
		<category domain="post_tag" nicename="ioc"><![CDATA[IOC]]></category>
		<category domain="category" nicename="java"><![CDATA[Java]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_blog</wp:meta_key>
			<wp:meta_value><![CDATA[jeff.familyyu.net]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_author</wp:meta_key>
			<wp:meta_value><![CDATA[Jeff Yu   (余昌)]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_429d160645182d8e72b48e90f5e50eb3_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[6991763236141942756]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_efficient_related_posts</wp:meta_key>
			<wp:meta_value><![CDATA[a:4:{i:0;a:4:{s:2:"ID";s:3:"175";s:10:"post_title";s:30:"Guice simplicity impressed me.";s:7:"matches";s:1:"2";s:9:"permalink";s:66:"http://jeff.familyyu.net/2007/11/18/guice-simplicity-impressed-me/";}i:1;a:4:{s:2:"ID";s:3:"260";s:10:"post_title";s:40:"JBoss AS5 MC articles and presentations.";s:7:"matches";s:1:"1";s:9:"permalink";s:76:"http://jeff.familyyu.net/2009/11/16/jboss-as5-mc-articles-and-presentations/";}i:2;a:4:{s:2:"ID";s:3:"173";s:10:"post_title";s:24:"Spring 2.x IOC exploring";s:7:"matches";s:1:"1";s:9:"permalink";s:61:"http://jeff.familyyu.net/2007/11/18/spring-2-x-ioc-exploring/";}i:3;a:4:{s:2:"ID";s:3:"171";s:10:"post_title";s:26:"Spring 1.2.x IOC exploring";s:7:"matches";s:1:"1";s:9:"permalink";s:63:"http://jeff.familyyu.net/2007/11/17/spring-1-2-x-ioc-exploring/";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_relation_threshold</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Guice simplicity impressed me.</title>
		<link>http://jeff.familyyu.net/2007/11/18/guice-simplicity-impressed-me/</link>
		<pubDate>Sun, 18 Nov 2007 11:22:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang.wordpress.com/2007/11/18/guice-simplicity-impressed-me</guid>
		<description></description>
		<content:encoded><![CDATA[Today, I've tried a simple sample with <a href="http://code.google.com/p/google-guice/">Guice</a>, it reduces a lot configuration compares to spring's xml config. Firstly, I am a bit of worrying using annotation too much would make code a bit messy, it would be a bit hard to read with a lot of annotation, that fact is that with Guice, it is not too much annotation, we can consider it is sort of javadoc, and just for the resource that you need to inject.

Compared to spring's xml configuration, it has below advantages (IMHO) :
1. Use the @Inject annotation to define the injections, instead of using xml, for xml configuration, you need to write verbose xml to define the relationship.
2. The string in the xml file is more misspelling than using java code itself, since compiler would tell you that.
3. The most important one is it can make them consistent. It is easy for developers to refactor. Most IDE support that. I mean using java config instead of xml.. not the annotation.

There is a comprehensive comparison between Guice and Spring <a href="http://code.google.com/p/google-guice/wiki/SpringComparison">here</a>.

All in all, its simplicity impressed me, if you are looking for a lightweight DI container, you should check out Guice. It worths you a try.

PS: Spring also has the spring java config since 2.5 version, haven't got a chance to try it out yet.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>175</wp:post_id>
		<wp:post_date>2007-11-18 22:22:00</wp:post_date>
		<wp:post_date_gmt>2007-11-18 11:22:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>guice-simplicity-impressed-me</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="guice"><![CDATA[Guice]]></category>
		<category domain="post_tag" nicename="ioc"><![CDATA[IOC]]></category>
		<category domain="category" nicename="java"><![CDATA[Java]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_blog</wp:meta_key>
			<wp:meta_value><![CDATA[jeff.familyyu.net]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_author</wp:meta_key>
			<wp:meta_value><![CDATA[Jeff Yu   (余昌)]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_429d160645182d8e72b48e90f5e50eb3_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[4282325555399965300]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_efficient_related_posts</wp:meta_key>
			<wp:meta_value><![CDATA[a:4:{i:0;a:4:{s:2:"ID";s:3:"174";s:10:"post_title";s:12:"Guice videos";s:7:"matches";s:1:"2";s:9:"permalink";s:49:"http://jeff.familyyu.net/2007/11/18/guice-videos/";}i:1;a:4:{s:2:"ID";s:3:"260";s:10:"post_title";s:40:"JBoss AS5 MC articles and presentations.";s:7:"matches";s:1:"1";s:9:"permalink";s:76:"http://jeff.familyyu.net/2009/11/16/jboss-as5-mc-articles-and-presentations/";}i:2;a:4:{s:2:"ID";s:3:"173";s:10:"post_title";s:24:"Spring 2.x IOC exploring";s:7:"matches";s:1:"1";s:9:"permalink";s:61:"http://jeff.familyyu.net/2007/11/18/spring-2-x-ioc-exploring/";}i:3;a:4:{s:2:"ID";s:3:"171";s:10:"post_title";s:26:"Spring 1.2.x IOC exploring";s:7:"matches";s:1:"1";s:9:"permalink";s:63:"http://jeff.familyyu.net/2007/11/17/spring-1-2-x-ioc-exploring/";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_relation_threshold</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>JMS introduction</title>
		<link>http://jeff.familyyu.net/2007/11/22/jms-introduction/</link>
		<pubDate>Thu, 22 Nov 2007 08:03:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang.wordpress.com/2007/11/22/jms-introduction</guid>
		<description></description>
		<content:encoded><![CDATA[JMS(Java Messaging System)

Firstly, we will split this into three categories:
1. JMS client.
2. JMS API.
3. JMS provider.

Franky, I am quite confused about this when I first get touched on this subject, but after I compared JMS to JDBC, then all things become more clear, and easy to understand. we can think JMS provider as the database vendor, such as Oracle, Mysql etc. the JMS API is similar to the JDBC API, which is used to define a uniform interface to operate Message. The invocation should be like:
<blockquote>JMS client -&gt; JMS API -&gt; JMS Provider.&nbsp;</blockquote>
In this entry, I am going to focus on the JMS API, since that's the developer most care about. before doing that, I am going to say a few words on the JMS Provider.
1. In the JMS world, we call the "JMS provider" as "message broker".
2. Message broker can be started as a standalone, or could be embedded too.

OK, just like the database, after you installed the database, you need to create the database instance, and the connection configuration, so that client can access the database by using JDBC API. so does JMS. but in the JMS world, it is called administered object. they are:
<ul>
	<li>ConnectionFactory - This is the object a client uses to create a connection with a provider.</li>
	<li>Destination - This is the object a client uses to specify the destination of messages it is sending and the source of messages it receives.</li>
</ul>
One thing that is very different from database world, it is that in the Messaging world, they are two messaging style(Domain): they are PTP (point-to-point) and Pub/Sub(Publisher-subscriber). The difference between these two styles are: in PTP, one message just can be consumed by ONE consumer; while in the Pub/Sub, a message can be consumed by Multiple consumers.
So you would see two separate APIs for PTP and Pub/Sub respectively in the JMS API, I will use the common one in my next of this entry.

In the database world, we are operating data in database record as a basis, in the JMS, we are using a javax.jms.Message as a basis. Right now, it has 5 subclass of this class, which supports Text,Object,Stream,Map,Byte as transmit unit. In this Message model, it is consist of Message Header, Message Properties, Message body.

Developers can retrieve/update data from JDBC API, so does JMS API, developers can produce(publish)/consume(subscribe) data, which is Message, from JMS API.  In order to be a producer or consumer, you need to obtain below two objects.
<ul>
	<li>Connection: A JMS Connection is a client’s active connection to its JMS provider. It will typically allocate provider resources outside the Java virtual machine. A Connection is a factory for Sessions that use its underlying connection to a JMS provider for producing and consuming messages.</li>
	<li>Session: A JMS Session is a <span style="color: #ff0000;">single-threaded</span> context* for producing and consuming messages. Although it may allocate provider resources outside the Java virtual machine, it is considered a lightweight JMS object.</li>
</ul>
and then you can create producer or consumer from Session &amp; Destination Objects. For the consumer, it has two consuming style: Synchronous &amp; Asynchronous.

A simple example for producing a message using ActiveMQ.(A JMS provider):
<blockquote>// Create the connection.
ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory(user, password, url);
connection = connectionFactory.createConnection();
connection.start();

// Create the session
Session session = connection.createSession(transacted, Session.AUTO_ACKNOWLEDGE);
destination = session.createQueue(subject);

// Create the producer.
MessageProducer producer = session.createProducer(destination);
producer.setDeliveryMode(DeliveryMode.NON_PERSISTENT);

// Start sending messages
TextMessage message = session .createTextMessage();
message.setText("producing message");
producer.send(message);

//Closing resources, it is better put this in finally block.
session.close();
connection.close();</blockquote>
Reference
1. <a href="http://www.javapassion.com/j2ee/JMS_speakernoted.pdf">JMS slides from javapassion.com</a> (Highly recommend).
2. <a href="http://java.sun.com/javaee/5/docs/tutorial/doc/bncdq.html">Java messaging service API from JavaEE 5 tutorial</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>176</wp:post_id>
		<wp:post_date>2007-11-22 19:03:00</wp:post_date>
		<wp:post_date_gmt>2007-11-22 08:03:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>jms-introduction</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="java"><![CDATA[Java]]></category>
		<category domain="post_tag" nicename="jms"><![CDATA[JMS]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_blog</wp:meta_key>
			<wp:meta_value><![CDATA[jeff.familyyu.net]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_author</wp:meta_key>
			<wp:meta_value><![CDATA[Jeff Yu   (余昌)]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_429d160645182d8e72b48e90f5e50eb3_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[4778113899791401746]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_efficient_related_posts</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{i:0;a:4:{s:2:"ID";s:3:"177";s:10:"post_title";s:26:"JMS introduction - part 2.";s:7:"matches";s:1:"1";s:9:"permalink";s:60:"http://jeff.familyyu.net/2007/11/22/jms-introduction-part-2/";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_relation_threshold</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>JMS introduction - part 2.</title>
		<link>http://jeff.familyyu.net/2007/11/22/jms-introduction-part-2/</link>
		<pubDate>Thu, 22 Nov 2007 09:36:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang.wordpress.com/2007/11/22/jms-introduction-part-2</guid>
		<description></description>
		<content:encoded><![CDATA[From the <a href="http://jeffyuchang.blogspot.com/2007/11/jms-introduction.html">first part of JMS introduction</a>, we have a basic idea of how to operate the message to broker. In this entry, I am going to talk about some advanced feature for JMS.
They are:
<ul>
	<li>1. Transactional operations</li>
	<li>2. Security</li>
	<li>3. Reliability</li>
	<li>4. Distributed Message.</li>
	<li>5. Message Selector</li>
</ul>
Some JMS term exploring:

1. Persistent &amp; MessageDelivery

By default, we can consider "broker" as a message repository, but sometimes, we want to make sure our message is delivered ONLY_ONCE, and we want our messages still available even our broker crashed. For activeMQ case, there is a "persistent" property in the broker.

There is also a term called "MessageDelivery", it means whether this message need to be persistent or not. The main difference is that if you are using persistent delivery, messages are persisted to disk/database so that they will survive a broker restart. When using non-persistent delivery, if you kill a broker then you will lose all in-transit messages. [R1]

2. Acknowledge. (Recovery &amp; Redelivery)
• AUTO_ACKNOWLEDGE or DUPS_OK_ACKNOWLEDGE - the message will be immediately redelivered. The number of times a JMS provider will redeliver the same message before giving up is provider-dependent. The JMSRedelivered message header field will be set for a message redelivered under these circumstances.
• CLIENT_ACKNOWLEDGE - the next message for the listener is delivered. If a client wishes to have the previous unacknowledged message redelivered, it must manually recover the session.
• Transacted Session - the next message for the listener is delivered. The client can either commit or roll back the session (in other words, a RuntimeException does not automatically rollback the session).

3. Durable &amp; non-durable subscriber.
Queues retain all messages sent to them until the messages are consumed or until the messages  expire. while in Topic, There is a timing dependency between publishers and non-durable subscribers, because a client that subscribes to a topic can consume only messages published after the client has created a subscription, and the subscriber must continue to be active in order for it to consume messages.
A durablesubscriber registers a durable subscription with a unique identity that is retained by JMS. Subsequent subscriber objects with the same identity resume the subscription in the state it was left in by the prior subscriber. If there is no active subscriber for a durable subscription, JMS retains the subscription’s messages until they are received by the subscription or until they expire.

4.Transaction

There are two kind of transactions here: client -&gt; broker &amp; client -&gt; broker -&gt; client. In the JMS API, it just defines the former one. the latter one should be a two-phase commit transaction. Transaction was controlled by Session Object, it is very like Database's Connection, by using commit or rollback at last.

5. Message Selector
As we talked before, the broker holds the queue or topic, which holds the messages, so many messages, we need to define a criteria to select some appropriate messages that we are interested, here comes the MessageSelector, it uses SQL-92 compliant syntax, one thing to note is that it just selector the MessageHeader &amp; Message Properties, not include the MessageBody.

Reference:
1. <a href="http://activemq.apache.org/what-is-the-difference-between-persistent-and-non-persistent-delivery.html">ActiveMQ's message delivery</a>
2. JMS_1.1_specification]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>177</wp:post_id>
		<wp:post_date>2007-11-22 20:36:00</wp:post_date>
		<wp:post_date_gmt>2007-11-22 09:36:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>jms-introduction-part-2</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="java"><![CDATA[Java]]></category>
		<category domain="post_tag" nicename="jms"><![CDATA[JMS]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_blog</wp:meta_key>
			<wp:meta_value><![CDATA[jeff.familyyu.net]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_author</wp:meta_key>
			<wp:meta_value><![CDATA[Jeff Yu   (余昌)]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_429d160645182d8e72b48e90f5e50eb3_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[3207033306158715400]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_efficient_related_posts</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{i:0;a:4:{s:2:"ID";s:3:"176";s:10:"post_title";s:16:"JMS introduction";s:7:"matches";s:1:"1";s:9:"permalink";s:53:"http://jeff.familyyu.net/2007/11/22/jms-introduction/";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_relation_threshold</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Switching to use Ubuntu Linux</title>
		<link>http://jeff.familyyu.net/2007/12/03/switching-to-use-ubuntu-linux/</link>
		<pubDate>Mon, 03 Dec 2007 08:38:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang.wordpress.com/2007/12/03/switching-to-use-ubuntu-linux</guid>
		<description></description>
		<content:encoded><![CDATA[Recently, I am switching to use the Ubuntu 7.10 Linux, and am working fully on this OS on daily basis. I've tried to switch to ubuntu couple months ago, it was using the Ubuntu7.04, but am back to Windows quite soon, it seems I am a bit stuck of linux, that is because I am using linux with windows' habits &amp; minds.

If you want to use the Ubuntu or other linux distro in Windows way, I'd bet you would be back to Windows at last.. If you want to use linux &amp; love it.. You will have following thoughts on your mind:

1. Like the free software very much, and try to pass it on.
2. Try to be unique.
3. To be truly tolerant. (You will encounter some softwares that do not support in the Linux, you need to be tolerant or to hack it by yourself).
4. Like to be hacking code.

The best benefit that you are using linux is that it opens everything to me, no hidings. The open spirit...]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>178</wp:post_id>
		<wp:post_date>2007-12-03 19:38:00</wp:post_date>
		<wp:post_date_gmt>2007-12-03 08:38:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>switching-to-use-ubuntu-linux</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="os"><![CDATA[OS]]></category>
		<category domain="category" nicename="thoughts"><![CDATA[Thoughts]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_blog</wp:meta_key>
			<wp:meta_value><![CDATA[jeff.familyyu.net]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_author</wp:meta_key>
			<wp:meta_value><![CDATA[Jeff Yu   (余昌)]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_429d160645182d8e72b48e90f5e50eb3_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[923396699283309604]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>subversion quick reference</title>
		<link>http://jeff.familyyu.net/2007/12/20/subversion-quick-reference/</link>
		<pubDate>Thu, 20 Dec 2007 03:12:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang.wordpress.com/2007/12/20/subversion-quick-reference</guid>
		<description></description>
		<content:encoded><![CDATA[See Johnny's <a href="http://blogs.tech-recipes.com/johnny/subversion-quick-reference">this blog entry</a>. It is very useful if you don't use the GUI such as tortoise in windows.

one more note on this is that you can export SVN_EDITOR=your favorite text editor, and then when you run:
svn ci
it opens up your specified the editor to input your commit comment.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>179</wp:post_id>
		<wp:post_date>2007-12-20 14:12:00</wp:post_date>
		<wp:post_date_gmt>2007-12-20 03:12:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>subversion-quick-reference</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="scm"><![CDATA[SCM]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_blog</wp:meta_key>
			<wp:meta_value><![CDATA[jeff.familyyu.net]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_author</wp:meta_key>
			<wp:meta_value><![CDATA[Jeff Yu   (余昌)]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_429d160645182d8e72b48e90f5e50eb3_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[5038506150201238200]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Getting started with Ubuntu for a window&#039;s user.</title>
		<link>http://jeff.familyyu.net/2007/12/21/getting-started-with-ubuntu-for-a-windows-user/</link>
		<pubDate>Thu, 20 Dec 2007 16:00:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang.wordpress.com/2007/12/21/getting-started-with-ubuntu-for-a-windows-user</guid>
		<description></description>
		<content:encoded><![CDATA[After played with ubuntu about a month, it is time to write an entry about alternative softwares from Windows.
1. Mail: use thunderbird mail client. If you use the Gmail client, that is ok.
2. Chinese input: use the SCIM, but make sure you are using the scim-bridge, otherwise, the scim is conflict with Opera, skype and so on.
3. Text Editor: gedit, vim, Emacs. vi for updating some config file is very handy, I like X-emacs, and is learning it now. try to use Emacs to replace the gedit.
4. IM client: use the Pidgin, it supports QQ, MSN, Yahoo &amp; AIM.
5. Browser: Firefox, Opera, but for myself, use firefox most of time.
6. Notes: Tomboy Notes, this little software is very handy, it helps you make note very easy, and it can export the content to a HTML page, which contains all of notes in a page with some anchors.
7. PDF reader: kpdf
8. CHM reader: xchm.
9. office: open office.
10. Install samba to access the window's shared files or printers.
11. Install vsftpd to create a ftp server.
12. Use eclipse for java coding.

That is what I used so far, it works perfect.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>180</wp:post_id>
		<wp:post_date>2007-12-21 03:00:00</wp:post_date>
		<wp:post_date_gmt>2007-12-20 16:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>getting-started-with-ubuntu-for-a-windows-user</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="os"><![CDATA[OS]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_blog</wp:meta_key>
			<wp:meta_value><![CDATA[jeff.familyyu.net]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_author</wp:meta_key>
			<wp:meta_value><![CDATA[Jeff Yu   (余昌)]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_429d160645182d8e72b48e90f5e50eb3_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[6010535542696649748]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>73</wp:comment_id>
			<wp:comment_author><![CDATA[delphiasp]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://delphiaspnoreply@blogger.com</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2007-12-22 03:41:00</wp:comment_date>
			<wp:comment_date_gmt>2007-12-21 16:41:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Good.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Some Thread &amp; concurrency concepts</title>
		<link>http://jeff.familyyu.net/2007/12/31/some-thread-concurrency-concepts/</link>
		<pubDate>Mon, 31 Dec 2007 07:40:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang.wordpress.com/2007/12/31/some-thread-concurrency-concepts</guid>
		<description></description>
		<content:encoded><![CDATA[Some good links to explain the some Thread &amp; concurrency concepts.<br /><br />1. <a href="http://www.cs.mtu.edu/%7Eshene/NSF-3/e-Book/FUNDAMENTALS/thread-management.html">Thread join,yeild,suspend and resume</a>.<br /><br />2. <a href="http://www.cs.mtu.edu/%7Eshene/NSF-3/e-Book/MUTEX/locks.html">Mutual exclusion locks: mutex</a><br /><br />3. <a href="http://www.cs.mtu.edu/%7Eshene/NSF-3/e-Book/SEMA/basics.html">semaphores</a><br /><br />4. <a href="http://www.cs.mtu.edu/%7Eshene/NSF-3/e-Book/RACE/overview.html">Race Conditions</a><br /><br />5. <a href="http://www.cs.mtu.edu/%7Eshene/NSF-3/e-Book/MONITOR/basics.html">Monitor</a><br /><br />6. <a href="http://www.cs.mtu.edu/%7Eshene/NSF-3/e-Book/CH/basics.html">Channel. (synchronous, asynchronous)</a><br /><br />Reference:<br /><a href="http://www.cs.mtu.edu/%7Eshene/NSF-3/e-Book/index.html">http://www.cs.mtu.edu/~shene/NSF-3/e-Book/index.html</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>181</wp:post_id>
		<wp:post_date>2007-12-31 18:40:00</wp:post_date>
		<wp:post_date_gmt>2007-12-31 07:40:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>some-thread-concurrency-concepts</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="java"><![CDATA[Java]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_blog</wp:meta_key>
			<wp:meta_value><![CDATA[jeff.familyyu.net]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_author</wp:meta_key>
			<wp:meta_value><![CDATA[Jeff Yu   (余昌)]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_429d160645182d8e72b48e90f5e50eb3_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[8664155596809442152]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Install Mplayer in the Ubuntu7.10</title>
		<link>http://jeff.familyyu.net/2008/03/14/install-mplayer-in-the-ubuntu7-10/</link>
		<pubDate>Fri, 14 Mar 2008 11:08:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang.wordpress.com/2008/03/14/install-mplayer-in-the-ubuntu7-10</guid>
		<description></description>
		<content:encoded><![CDATA[1. sudo apt-get install mplayer mplayer-fonts mozilla-mplayer
2. Download the win32codec from <a href="http://www.mplayerhq.hu/design7/dload.html">http://www.mplayerhq.hu/design7/dload.html</a>, Choose the "Binary Codec Packages" title, the file name is sort of "linux x86 ...".
3. Extract the win32codec from the package in the /usr/lib/win32. (create it if it doesn't exist).
4. Start the Mplayer, it should be all set.

Q: Can play the sound ok, but without having any images.
A: running: sudo apt-get install libstdc++5 in the Shell.

Reference:
1. <a href="http://wiki.ubuntu.org.cn/%E5%AE%89%E8%A3%85MPlayer">Install MPlayer</a>
2. <a href="http://forum.ubuntu.org.cn/viewtopic.php?t=108805">http://forum.ubuntu.org.cn/viewtopic.php?t=108805</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>182</wp:post_id>
		<wp:post_date>2008-03-14 22:08:00</wp:post_date>
		<wp:post_date_gmt>2008-03-14 11:08:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>install-mplayer-in-the-ubuntu7-10</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="os"><![CDATA[OS]]></category>
		<category domain="post_tag" nicename="ubuntu"><![CDATA[Ubuntu]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_blog</wp:meta_key>
			<wp:meta_value><![CDATA[jeff.familyyu.net]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_author</wp:meta_key>
			<wp:meta_value><![CDATA[Jeff Yu   (余昌)]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_429d160645182d8e72b48e90f5e50eb3_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[851315729365801701]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_efficient_related_posts</wp:meta_key>
			<wp:meta_value><![CDATA[a:7:{i:0;a:4:{s:2:"ID";s:3:"189";s:10:"post_title";s:54:"This is the way to install software, are you using it?";s:7:"matches";s:1:"1";s:9:"permalink";s:89:"http://jeff.familyyu.net/2008/03/24/this-is-the-way-to-install-software-are-you-using-it/";}i:1;a:4:{s:2:"ID";s:3:"188";s:10:"post_title";s:22:"Ubuntu Tips - Part one";s:7:"matches";s:1:"1";s:9:"permalink";s:57:"http://jeff.familyyu.net/2008/03/20/ubuntu-tips-part-one/";}i:2;a:4:{s:2:"ID";s:3:"187";s:10:"post_title";s:27:"Make voice input correctly.";s:7:"matches";s:1:"1";s:9:"permalink";s:63:"http://jeff.familyyu.net/2008/03/17/make-voice-input-correctly/";}i:3;a:4:{s:2:"ID";s:3:"186";s:10:"post_title";s:19:"Log in QQ in Ubuntu";s:7:"matches";s:1:"1";s:9:"permalink";s:56:"http://jeff.familyyu.net/2008/03/17/log-in-qq-in-ubuntu/";}i:4;a:4:{s:2:"ID";s:3:"185";s:10:"post_title";s:23:"Install amule in Ubuntu";s:7:"matches";s:1:"1";s:9:"permalink";s:60:"http://jeff.familyyu.net/2008/03/16/install-amule-in-ubuntu/";}i:5;a:4:{s:2:"ID";s:3:"184";s:10:"post_title";s:52:"Multiple sounds can exist at same time in Ubuntu7.10";s:7:"matches";s:1:"1";s:9:"permalink";s:89:"http://jeff.familyyu.net/2008/03/15/multiple-sounds-can-exist-at-same-time-in-ubuntu7-10/";}i:6;a:4:{s:2:"ID";s:3:"183";s:10:"post_title";s:38:"Make XMMS show chinese font correctly.";s:7:"matches";s:1:"1";s:9:"permalink";s:74:"http://jeff.familyyu.net/2008/03/15/make-xmms-show-chinese-font-correctly/";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_relation_threshold</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Make XMMS show chinese font correctly.</title>
		<link>http://jeff.familyyu.net/2008/03/15/make-xmms-show-chinese-font-correctly/</link>
		<pubDate>Sat, 15 Mar 2008 07:18:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang.wordpress.com/2008/03/15/make-xmms-show-chinese-font-correctly</guid>
		<description></description>
		<content:encoded><![CDATA[Below is the steps that work for me, which is Ubuntu7.10.

1. Create a .gtkrc.mine file with following content:
<pre># $(gtkconfigdir)/gtkrc.zh_CN## This file defines the fontsets for Chinese language (zh) using# the simplified chinese standard GuoBiao as in mainland China (CN)## 1999, Pablo Saratxaga #

style "gtk-default-zh-cn" {fontset = "-adobe-helvetica-medium-r-normal--12-*-*-*-*-*-iso8859-1,-*-*-medium-r-normal--16-*-*-*-*-*-gb2312.1980-0,*-r-*"}class "GtkWidget" style "gtk-default-zh-cn"</pre>
2. sudo apt-get install xmms-mpg123-ja

3. Set the XMMS font as:
<pre> -adobe-helvetica-medium-r-normal--12-*-*-*-*-*-iso8859-1,           -*-*-medium-r-normal--16-*-*-*-*-*-gb2312.1980-0,*-r-*</pre>
Reference:
1. <a href="http://forum.ubuntu.org.cn/about10340-0.html">http://forum.ubuntu.org.cn/about10340-0.html</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>183</wp:post_id>
		<wp:post_date>2008-03-15 18:18:00</wp:post_date>
		<wp:post_date_gmt>2008-03-15 07:18:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>make-xmms-show-chinese-font-correctly</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="os"><![CDATA[OS]]></category>
		<category domain="post_tag" nicename="ubuntu"><![CDATA[Ubuntu]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_blog</wp:meta_key>
			<wp:meta_value><![CDATA[jeff.familyyu.net]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_author</wp:meta_key>
			<wp:meta_value><![CDATA[Jeff Yu   (余昌)]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_429d160645182d8e72b48e90f5e50eb3_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[94759384279566040]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_efficient_related_posts</wp:meta_key>
			<wp:meta_value><![CDATA[a:7:{i:0;a:4:{s:2:"ID";s:3:"189";s:10:"post_title";s:54:"This is the way to install software, are you using it?";s:7:"matches";s:1:"1";s:9:"permalink";s:89:"http://jeff.familyyu.net/2008/03/24/this-is-the-way-to-install-software-are-you-using-it/";}i:1;a:4:{s:2:"ID";s:3:"188";s:10:"post_title";s:22:"Ubuntu Tips - Part one";s:7:"matches";s:1:"1";s:9:"permalink";s:57:"http://jeff.familyyu.net/2008/03/20/ubuntu-tips-part-one/";}i:2;a:4:{s:2:"ID";s:3:"187";s:10:"post_title";s:27:"Make voice input correctly.";s:7:"matches";s:1:"1";s:9:"permalink";s:63:"http://jeff.familyyu.net/2008/03/17/make-voice-input-correctly/";}i:3;a:4:{s:2:"ID";s:3:"186";s:10:"post_title";s:19:"Log in QQ in Ubuntu";s:7:"matches";s:1:"1";s:9:"permalink";s:56:"http://jeff.familyyu.net/2008/03/17/log-in-qq-in-ubuntu/";}i:4;a:4:{s:2:"ID";s:3:"185";s:10:"post_title";s:23:"Install amule in Ubuntu";s:7:"matches";s:1:"1";s:9:"permalink";s:60:"http://jeff.familyyu.net/2008/03/16/install-amule-in-ubuntu/";}i:5;a:4:{s:2:"ID";s:3:"184";s:10:"post_title";s:52:"Multiple sounds can exist at same time in Ubuntu7.10";s:7:"matches";s:1:"1";s:9:"permalink";s:89:"http://jeff.familyyu.net/2008/03/15/multiple-sounds-can-exist-at-same-time-in-ubuntu7-10/";}i:6;a:4:{s:2:"ID";s:3:"182";s:10:"post_title";s:33:"Install Mplayer in the Ubuntu7.10";s:7:"matches";s:1:"1";s:9:"permalink";s:70:"http://jeff.familyyu.net/2008/03/14/install-mplayer-in-the-ubuntu7-10/";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_relation_threshold</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Multiple sounds can exist at same time in Ubuntu7.10</title>
		<link>http://jeff.familyyu.net/2008/03/15/multiple-sounds-can-exist-at-same-time-in-ubuntu7-10/</link>
		<pubDate>Sat, 15 Mar 2008 10:43:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang.wordpress.com/2008/03/15/multiple-sounds-can-exist-at-same-time-in-ubuntu7-10</guid>
		<description></description>
		<content:encoded><![CDATA[See this link for details, it works for me.
1. <a href="http://forum.ubuntu.org.cn/viewtopic.php?t=132&amp;highlight=%BB%EC%D2%F4">Mutliple sounds co-exist</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>184</wp:post_id>
		<wp:post_date>2008-03-15 21:43:00</wp:post_date>
		<wp:post_date_gmt>2008-03-15 10:43:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>multiple-sounds-can-exist-at-same-time-in-ubuntu7-10</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="os"><![CDATA[OS]]></category>
		<category domain="post_tag" nicename="ubuntu"><![CDATA[Ubuntu]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_blog</wp:meta_key>
			<wp:meta_value><![CDATA[jeff.familyyu.net]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_author</wp:meta_key>
			<wp:meta_value><![CDATA[Jeff Yu   (余昌)]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_429d160645182d8e72b48e90f5e50eb3_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[5122049981407850831]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_efficient_related_posts</wp:meta_key>
			<wp:meta_value><![CDATA[a:7:{i:0;a:4:{s:2:"ID";s:3:"189";s:10:"post_title";s:54:"This is the way to install software, are you using it?";s:7:"matches";s:1:"1";s:9:"permalink";s:89:"http://jeff.familyyu.net/2008/03/24/this-is-the-way-to-install-software-are-you-using-it/";}i:1;a:4:{s:2:"ID";s:3:"188";s:10:"post_title";s:22:"Ubuntu Tips - Part one";s:7:"matches";s:1:"1";s:9:"permalink";s:57:"http://jeff.familyyu.net/2008/03/20/ubuntu-tips-part-one/";}i:2;a:4:{s:2:"ID";s:3:"187";s:10:"post_title";s:27:"Make voice input correctly.";s:7:"matches";s:1:"1";s:9:"permalink";s:63:"http://jeff.familyyu.net/2008/03/17/make-voice-input-correctly/";}i:3;a:4:{s:2:"ID";s:3:"186";s:10:"post_title";s:19:"Log in QQ in Ubuntu";s:7:"matches";s:1:"1";s:9:"permalink";s:56:"http://jeff.familyyu.net/2008/03/17/log-in-qq-in-ubuntu/";}i:4;a:4:{s:2:"ID";s:3:"185";s:10:"post_title";s:23:"Install amule in Ubuntu";s:7:"matches";s:1:"1";s:9:"permalink";s:60:"http://jeff.familyyu.net/2008/03/16/install-amule-in-ubuntu/";}i:5;a:4:{s:2:"ID";s:3:"183";s:10:"post_title";s:38:"Make XMMS show chinese font correctly.";s:7:"matches";s:1:"1";s:9:"permalink";s:74:"http://jeff.familyyu.net/2008/03/15/make-xmms-show-chinese-font-correctly/";}i:6;a:4:{s:2:"ID";s:3:"182";s:10:"post_title";s:33:"Install Mplayer in the Ubuntu7.10";s:7:"matches";s:1:"1";s:9:"permalink";s:70:"http://jeff.familyyu.net/2008/03/14/install-mplayer-in-the-ubuntu7-10/";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_relation_threshold</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Install amule in Ubuntu</title>
		<link>http://jeff.familyyu.net/2008/03/16/install-amule-in-ubuntu/</link>
		<pubDate>Sat, 15 Mar 2008 17:54:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang.wordpress.com/2008/03/16/install-amule-in-ubuntu</guid>
		<description></description>
		<content:encoded><![CDATA[In case you want to use the emule to download materials, then amule is the thing that you are looking for in the ubuntu.

Reference:
1. <a href="http://forum.ubuntu.org.cn/viewtopic.php?t=40336&amp;postdays=0&amp;postorder=asc&amp;start=0">Install amule</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>185</wp:post_id>
		<wp:post_date>2008-03-16 04:54:00</wp:post_date>
		<wp:post_date_gmt>2008-03-15 17:54:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>install-amule-in-ubuntu</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="os"><![CDATA[OS]]></category>
		<category domain="post_tag" nicename="ubuntu"><![CDATA[Ubuntu]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_blog</wp:meta_key>
			<wp:meta_value><![CDATA[jeff.familyyu.net]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_author</wp:meta_key>
			<wp:meta_value><![CDATA[Jeff Yu   (余昌)]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_429d160645182d8e72b48e90f5e50eb3_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[5791496627766822536]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_efficient_related_posts</wp:meta_key>
			<wp:meta_value><![CDATA[a:7:{i:0;a:4:{s:2:"ID";s:3:"189";s:10:"post_title";s:54:"This is the way to install software, are you using it?";s:7:"matches";s:1:"1";s:9:"permalink";s:89:"http://jeff.familyyu.net/2008/03/24/this-is-the-way-to-install-software-are-you-using-it/";}i:1;a:4:{s:2:"ID";s:3:"188";s:10:"post_title";s:22:"Ubuntu Tips - Part one";s:7:"matches";s:1:"1";s:9:"permalink";s:57:"http://jeff.familyyu.net/2008/03/20/ubuntu-tips-part-one/";}i:2;a:4:{s:2:"ID";s:3:"187";s:10:"post_title";s:27:"Make voice input correctly.";s:7:"matches";s:1:"1";s:9:"permalink";s:63:"http://jeff.familyyu.net/2008/03/17/make-voice-input-correctly/";}i:3;a:4:{s:2:"ID";s:3:"186";s:10:"post_title";s:19:"Log in QQ in Ubuntu";s:7:"matches";s:1:"1";s:9:"permalink";s:56:"http://jeff.familyyu.net/2008/03/17/log-in-qq-in-ubuntu/";}i:4;a:4:{s:2:"ID";s:3:"184";s:10:"post_title";s:52:"Multiple sounds can exist at same time in Ubuntu7.10";s:7:"matches";s:1:"1";s:9:"permalink";s:89:"http://jeff.familyyu.net/2008/03/15/multiple-sounds-can-exist-at-same-time-in-ubuntu7-10/";}i:5;a:4:{s:2:"ID";s:3:"183";s:10:"post_title";s:38:"Make XMMS show chinese font correctly.";s:7:"matches";s:1:"1";s:9:"permalink";s:74:"http://jeff.familyyu.net/2008/03/15/make-xmms-show-chinese-font-correctly/";}i:6;a:4:{s:2:"ID";s:3:"182";s:10:"post_title";s:33:"Install Mplayer in the Ubuntu7.10";s:7:"matches";s:1:"1";s:9:"permalink";s:70:"http://jeff.familyyu.net/2008/03/14/install-mplayer-in-the-ubuntu7-10/";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_relation_threshold</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Log in QQ in Ubuntu</title>
		<link>http://jeff.familyyu.net/2008/03/17/log-in-qq-in-ubuntu/</link>
		<pubDate>Sun, 16 Mar 2008 15:57:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang.wordpress.com/2008/03/17/log-in-qq-in-ubuntu</guid>
		<description></description>
		<content:encoded><![CDATA[I guess this is most useful for chinese people, since most of us are having QQ.
So in case the Pidgin has troubles in logging in QQ, which as same as I have right now. Two other stuff that you could have a go.
1. install Eva software:
sudo apt-get install eva

if you can't input Chinese, open a chat dialog, right click, choose the scim. Details please see <a href="http://www.agou.com/?action=show&amp;id=14">Install Eva in ubuntu</a>

2. Using web based tool, such as http://www-t1.meebo.com.cn/index.html.

The Eva software has a bit trouble in accepting files which I test today, but chat is ok, I guess if you do want to receive a file in the ubuntu, then other IM might be a good choice for you to do that.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>186</wp:post_id>
		<wp:post_date>2008-03-17 02:57:00</wp:post_date>
		<wp:post_date_gmt>2008-03-16 15:57:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>log-in-qq-in-ubuntu</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="os"><![CDATA[OS]]></category>
		<category domain="post_tag" nicename="ubuntu"><![CDATA[Ubuntu]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_blog</wp:meta_key>
			<wp:meta_value><![CDATA[jeff.familyyu.net]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_author</wp:meta_key>
			<wp:meta_value><![CDATA[Jeff Yu   (余昌)]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_429d160645182d8e72b48e90f5e50eb3_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[8151017988673082472]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_efficient_related_posts</wp:meta_key>
			<wp:meta_value><![CDATA[a:7:{i:0;a:4:{s:2:"ID";s:3:"189";s:10:"post_title";s:54:"This is the way to install software, are you using it?";s:7:"matches";s:1:"1";s:9:"permalink";s:89:"http://jeff.familyyu.net/2008/03/24/this-is-the-way-to-install-software-are-you-using-it/";}i:1;a:4:{s:2:"ID";s:3:"188";s:10:"post_title";s:22:"Ubuntu Tips - Part one";s:7:"matches";s:1:"1";s:9:"permalink";s:57:"http://jeff.familyyu.net/2008/03/20/ubuntu-tips-part-one/";}i:2;a:4:{s:2:"ID";s:3:"187";s:10:"post_title";s:27:"Make voice input correctly.";s:7:"matches";s:1:"1";s:9:"permalink";s:63:"http://jeff.familyyu.net/2008/03/17/make-voice-input-correctly/";}i:3;a:4:{s:2:"ID";s:3:"185";s:10:"post_title";s:23:"Install amule in Ubuntu";s:7:"matches";s:1:"1";s:9:"permalink";s:60:"http://jeff.familyyu.net/2008/03/16/install-amule-in-ubuntu/";}i:4;a:4:{s:2:"ID";s:3:"184";s:10:"post_title";s:52:"Multiple sounds can exist at same time in Ubuntu7.10";s:7:"matches";s:1:"1";s:9:"permalink";s:89:"http://jeff.familyyu.net/2008/03/15/multiple-sounds-can-exist-at-same-time-in-ubuntu7-10/";}i:5;a:4:{s:2:"ID";s:3:"183";s:10:"post_title";s:38:"Make XMMS show chinese font correctly.";s:7:"matches";s:1:"1";s:9:"permalink";s:74:"http://jeff.familyyu.net/2008/03/15/make-xmms-show-chinese-font-correctly/";}i:6;a:4:{s:2:"ID";s:3:"182";s:10:"post_title";s:33:"Install Mplayer in the Ubuntu7.10";s:7:"matches";s:1:"1";s:9:"permalink";s:70:"http://jeff.familyyu.net/2008/03/14/install-mplayer-in-the-ubuntu7-10/";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_relation_threshold</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Make voice input correctly.</title>
		<link>http://jeff.familyyu.net/2008/03/17/make-voice-input-correctly/</link>
		<pubDate>Mon, 17 Mar 2008 12:17:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang.wordpress.com/2008/03/17/make-voice-input-correctly</guid>
		<description></description>
		<content:encoded><![CDATA[I'm stuck with no voice input problems, just got it solved today. hope it helps for you.

double click the "sound" icon to open up the volume control dialog, and then

Playback --&gt; Capture Mux, make it mute.
Options: Input Source -&gt; Front Misc.
Switches: IEC958 Capture checked.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>187</wp:post_id>
		<wp:post_date>2008-03-17 23:17:00</wp:post_date>
		<wp:post_date_gmt>2008-03-17 12:17:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>make-voice-input-correctly</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="os"><![CDATA[OS]]></category>
		<category domain="post_tag" nicename="ubuntu"><![CDATA[Ubuntu]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_blog</wp:meta_key>
			<wp:meta_value><![CDATA[jeff.familyyu.net]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_author</wp:meta_key>
			<wp:meta_value><![CDATA[Jeff Yu   (余昌)]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_429d160645182d8e72b48e90f5e50eb3_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[6240182478341938400]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_efficient_related_posts</wp:meta_key>
			<wp:meta_value><![CDATA[a:7:{i:0;a:4:{s:2:"ID";s:3:"189";s:10:"post_title";s:54:"This is the way to install software, are you using it?";s:7:"matches";s:1:"1";s:9:"permalink";s:89:"http://jeff.familyyu.net/2008/03/24/this-is-the-way-to-install-software-are-you-using-it/";}i:1;a:4:{s:2:"ID";s:3:"188";s:10:"post_title";s:22:"Ubuntu Tips - Part one";s:7:"matches";s:1:"1";s:9:"permalink";s:57:"http://jeff.familyyu.net/2008/03/20/ubuntu-tips-part-one/";}i:2;a:4:{s:2:"ID";s:3:"186";s:10:"post_title";s:19:"Log in QQ in Ubuntu";s:7:"matches";s:1:"1";s:9:"permalink";s:56:"http://jeff.familyyu.net/2008/03/17/log-in-qq-in-ubuntu/";}i:3;a:4:{s:2:"ID";s:3:"185";s:10:"post_title";s:23:"Install amule in Ubuntu";s:7:"matches";s:1:"1";s:9:"permalink";s:60:"http://jeff.familyyu.net/2008/03/16/install-amule-in-ubuntu/";}i:4;a:4:{s:2:"ID";s:3:"184";s:10:"post_title";s:52:"Multiple sounds can exist at same time in Ubuntu7.10";s:7:"matches";s:1:"1";s:9:"permalink";s:89:"http://jeff.familyyu.net/2008/03/15/multiple-sounds-can-exist-at-same-time-in-ubuntu7-10/";}i:5;a:4:{s:2:"ID";s:3:"183";s:10:"post_title";s:38:"Make XMMS show chinese font correctly.";s:7:"matches";s:1:"1";s:9:"permalink";s:74:"http://jeff.familyyu.net/2008/03/15/make-xmms-show-chinese-font-correctly/";}i:6;a:4:{s:2:"ID";s:3:"182";s:10:"post_title";s:33:"Install Mplayer in the Ubuntu7.10";s:7:"matches";s:1:"1";s:9:"permalink";s:70:"http://jeff.familyyu.net/2008/03/14/install-mplayer-in-the-ubuntu7-10/";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_relation_threshold</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Ubuntu Tips - Part one</title>
		<link>http://jeff.familyyu.net/2008/03/20/ubuntu-tips-part-one/</link>
		<pubDate>Wed, 19 Mar 2008 16:50:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang.wordpress.com/2008/03/20/ubuntu-tips-part-one</guid>
		<description></description>
		<content:encoded><![CDATA[1. You need to set the ubuntu environment in /etc/profile, such as JDK setting and so on. putting other settings that need to be initialized firstly in the .bashrc.

2. Install software in the /usr/local/share/applications

3. Install packages in the /opt/ folder.

4. start or stop vsftp server
sudo  /etc/init.d/vsftpd [start | stop | restart]

5. Install printer from window-shared.
* install the samba
* System -&gt; Administration -&gt; Printing -&gt; New Printer

6.  Accessing Windows shared files. (samba server is required)
Open nautilus，CTRL+L，in the location input smb://192.168.100.x .

7.  Use xchm to open the chm file.

8. Using du -sh File to show the File size. such as:
du -sh /opt/downloads

9. Press "CTRL + H" to show the hidden files in the nautilus.

10. Show what kind of process occupy the "sound"
lsof  /dev/snd/controlC0

11. Create a soft link:
ln -s source target

12. Remove a link:
unlink linkName

13. for the bz2 archive, use
bunzip2 fileName.bz2 to extract the archive.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>188</wp:post_id>
		<wp:post_date>2008-03-20 03:50:00</wp:post_date>
		<wp:post_date_gmt>2008-03-19 16:50:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>ubuntu-tips-part-one</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="os"><![CDATA[OS]]></category>
		<category domain="post_tag" nicename="ubuntu"><![CDATA[Ubuntu]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_blog</wp:meta_key>
			<wp:meta_value><![CDATA[jeff.familyyu.net]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_author</wp:meta_key>
			<wp:meta_value><![CDATA[Jeff Yu   (余昌)]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_429d160645182d8e72b48e90f5e50eb3_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[3030291835797955967]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_efficient_related_posts</wp:meta_key>
			<wp:meta_value><![CDATA[a:7:{i:0;a:4:{s:2:"ID";s:3:"189";s:10:"post_title";s:54:"This is the way to install software, are you using it?";s:7:"matches";s:1:"1";s:9:"permalink";s:89:"http://jeff.familyyu.net/2008/03/24/this-is-the-way-to-install-software-are-you-using-it/";}i:1;a:4:{s:2:"ID";s:3:"187";s:10:"post_title";s:27:"Make voice input correctly.";s:7:"matches";s:1:"1";s:9:"permalink";s:63:"http://jeff.familyyu.net/2008/03/17/make-voice-input-correctly/";}i:2;a:4:{s:2:"ID";s:3:"186";s:10:"post_title";s:19:"Log in QQ in Ubuntu";s:7:"matches";s:1:"1";s:9:"permalink";s:56:"http://jeff.familyyu.net/2008/03/17/log-in-qq-in-ubuntu/";}i:3;a:4:{s:2:"ID";s:3:"185";s:10:"post_title";s:23:"Install amule in Ubuntu";s:7:"matches";s:1:"1";s:9:"permalink";s:60:"http://jeff.familyyu.net/2008/03/16/install-amule-in-ubuntu/";}i:4;a:4:{s:2:"ID";s:3:"184";s:10:"post_title";s:52:"Multiple sounds can exist at same time in Ubuntu7.10";s:7:"matches";s:1:"1";s:9:"permalink";s:89:"http://jeff.familyyu.net/2008/03/15/multiple-sounds-can-exist-at-same-time-in-ubuntu7-10/";}i:5;a:4:{s:2:"ID";s:3:"183";s:10:"post_title";s:38:"Make XMMS show chinese font correctly.";s:7:"matches";s:1:"1";s:9:"permalink";s:74:"http://jeff.familyyu.net/2008/03/15/make-xmms-show-chinese-font-correctly/";}i:6;a:4:{s:2:"ID";s:3:"182";s:10:"post_title";s:33:"Install Mplayer in the Ubuntu7.10";s:7:"matches";s:1:"1";s:9:"permalink";s:70:"http://jeff.familyyu.net/2008/03/14/install-mplayer-in-the-ubuntu7-10/";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_relation_threshold</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>This is the way to install software, are you using it?</title>
		<link>http://jeff.familyyu.net/2008/03/24/this-is-the-way-to-install-software-are-you-using-it/</link>
		<pubDate>Sun, 23 Mar 2008 13:35:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang.wordpress.com/2008/03/24/this-is-the-way-to-install-software-are-you-using-it</guid>
		<description></description>
		<content:encoded><![CDATA[I know it is a bit later to write an entry about this installing way, you know, I am always a bit later than it should be. ;(. anyway, it is better than never.:)

If you read my blog, you might know I am using the Ubuntu these days, and I am comfortable with the "apt-get" utility (actually, it is from the Debian distro) to install the software that I want, I think this way is far better than the old way, which needs you download the software into your local disk and install it. In Ubuntu, if you need to install a software, lets say it called "eva", you just simply run the command: sudo apt-get install eva. and then it will download and install from the internet. It doesn't need you to find the eva in the internet.

Today, I am trying to use the fedora distro, and I found there is an similar utility called "yum", which is "apt-get" in Ubuntu. Suddenly, I think of the "features" module in the <a href="http://servicemix.apache.org">Apache Servicemix</a> <a href="http://servicemix.apache.org/SMX4KNL/index.html"> Kernel</a>, it uses the similar way to install the feature, such as NMR feature. Actually, I can't say it is belong to the servicemix functionality, it stems from the OSGi, which has an OBR (OSGi Bundle Repository).

Software is quite different from other commodities, it is very nature for us to see a software with a version, but it is not common for us to have a version with other commodities. The stuff with version also means it changes a lot and very frequent. it means you need to update the software from time to time to make it up-to-date, for the security or functionality sake.  The other aspect of software is dependency, the softwares are connected, most of time they are not isolated. So here comes the "dependency" issue for the software library.

<a href="http://maven.apache.org">Apache Maven</a> is famous on resolving the "dependency" issue, it introduces the "pom.xml" file, which you can declare the repository and the library that you used in your project.

So back to the "apt-get" utility or "yum" utility in linux distro, it typically has a config file which contains the repository url, take ubuntu for example, it is in the "/etc/apt/sources.list". You can add/update the repository url, which contains the packages or softwares. if you need to install/upgrade/remove a software, simply running below commands:
<pre> apt-get install/upgrade/remove "softwareName"</pre>
but this should be happening that your computer are connected..]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>189</wp:post_id>
		<wp:post_date>2008-03-24 00:35:00</wp:post_date>
		<wp:post_date_gmt>2008-03-23 13:35:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>this-is-the-way-to-install-software-are-you-using-it</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="fedora"><![CDATA[Fedora]]></category>
		<category domain="category" nicename="maven"><![CDATA[Maven]]></category>
		<category domain="post_tag" nicename="maven"><![CDATA[Maven]]></category>
		<category domain="category" nicename="os"><![CDATA[OS]]></category>
		<category domain="category" nicename="thoughts"><![CDATA[Thoughts]]></category>
		<category domain="post_tag" nicename="ubuntu"><![CDATA[Ubuntu]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_blog</wp:meta_key>
			<wp:meta_value><![CDATA[jeff.familyyu.net]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_author</wp:meta_key>
			<wp:meta_value><![CDATA[Jeff Yu   (余昌)]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_429d160645182d8e72b48e90f5e50eb3_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[8431568852144514736]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_efficient_related_posts</wp:meta_key>
			<wp:meta_value><![CDATA[a:10:{i:0;a:4:{s:2:"ID";s:3:"264";s:10:"post_title";s:47:"Install VirtualBox and Chrome beta in Fedora 10";s:7:"matches";s:1:"1";s:9:"permalink";s:84:"http://jeff.familyyu.net/2009/12/12/install-virtualbox-and-chrome-beta-in-fedora-10/";}i:1;a:4:{s:2:"ID";s:3:"231";s:10:"post_title";s:27:"Fedora environment setting.";s:7:"matches";s:1:"1";s:9:"permalink";s:63:"http://jeff.familyyu.net/2009/07/08/fedora-environment-setting/";}i:2;a:4:{s:2:"ID";s:3:"228";s:10:"post_title";s:40:"Fedora 10 使用NetworkManager配置ADSL";s:7:"matches";s:1:"1";s:9:"permalink";s:101:"http://jeff.familyyu.net/2009/06/03/fedora-10-%e4%bd%bf%e7%94%a8networkmanager%e9%85%8d%e7%bd%aeadsl/";}i:3;a:4:{s:2:"ID";s:3:"220";s:10:"post_title";s:45:"How to fix "Lock Assertion Failure" in Fedora";s:7:"matches";s:1:"1";s:9:"permalink";s:80:"http://jeff.familyyu.net/2008/10/08/how-to-fix-lock-assertion-failure-in-fedora/";}i:4;a:4:{s:2:"ID";s:3:"207";s:10:"post_title";s:28:"Install Firefox3 in Fedora8.";s:7:"matches";s:1:"1";s:9:"permalink";s:64:"http://jeff.familyyu.net/2008/06/18/install-firefox3-in-fedora8/";}i:5;a:4:{s:2:"ID";s:3:"205";s:10:"post_title";s:37:"Fedora8 in Lenovo T61P with Projector";s:7:"matches";s:1:"1";s:9:"permalink";s:74:"http://jeff.familyyu.net/2008/06/17/fedora8-in-lenovo-t61p-with-projector/";}i:6;a:4:{s:2:"ID";s:3:"203";s:10:"post_title";s:44:"Postgresql installation/connection in Fedora";s:7:"matches";s:1:"1";s:9:"permalink";s:80:"http://jeff.familyyu.net/2008/05/19/postgresql-installationconnection-in-fedora/";}i:7;a:4:{s:2:"ID";s:3:"202";s:10:"post_title";s:34:"Using wireless in Fedora8 for T61P";s:7:"matches";s:1:"1";s:9:"permalink";s:71:"http://jeff.familyyu.net/2008/05/05/using-wireless-in-fedora8-for-t61p/";}i:8;a:4:{s:2:"ID";s:3:"201";s:10:"post_title";s:26:"My Fedora8 Roadmap on T61P";s:7:"matches";s:1:"1";s:9:"permalink";s:63:"http://jeff.familyyu.net/2008/05/01/my-fedora8-roadmap-on-t61p/";}i:9;a:4:{s:2:"ID";s:3:"200";s:10:"post_title";s:34:"Dell D820 and Lenovo ThinkPad T61P";s:7:"matches";s:1:"1";s:9:"permalink";s:71:"http://jeff.familyyu.net/2008/05/01/dell-d820-and-lenovo-thinkpad-t61p/";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_relation_threshold</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>74</wp:comment_id>
			<wp:comment_author><![CDATA[Anonymous]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://Anonymousnoreply@blogger.com</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2008-03-24 02:09:00</wp:comment_date>
			<wp:comment_date_gmt>2008-03-23 15:09:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[The Microsoft Windows autoupdate work in this way, so it's more humanity.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Fedora8 installation</title>
		<link>http://jeff.familyyu.net/2008/03/25/fedora8-installation/</link>
		<pubDate>Tue, 25 Mar 2008 02:53:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang.wordpress.com/2008/03/25/fedora8-installation</guid>
		<description></description>
		<content:encoded><![CDATA[Because I need to use fedora in my company, below are some install instruction.

1. Input chinese input.
1) running: yum groupinstall chinese-support
2) System -&gt; Preference -&gt; Personal -&gt; InputMethod: Tick enable input method feature option.

2. Polish the chinese font.
1) Copy the fonts from Windows system.
cd /usr/share/fonts
mkdir windows
cp all windows font on it.
fc-cache /usr/share/fonts/windows
fc-cache -fv
2) restart Xwindow
3) Update the System font and firefox fonts accordingly.

Reference:
[1] <a href="http://sandajian.googlepages.com/fedora8-chinese">http://sandajian.googlepages.com/fedora8-chinese</a>
[2] <a href="http://www.5istudy.cn/system/unix-linux/Fedora7-332.html">http://www.5istudy.cn/system/unix-linux/Fedora7-332.html</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>190</wp:post_id>
		<wp:post_date>2008-03-25 13:53:00</wp:post_date>
		<wp:post_date_gmt>2008-03-25 02:53:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>fedora8-installation</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="fedora"><![CDATA[Fedora]]></category>
		<category domain="category" nicename="os"><![CDATA[OS]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_blog</wp:meta_key>
			<wp:meta_value><![CDATA[jeff.familyyu.net]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_author</wp:meta_key>
			<wp:meta_value><![CDATA[Jeff Yu   (余昌)]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_429d160645182d8e72b48e90f5e50eb3_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[5751505467971017748]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_efficient_related_posts</wp:meta_key>
			<wp:meta_value><![CDATA[a:10:{i:0;a:4:{s:2:"ID";s:3:"264";s:10:"post_title";s:47:"Install VirtualBox and Chrome beta in Fedora 10";s:7:"matches";s:1:"1";s:9:"permalink";s:84:"http://jeff.familyyu.net/2009/12/12/install-virtualbox-and-chrome-beta-in-fedora-10/";}i:1;a:4:{s:2:"ID";s:3:"231";s:10:"post_title";s:27:"Fedora environment setting.";s:7:"matches";s:1:"1";s:9:"permalink";s:63:"http://jeff.familyyu.net/2009/07/08/fedora-environment-setting/";}i:2;a:4:{s:2:"ID";s:3:"228";s:10:"post_title";s:40:"Fedora 10 使用NetworkManager配置ADSL";s:7:"matches";s:1:"1";s:9:"permalink";s:101:"http://jeff.familyyu.net/2009/06/03/fedora-10-%e4%bd%bf%e7%94%a8networkmanager%e9%85%8d%e7%bd%aeadsl/";}i:3;a:4:{s:2:"ID";s:3:"220";s:10:"post_title";s:45:"How to fix "Lock Assertion Failure" in Fedora";s:7:"matches";s:1:"1";s:9:"permalink";s:80:"http://jeff.familyyu.net/2008/10/08/how-to-fix-lock-assertion-failure-in-fedora/";}i:4;a:4:{s:2:"ID";s:3:"207";s:10:"post_title";s:28:"Install Firefox3 in Fedora8.";s:7:"matches";s:1:"1";s:9:"permalink";s:64:"http://jeff.familyyu.net/2008/06/18/install-firefox3-in-fedora8/";}i:5;a:4:{s:2:"ID";s:3:"205";s:10:"post_title";s:37:"Fedora8 in Lenovo T61P with Projector";s:7:"matches";s:1:"1";s:9:"permalink";s:74:"http://jeff.familyyu.net/2008/06/17/fedora8-in-lenovo-t61p-with-projector/";}i:6;a:4:{s:2:"ID";s:3:"203";s:10:"post_title";s:44:"Postgresql installation/connection in Fedora";s:7:"matches";s:1:"1";s:9:"permalink";s:80:"http://jeff.familyyu.net/2008/05/19/postgresql-installationconnection-in-fedora/";}i:7;a:4:{s:2:"ID";s:3:"202";s:10:"post_title";s:34:"Using wireless in Fedora8 for T61P";s:7:"matches";s:1:"1";s:9:"permalink";s:71:"http://jeff.familyyu.net/2008/05/05/using-wireless-in-fedora8-for-t61p/";}i:8;a:4:{s:2:"ID";s:3:"201";s:10:"post_title";s:26:"My Fedora8 Roadmap on T61P";s:7:"matches";s:1:"1";s:9:"permalink";s:63:"http://jeff.familyyu.net/2008/05/01/my-fedora8-roadmap-on-t61p/";}i:9;a:4:{s:2:"ID";s:3:"200";s:10:"post_title";s:34:"Dell D820 and Lenovo ThinkPad T61P";s:7:"matches";s:1:"1";s:9:"permalink";s:71:"http://jeff.familyyu.net/2008/05/01/dell-d820-and-lenovo-thinkpad-t61p/";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_relation_threshold</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>World is flat, Working from home.</title>
		<link>http://jeff.familyyu.net/2008/03/27/world-is-flat-working-from-home/</link>
		<pubDate>Thu, 27 Mar 2008 08:44:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang.wordpress.com/2008/03/27/world-is-flat-working-from-home</guid>
		<description></description>
		<content:encoded><![CDATA[My ex company <a href="http://www.iona.com/">IONA</a> just closed down the Beijing R&amp;D center in January 2008. You can see this news from <a href="http://ie.mofcom.gov.cn/aarticle/jmxw/200802/20080205367694.html">this link.</a>

IONA has an open source division, which is consist of couple people, which has been acquired from the Logicblaze.  They are mostly invovled in Apache Servicemix, ActiveMQ, Geronimo. and they are all working from home.

But in china, I still haven't seen any people that is working from home, and I remembered couple years ago, it seems it is quite often that you can work from home oversea. Right now, I am joining in the <a href="http://www.redhat.com/">Redhat Beijing R&amp;D</a> <a href="http://www.jboss.org/">JBoss</a> division, although I am still in probation period, but I would still want to say that "We are able to work from home here", although it is just 1-2 days per weeek, but this is AWESOME already!!! This is a great improvement, I would say that this phenomenon will become more and more common in china in the future, i am looking forward to that day.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>191</wp:post_id>
		<wp:post_date>2008-03-27 19:44:00</wp:post_date>
		<wp:post_date_gmt>2008-03-27 08:44:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>world-is-flat-working-from-home</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="others"><![CDATA[Others]]></category>
		<category domain="category" nicename="thoughts"><![CDATA[Thoughts]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_blog</wp:meta_key>
			<wp:meta_value><![CDATA[jeff.familyyu.net]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_author</wp:meta_key>
			<wp:meta_value><![CDATA[Jeff Yu   (余昌)]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_429d160645182d8e72b48e90f5e50eb3_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[5108489481497865482]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>75</wp:comment_id>
			<wp:comment_author><![CDATA[Willem]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.blogger.com/profile/12054483373037780138</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2008-09-01 15:29:00</wp:comment_date>
			<wp:comment_date_gmt>2008-09-01 04:29:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[It is not easy to work from home for a whole week working day. I'd like to get more f2f communication in office :)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>76</wp:comment_id>
			<wp:comment_author><![CDATA[江波]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.blogger.com/profile/00734815834104840363</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2010-01-31 02:38:14</wp:comment_date>
			<wp:comment_date_gmt>2010-01-30 15:38:14</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I&#039;m  full of envy when i know that you can work at home,but i think freedom is the most important thing for a coder.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Integration Specifiations - JCA spec</title>
		<link>http://jeff.familyyu.net/2008/03/31/integration-specifiations-jca-spec/</link>
		<pubDate>Mon, 31 Mar 2008 06:27:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang.wordpress.com/2008/03/31/integration-specifiations-jca-spec</guid>
		<description></description>
		<content:encoded><![CDATA[In this series, I am going to talk about three Java Specifications, they are JCA, JBI, JMS spec. I would say these three specs are all for integrating with exsiting legacy system, such as Enterprise Information System(EIS).<br /><br />Firstly, lets see what JCA spec is about. Before the JCA spec was introduced, the vendors were using their own proprietary API to do the integration, and it was non-portable, I mean, switch from different Application Servers.<br /><br />So here comes the specification that tries to build a standard API to solve the portable problem as JavaEE did. The JCA spec is consist of two participants. one is Application Server Vendor, the other is Resource Adapter provider.<br /><br />For the application server vendor, most part of job is to support the resource adapter deployment. so I will examine the spec from resource adapter provider's perspective.<br /><br />Here is the list that resource adapter needs to accomplish, it falls two main buckets:<br /><br />1. Outbound Connection. (outside systems initiate data request to your system).<br /><ul><li>   1). Connection Management Contract</li><li>   2). Transaction Management Contract</li><li>   3). Security Management Contract</li></ul>2. Inbound Connection. (your system initiates data request to other systems)<br /><ul><li>   1). Lifecycle Management Contract.</li><li>   2). Message Inflow Contract.</li></ul>It seems that JCA spec would solve the integration against legacy systems, the truth is that the JCA spec is  designed to support the traditional request-response model, but fails to support complex long running transactions and integrations scenarios, because most of integration scenarios like to support it in asynchronous way.<br /><br />So here comes to JBI spec that tries to rescue, which I am going to describe in next entry....<br /><br />References<br />[1] <a href="http://www.javaworld.com/javaworld/jw-11-2001/jw-1121-jca.html?page=1">connect the enterprise with JCA.</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>192</wp:post_id>
		<wp:post_date>2008-03-31 17:27:00</wp:post_date>
		<wp:post_date_gmt>2008-03-31 06:27:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>integration-specifiations-jca-spec</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="java"><![CDATA[Java]]></category>
		<category domain="category" nicename="soa"><![CDATA[SOA]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_blog</wp:meta_key>
			<wp:meta_value><![CDATA[jeff.familyyu.net]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_author</wp:meta_key>
			<wp:meta_value><![CDATA[Jeff Yu   (余昌)]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_429d160645182d8e72b48e90f5e50eb3_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[535389004677429135]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Integration Specifiations - JBI spec</title>
		<link>http://jeff.familyyu.net/2008/04/02/integration-specifiations-jbi-spec/</link>
		<pubDate>Wed, 02 Apr 2008 07:41:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang.wordpress.com/2008/04/02/integration-specifiations-jbi-spec</guid>
		<description></description>
		<content:encoded><![CDATA[As I said in the last entry, it has drawback in the JCA spec for Enterprise integration, besides, we can not put the JCA in the Message Oriented Middleware category, which JBI, JMS were in.<br /><br />Ok, today I am talking about the JBI spec, firstly it stands for Java Buisiness Integration, and it is a way to combine all the existing services. In the JBI Spec, we are talking about nothing but service, and the Message is the unit that we are exchanging.<br /><br />JBI as a container spec, its content can split into two category.<br />1. Runtime<br /><ul><li>   1) Normalized Message</li><li>   2) Normalized Message Router</li><li>   3) Component</li><li>       3.1 Binding Component -&gt; which connects to the outside endpoint</li><li>       3.2 Service Engine  -&gt; which locates in the ESB itself.</li><li>   4) DeliveryChannel</li><li>   5) Message Exchange Pattern</li></ul>2. Management<br /><ul><li> 1) Packaging</li><li>2) Component installation</li><li>3) Service deployment.</li><li>4) Monitor</li></ul>We can see that the management functionality is to help the runtime. The primary function of runtime is to route message from one component to another. Messages are delivered in a Normalized Message, which was described in WSDL2.0, and the Normalized Message Router are in charge of routing, you also can use servicemix-eip component or <a href="http://activemq.apache.org/camel">Apache Camel</a> to help you build more complicated routing.<br /><br />JBI environment is consist of components, it makes no sense if there are no components. component can divide into two category in terms of logical functionality. One is Binding Component, which we can see as a bridge to connect the outside service. The other is the Service Enginee that located in its inner ESB.<br /><br />Once we have the Router, Component. we also introduce a channel, which called Delivery Channel in the JBI spec for communicating between Normalized Message Router and Components.<br /><br />At last, seems there are many kinds of message exchange categories, such as One-Way, Request-Response etc, we introduced a Message Exchange Pattern concept to represent this.<br /><br />Well, for the JBI 1.0, I think pros in it is: Normalized Message, Normalized Message Router. And things not good are: Component specific API, not easy to write a SU, SA..<br /><br />PS: Freeman and I wrote a presentation about Apache ServiceMix, which is JBI 1.0 compliant. you can download from <a href="http://jeff.yuchang.googlepages.com/servicemix.pdf">here</a>.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>193</wp:post_id>
		<wp:post_date>2008-04-02 18:41:00</wp:post_date>
		<wp:post_date_gmt>2008-04-02 07:41:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>integration-specifiations-jbi-spec</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="java"><![CDATA[Java]]></category>
		<category domain="category" nicename="soa"><![CDATA[SOA]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_blog</wp:meta_key>
			<wp:meta_value><![CDATA[jeff.familyyu.net]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_author</wp:meta_key>
			<wp:meta_value><![CDATA[Jeff Yu   (余昌)]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_429d160645182d8e72b48e90f5e50eb3_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[2539294285833758353]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>How to design new services? Best Practise.</title>
		<link>http://jeff.familyyu.net/2008/04/03/how-to-design-new-services-best-practise/</link>
		<pubDate>Thu, 03 Apr 2008 06:54:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang.wordpress.com/2008/04/03/how-to-design-new-services-best-practise</guid>
		<description></description>
		<content:encoded><![CDATA[This is an very interesting blog. <a href="http://jbossesb.blogspot.com/2007/08/how-to-design-new-services-best.html">How to design new services? Best Practise</a> From Kurt Stam, and those comments are also worth you reading.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>194</wp:post_id>
		<wp:post_date>2008-04-03 17:54:00</wp:post_date>
		<wp:post_date_gmt>2008-04-03 06:54:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>how-to-design-new-services-best-practise</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="soa"><![CDATA[SOA]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_blog</wp:meta_key>
			<wp:meta_value><![CDATA[jeff.familyyu.net]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_author</wp:meta_key>
			<wp:meta_value><![CDATA[Jeff Yu   (余昌)]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_429d160645182d8e72b48e90f5e50eb3_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[2125190452828752821]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Links on WS-BPEL</title>
		<link>http://jeff.familyyu.net/2008/04/05/links-on-ws-bpel/</link>
		<pubDate>Sat, 05 Apr 2008 11:19:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang.wordpress.com/2008/04/05/links-on-ws-bpel</guid>
		<description></description>
		<content:encoded><![CDATA[1. <a href="http://www.eclipse.org/tptp/platform/documents/design/choreography_html/tutorials/wsbpel_tut.html">WS-BPEL 2.0 Tutorial</a><br />2. <a href="http://docs.oasis-open.org/wsbpel/2.0/OS/wsbpel-v2.0-OS.html">WS-BPEL Specification</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>195</wp:post_id>
		<wp:post_date>2008-04-05 22:19:00</wp:post_date>
		<wp:post_date_gmt>2008-04-05 11:19:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>links-on-ws-bpel</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="java"><![CDATA[Java]]></category>
		<category domain="category" nicename="soa"><![CDATA[SOA]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_blog</wp:meta_key>
			<wp:meta_value><![CDATA[jeff.familyyu.net]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_author</wp:meta_key>
			<wp:meta_value><![CDATA[Jeff Yu   (余昌)]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_429d160645182d8e72b48e90f5e50eb3_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[377047251399771794]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Links on WS-CDL.</title>
		<link>http://jeff.familyyu.net/2008/04/07/links-on-ws-cdl/</link>
		<pubDate>Mon, 07 Apr 2008 07:31:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang.wordpress.com/2008/04/07/links-on-ws-cdl</guid>
		<description></description>
		<content:encoded><![CDATA[Firstly, WS-CDL stands for Web Services Choreography Description Language.

1. <a href="http://www.ebpml.org/ws_-_cdl.htm">An introduction &amp; comparison between WS-CDL and WS-BPEL</a>
2. <a href="http://www.w3.org/TR/ws-cdl-10/"> WS-CDL spec</a>
3. <a href="http://weblogs.java.net/blog/johnreynolds/archive/2006/01/service_orchest.html">Two definition explanations on WS-CDL and WS-BPEL</a> from John Reynolds. Also the two comments from Steve is very good.
4. <a href="http://www.w3.org/TR/2006/WD-ws-cdl-10-primer-20060619/">An WS-CDL example illustration</a>
5. <a href="http://babel.ls.fi.upm.es/%7Efred/papers/jsweb2006.pdf">Implementing WS-CDL essay</a>

And if you want to know more about WS-CDL, then DO NOT miss below two links.
1) <a href="http://pi4tech.blogspot.com/">Pi4Tech Blog</a>
2) <a href="http://www.pi4.org/">Pi4.org</a>

<span style="color: #ff0000;">Update:</span> Add the 'implementing ws-cdl essay' on Aug 4, 2008.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>196</wp:post_id>
		<wp:post_date>2008-04-07 18:31:00</wp:post_date>
		<wp:post_date_gmt>2008-04-07 07:31:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>links-on-ws-cdl</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="soa"><![CDATA[SOA]]></category>
		<category domain="post_tag" nicename="ws-cdl"><![CDATA[WS-CDL]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_blog</wp:meta_key>
			<wp:meta_value><![CDATA[jeff.familyyu.net]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_author</wp:meta_key>
			<wp:meta_value><![CDATA[Jeff Yu   (余昌)]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_429d160645182d8e72b48e90f5e50eb3_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[665001176126524482]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_efficient_related_posts</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{i:0;a:4:{s:2:"ID";s:3:"214";s:10:"post_title";s:20:"Conversation Pattern";s:7:"matches";s:1:"1";s:9:"permalink";s:57:"http://jeff.familyyu.net/2008/08/11/conversation-pattern/";}i:1;a:4:{s:2:"ID";s:3:"197";s:10:"post_title";s:32:"Brief Introduction on the WS-CDL";s:7:"matches";s:1:"1";s:9:"permalink";s:69:"http://jeff.familyyu.net/2008/04/14/brief-introduction-on-the-ws-cdl/";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_relation_threshold</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>77</wp:comment_id>
			<wp:comment_author><![CDATA[Steve Ross-Talbot]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.blogger.com/profile/07129726457713722156</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2008-04-30 08:35:00</wp:comment_date>
			<wp:comment_date_gmt>2008-04-29 21:35:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Great blog entry. Having worked on WS-CDL since its inception it is very nice indeed to see it finally being taken up by a large vendor.I hope that the work will make Redhat stand out from the crowd and provide the much needed joined up story that SOA requires to truly succeed.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Brief Introduction on the WS-CDL</title>
		<link>http://jeff.familyyu.net/2008/04/14/brief-introduction-on-the-ws-cdl/</link>
		<pubDate>Mon, 14 Apr 2008 07:14:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang.wordpress.com/2008/04/14/brief-introduction-on-the-ws-cdl</guid>
		<description></description>
		<content:encoded><![CDATA[Because of the work's need, I need to work on the integration between the <a href="http://pi4soa.wiki.sourceforge.net/">WS-CDL Tool</a> and <a href="http://www.jboss.org/jbossesb">JBoss ESB</a>, and here comes the chance that need to take a look at the WS-CDL specification.

Why the WS-CDL specification exists? what is it for? IMHO, now we have the WSDL as a contract to define the service in a language-independent way.  we can consider the "interface" as a contract definition in the JAVA world. But we don't have any thing to define the collaboration contract among multiple participants yet. Some people might say the UML Sequence diagram is a way to document it, but it lacks of the data description which has been used in the exchanges in the collaboration.

With the WS-CDL spec and its according tool, it can help us to design a system from top-down approach, well, it is sort of reminding me the era of MDA(Model Driven Architecture), personally, I am not a fan of MDA, that includes a lot of code generation. To some extent, WS-CDL is belong to the MDA, but as I said before, WS-CDL just defines the contract that multiple participants are working, it is not trying to describe everything in detail, so that you can build the whole system with one "Generate Code" click.

WS-CDL is mainly used for the Business Analyst. With current tools support, it can generate to WS-BPEL or Java skeleton code.

So, back to the WS-CDL specification itself, what is it composed of?

1. Collaborating Participants
<ul>
	<li> 1.1 RoleType   -- It defines the role, as the minimum unit for participants.</li>
	<li> 1.2 RelationshipType -- It defines the relationship in roles.</li>
	<li> 1.3 ParticipantType -- It is consist of one or multiple roles.</li>
	<li> 1.4 ChannelType -- How and where participants collaborate.</li>
</ul>
2. Information Driven Collaborations
<ul>
	<li> 2.1 InformationType -- described the type of information used, simple wrapper for xsd.</li>
	<li> 2.2 Variable</li>
	<li> 2.3 Expressions</li>
	<li> 2.4 Token and TokenLocator. (Tokens differ from variables in that variables contain values which MAY be populated as the result of actions or events within a choreography life-line whereas tokens contain information that define the piece of the data that is relevant.)</li>
	<li> 2.5 WorkUnit</li>
	<li> 2.6 Choreography</li>
	<li> 2.7 Choreography Life-line</li>
	<li> 2.8 Choreography Exception Handling</li>
	<li> 2.9 Choreography Finalization</li>
</ul>
3. Activities

3.1 Ordering Structures
<ul>
	<li> 3.1.1 Sequence</li>
	<li> 3.1.2 Parallel</li>
	<li> 3.1.3 Choice</li>
</ul>
3.2 Interacting
<ul>
	<li> 3.2.1 Interaction Based Information Alignment.</li>
</ul>
For full and detailed explanation please see <a href="http://www.w3.org/TR/ws-cdl-10/">WS-CDL specification.</a>

Also, see <a href="http://www.infoq.com/presentations/hohpe-soa-conversations">Gregor's Presentation </a> at infoQ.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>197</wp:post_id>
		<wp:post_date>2008-04-14 18:14:00</wp:post_date>
		<wp:post_date_gmt>2008-04-14 07:14:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>brief-introduction-on-the-ws-cdl</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="soa"><![CDATA[SOA]]></category>
		<category domain="post_tag" nicename="ws-cdl"><![CDATA[WS-CDL]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_blog</wp:meta_key>
			<wp:meta_value><![CDATA[jeff.familyyu.net]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_author</wp:meta_key>
			<wp:meta_value><![CDATA[Jeff Yu   (余昌)]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_429d160645182d8e72b48e90f5e50eb3_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[3624073728468169240]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_efficient_related_posts</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{i:0;a:4:{s:2:"ID";s:3:"214";s:10:"post_title";s:20:"Conversation Pattern";s:7:"matches";s:1:"1";s:9:"permalink";s:57:"http://jeff.familyyu.net/2008/08/11/conversation-pattern/";}i:1;a:4:{s:2:"ID";s:3:"196";s:10:"post_title";s:16:"Links on WS-CDL.";s:7:"matches";s:1:"1";s:9:"permalink";s:52:"http://jeff.familyyu.net/2008/04/07/links-on-ws-cdl/";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_relation_threshold</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>service-based enterprise integration pattern made easy</title>
		<link>http://jeff.familyyu.net/2008/04/15/service-based-enterprise-integration-pattern-made-easy/</link>
		<pubDate>Tue, 15 Apr 2008 02:33:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang.wordpress.com/2008/04/15/service-based-enterprise-integration-pattern-made-easy</guid>
		<description></description>
		<content:encoded><![CDATA[A new artilce from Dr. Waseem Roshen, in the series titled: <a href="http://www.ibm.com/developerworks/views/webservices/libraryview.jsp?search_by=Services-based+enterprise+integration+patterns+made+easy">Services-based enterprise integration patterns made easy</a>, it is quite interesting and easy-read to know the Enterprise Integration concepts. and also a little background.;)]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>198</wp:post_id>
		<wp:post_date>2008-04-15 13:33:00</wp:post_date>
		<wp:post_date_gmt>2008-04-15 02:33:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>service-based-enterprise-integration-pattern-made-easy</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="soa"><![CDATA[SOA]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_blog</wp:meta_key>
			<wp:meta_value><![CDATA[jeff.familyyu.net]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_author</wp:meta_key>
			<wp:meta_value><![CDATA[Jeff Yu   (余昌)]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_429d160645182d8e72b48e90f5e50eb3_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[1881078918724823337]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Open source business in Redhat</title>
		<link>http://jeff.familyyu.net/2008/04/22/open-source-business-in-redhat/</link>
		<pubDate>Tue, 22 Apr 2008 03:18:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang.wordpress.com/2008/04/22/open-source-business-in-redhat</guid>
		<description></description>
		<content:encoded><![CDATA[As I said earlier, I've joined in the Redhat JBoss Divsion after IONA closed down the Beijing R&amp;D. In the Redhat, it is a bit different from what I used to know about open source business.

Redhat now has two open source distribution. One is <a href="http://fedoraproject.org/">Fedora</a>, the other is RedHat Enterprise Linux, (RHEL for short).

Actually, Fedora is a community distribution, which means it is not only developed by Redhatters, but in the community. and it releases twice a year, you can free to download the fedora and use it without any charges.

In the other hand, the RHEL is distributed by Redhat Corp, its packages, softwares are from the Fedora selectively, it is well tested by redhatters, it just release once in two years. The main object for RHEL is the stable. If you need to use the RHEL, then you need to pay the subscribe fee to Redhat.

So, this is how Redhat runs the Operating System. After Redhat acquired the JBoss, now we run the JBoss Open Source similiar to what we do in the OS.

We have <a href="http://www.jboss.org">jboss.org</a> and <a href="www.jboss.com">jboss.com</a> two websites, which the jboss.org is a community version, it releases more often in the jboss.org. whereas we only release 1 or 2 times each year for the jboss.com.
we also guarantee that the jboss.com distribution is well-tested, more stable than the community one.

I think this solution makes sense, in the community one, we are after cutting edge technology, most advance ideas and so on, but in the company one, we are also using cutting-edge technology, but we primarily focus on its stable for enterprise use.

For more detailed information on this, please see <a href="http://andrigjboss.blogspot.com/2008/04/why-adopt-jboss-enterprise-platforms.html">Andrig's post</a>.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>199</wp:post_id>
		<wp:post_date>2008-04-22 14:18:00</wp:post_date>
		<wp:post_date_gmt>2008-04-22 03:18:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>open-source-business-in-redhat</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="fedora"><![CDATA[Fedora]]></category>
		<category domain="category" nicename="jboss"><![CDATA[JBoss]]></category>
		<category domain="post_tag" nicename="open-source"><![CDATA[Open Source]]></category>
		<category domain="category" nicename="os"><![CDATA[OS]]></category>
		<category domain="category" nicename="others"><![CDATA[Others]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_blog</wp:meta_key>
			<wp:meta_value><![CDATA[jeff.familyyu.net]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_author</wp:meta_key>
			<wp:meta_value><![CDATA[Jeff Yu   (余昌)]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_429d160645182d8e72b48e90f5e50eb3_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[702997477386498952]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_efficient_related_posts</wp:meta_key>
			<wp:meta_value><![CDATA[a:10:{i:0;a:4:{s:2:"ID";s:3:"264";s:10:"post_title";s:47:"Install VirtualBox and Chrome beta in Fedora 10";s:7:"matches";s:1:"1";s:9:"permalink";s:84:"http://jeff.familyyu.net/2009/12/12/install-virtualbox-and-chrome-beta-in-fedora-10/";}i:1;a:4:{s:2:"ID";s:3:"261";s:10:"post_title";s:37:"Good presentation about XMPP and Web.";s:7:"matches";s:1:"1";s:9:"permalink";s:73:"http://jeff.familyyu.net/2009/12/04/good-presentation-about-xmpp-and-web/";}i:2;a:4:{s:2:"ID";s:3:"231";s:10:"post_title";s:27:"Fedora environment setting.";s:7:"matches";s:1:"1";s:9:"permalink";s:63:"http://jeff.familyyu.net/2009/07/08/fedora-environment-setting/";}i:3;a:4:{s:2:"ID";s:3:"228";s:10:"post_title";s:40:"Fedora 10 使用NetworkManager配置ADSL";s:7:"matches";s:1:"1";s:9:"permalink";s:101:"http://jeff.familyyu.net/2009/06/03/fedora-10-%e4%bd%bf%e7%94%a8networkmanager%e9%85%8d%e7%bd%aeadsl/";}i:4;a:4:{s:2:"ID";s:3:"220";s:10:"post_title";s:45:"How to fix "Lock Assertion Failure" in Fedora";s:7:"matches";s:1:"1";s:9:"permalink";s:80:"http://jeff.familyyu.net/2008/10/08/how-to-fix-lock-assertion-failure-in-fedora/";}i:5;a:4:{s:2:"ID";s:3:"207";s:10:"post_title";s:28:"Install Firefox3 in Fedora8.";s:7:"matches";s:1:"1";s:9:"permalink";s:64:"http://jeff.familyyu.net/2008/06/18/install-firefox3-in-fedora8/";}i:6;a:4:{s:2:"ID";s:3:"205";s:10:"post_title";s:37:"Fedora8 in Lenovo T61P with Projector";s:7:"matches";s:1:"1";s:9:"permalink";s:74:"http://jeff.familyyu.net/2008/06/17/fedora8-in-lenovo-t61p-with-projector/";}i:7;a:4:{s:2:"ID";s:3:"203";s:10:"post_title";s:44:"Postgresql installation/connection in Fedora";s:7:"matches";s:1:"1";s:9:"permalink";s:80:"http://jeff.familyyu.net/2008/05/19/postgresql-installationconnection-in-fedora/";}i:8;a:4:{s:2:"ID";s:3:"202";s:10:"post_title";s:34:"Using wireless in Fedora8 for T61P";s:7:"matches";s:1:"1";s:9:"permalink";s:71:"http://jeff.familyyu.net/2008/05/05/using-wireless-in-fedora8-for-t61p/";}i:9;a:4:{s:2:"ID";s:3:"201";s:10:"post_title";s:26:"My Fedora8 Roadmap on T61P";s:7:"matches";s:1:"1";s:9:"permalink";s:63:"http://jeff.familyyu.net/2008/05/01/my-fedora8-roadmap-on-t61p/";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_relation_threshold</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Dell D820 and Lenovo ThinkPad T61P</title>
		<link>http://jeff.familyyu.net/2008/05/01/dell-d820-and-lenovo-thinkpad-t61p/</link>
		<pubDate>Thu, 01 May 2008 04:22:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang.wordpress.com/2008/05/01/dell-d820-and-lenovo-thinkpad-t61p</guid>
		<description></description>
		<content:encoded><![CDATA[I got my new laptop (Lenovo ThinkPad T61p) on Tuesday, after I removed the Windows Vista(It is god damn hard to use compare to Windows XP), and installed the Fedora 8. currently, it works like a charm, and I found I like it very much, with the nvidia drivers up (with 3D support), the appearance looks great compare to the one that I install it in my office PC.

After played in the T61P, I found the feelings on its keyboard is much better than in the Dell D820, it makes you want to code as much as possible. ;-), I know, a lot of people are fond of the Lenovo (ex IBM) Laptop keyboard, just haven't got a chance to use it myself..

So, I would not consider to buy next laptop from Dell again...maybe will stick to the ThinkPad series, or Apple as my alternative..:)]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>200</wp:post_id>
		<wp:post_date>2008-05-01 15:22:00</wp:post_date>
		<wp:post_date_gmt>2008-05-01 04:22:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>dell-d820-and-lenovo-thinkpad-t61p</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="fedora"><![CDATA[Fedora]]></category>
		<category domain="category" nicename="os"><![CDATA[OS]]></category>
		<category domain="category" nicename="others"><![CDATA[Others]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_blog</wp:meta_key>
			<wp:meta_value><![CDATA[jeff.familyyu.net]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_author</wp:meta_key>
			<wp:meta_value><![CDATA[Jeff Yu   (余昌)]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_429d160645182d8e72b48e90f5e50eb3_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[4489114173230811833]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_efficient_related_posts</wp:meta_key>
			<wp:meta_value><![CDATA[a:10:{i:0;a:4:{s:2:"ID";s:3:"264";s:10:"post_title";s:47:"Install VirtualBox and Chrome beta in Fedora 10";s:7:"matches";s:1:"1";s:9:"permalink";s:84:"http://jeff.familyyu.net/2009/12/12/install-virtualbox-and-chrome-beta-in-fedora-10/";}i:1;a:4:{s:2:"ID";s:3:"231";s:10:"post_title";s:27:"Fedora environment setting.";s:7:"matches";s:1:"1";s:9:"permalink";s:63:"http://jeff.familyyu.net/2009/07/08/fedora-environment-setting/";}i:2;a:4:{s:2:"ID";s:3:"228";s:10:"post_title";s:40:"Fedora 10 使用NetworkManager配置ADSL";s:7:"matches";s:1:"1";s:9:"permalink";s:101:"http://jeff.familyyu.net/2009/06/03/fedora-10-%e4%bd%bf%e7%94%a8networkmanager%e9%85%8d%e7%bd%aeadsl/";}i:3;a:4:{s:2:"ID";s:3:"220";s:10:"post_title";s:45:"How to fix "Lock Assertion Failure" in Fedora";s:7:"matches";s:1:"1";s:9:"permalink";s:80:"http://jeff.familyyu.net/2008/10/08/how-to-fix-lock-assertion-failure-in-fedora/";}i:4;a:4:{s:2:"ID";s:3:"207";s:10:"post_title";s:28:"Install Firefox3 in Fedora8.";s:7:"matches";s:1:"1";s:9:"permalink";s:64:"http://jeff.familyyu.net/2008/06/18/install-firefox3-in-fedora8/";}i:5;a:4:{s:2:"ID";s:3:"205";s:10:"post_title";s:37:"Fedora8 in Lenovo T61P with Projector";s:7:"matches";s:1:"1";s:9:"permalink";s:74:"http://jeff.familyyu.net/2008/06/17/fedora8-in-lenovo-t61p-with-projector/";}i:6;a:4:{s:2:"ID";s:3:"203";s:10:"post_title";s:44:"Postgresql installation/connection in Fedora";s:7:"matches";s:1:"1";s:9:"permalink";s:80:"http://jeff.familyyu.net/2008/05/19/postgresql-installationconnection-in-fedora/";}i:7;a:4:{s:2:"ID";s:3:"202";s:10:"post_title";s:34:"Using wireless in Fedora8 for T61P";s:7:"matches";s:1:"1";s:9:"permalink";s:71:"http://jeff.familyyu.net/2008/05/05/using-wireless-in-fedora8-for-t61p/";}i:8;a:4:{s:2:"ID";s:3:"201";s:10:"post_title";s:26:"My Fedora8 Roadmap on T61P";s:7:"matches";s:1:"1";s:9:"permalink";s:63:"http://jeff.familyyu.net/2008/05/01/my-fedora8-roadmap-on-t61p/";}i:9;a:4:{s:2:"ID";s:3:"199";s:10:"post_title";s:30:"Open source business in Redhat";s:7:"matches";s:1:"1";s:9:"permalink";s:67:"http://jeff.familyyu.net/2008/04/22/open-source-business-in-redhat/";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_relation_threshold</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>My Fedora8 Roadmap on T61P</title>
		<link>http://jeff.familyyu.net/2008/05/01/my-fedora8-roadmap-on-t61p/</link>
		<pubDate>Thu, 01 May 2008 04:51:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang.wordpress.com/2008/05/01/my-fedora8-roadmap-on-t61p</guid>
		<description></description>
		<content:encoded><![CDATA[1. firstly, you need to install the Fedora8 in "text mode", because the ndivia driver issue. (be patient, this issue will be resolve in next. ;-)

2. Add repositories.
1) <a href="http://rpm.livna.org/livna-release-8.rpm">Livna</a>: rpm -i http://rpm.livna.org/livna-release-8.rpm
2) <a href="http://ftp.freshrpms.net/pub/freshrpms/fedora/linux/7/freshrpms-release/freshrpms-release-1.1-1.fc.noarch.rpm">FreshRPMS</a>: rpm -i http://ftp.freshrpms.net/pub/freshrpms/fedora/linux/7/
freshrpms-release/freshrpms-release-1.1-1.fc.noarch.rpm

3. Two ways to solve the display/video problem.
<ul>
	<li>2.1 log in as a root, and then update the /etc/X11/xorg.conf by using "vesa" mode, it should be located in the "Dirver" section. basically, need to change from the "nv" to "vesa" in a refresh installation.</li>
	<li>2.2 using "yum install kmod-nvidia, xorg-x11-drv-nvidia", if it asks you to upgrade the kernel first, which is my case.  I need to run the "yum update kernel".
After you installed the drivers, and run the "startx" to log in the X window.</li>
</ul>
4. Install compiz packages, 3D effect.
Detail please see <a href="http://www.fedoraguide.info/index.php/Main_Page#Compiz-fusion_.283D_effects.29">this link</a>.

5. Install chinese-input &amp; fonts
See my the other <a href="http://jeffyuchang.blogspot.com/2008/03/fedora8-installation.html">blog entry here</a>.

6. Update System.
"yum -y upgrade"

7. Other softwares.
yum install xchat,
stardict,
skype,
thunderbird,
xmms, xmms-mp3, xmms-wma,
mplayer,smplayer
......

8. Update the default level for initialization.
By default, the machine will run on Level 3, it means that it won't start the X window automatically, you can modify it in "/etc/inittab" file, around line 18.

[Reference]
1. <a href="http://www.thinkwiki.org/wiki/Installing_Fedora_8_on_a_ThinkPad_T61p">Fedora8 on ThinkPad T61P</a>
2. <a href="http://gka-linux.blogspot.com/2007/11/my-fedora-8-road-map.html">Gustavo's Fedora8 roadmap </a>
3. <a href="http://www.fedoraguide.info/index.php/Main_Page">Fedora8 Guide</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>201</wp:post_id>
		<wp:post_date>2008-05-01 15:51:00</wp:post_date>
		<wp:post_date_gmt>2008-05-01 04:51:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>my-fedora8-roadmap-on-t61p</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="fedora"><![CDATA[Fedora]]></category>
		<category domain="category" nicename="os"><![CDATA[OS]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_blog</wp:meta_key>
			<wp:meta_value><![CDATA[jeff.familyyu.net]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_author</wp:meta_key>
			<wp:meta_value><![CDATA[Jeff Yu   (余昌)]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_429d160645182d8e72b48e90f5e50eb3_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[1222573695772295059]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_efficient_related_posts</wp:meta_key>
			<wp:meta_value><![CDATA[a:10:{i:0;a:4:{s:2:"ID";s:3:"264";s:10:"post_title";s:47:"Install VirtualBox and Chrome beta in Fedora 10";s:7:"matches";s:1:"1";s:9:"permalink";s:84:"http://jeff.familyyu.net/2009/12/12/install-virtualbox-and-chrome-beta-in-fedora-10/";}i:1;a:4:{s:2:"ID";s:3:"231";s:10:"post_title";s:27:"Fedora environment setting.";s:7:"matches";s:1:"1";s:9:"permalink";s:63:"http://jeff.familyyu.net/2009/07/08/fedora-environment-setting/";}i:2;a:4:{s:2:"ID";s:3:"228";s:10:"post_title";s:40:"Fedora 10 使用NetworkManager配置ADSL";s:7:"matches";s:1:"1";s:9:"permalink";s:101:"http://jeff.familyyu.net/2009/06/03/fedora-10-%e4%bd%bf%e7%94%a8networkmanager%e9%85%8d%e7%bd%aeadsl/";}i:3;a:4:{s:2:"ID";s:3:"220";s:10:"post_title";s:45:"How to fix "Lock Assertion Failure" in Fedora";s:7:"matches";s:1:"1";s:9:"permalink";s:80:"http://jeff.familyyu.net/2008/10/08/how-to-fix-lock-assertion-failure-in-fedora/";}i:4;a:4:{s:2:"ID";s:3:"207";s:10:"post_title";s:28:"Install Firefox3 in Fedora8.";s:7:"matches";s:1:"1";s:9:"permalink";s:64:"http://jeff.familyyu.net/2008/06/18/install-firefox3-in-fedora8/";}i:5;a:4:{s:2:"ID";s:3:"205";s:10:"post_title";s:37:"Fedora8 in Lenovo T61P with Projector";s:7:"matches";s:1:"1";s:9:"permalink";s:74:"http://jeff.familyyu.net/2008/06/17/fedora8-in-lenovo-t61p-with-projector/";}i:6;a:4:{s:2:"ID";s:3:"203";s:10:"post_title";s:44:"Postgresql installation/connection in Fedora";s:7:"matches";s:1:"1";s:9:"permalink";s:80:"http://jeff.familyyu.net/2008/05/19/postgresql-installationconnection-in-fedora/";}i:7;a:4:{s:2:"ID";s:3:"202";s:10:"post_title";s:34:"Using wireless in Fedora8 for T61P";s:7:"matches";s:1:"1";s:9:"permalink";s:71:"http://jeff.familyyu.net/2008/05/05/using-wireless-in-fedora8-for-t61p/";}i:8;a:4:{s:2:"ID";s:3:"200";s:10:"post_title";s:34:"Dell D820 and Lenovo ThinkPad T61P";s:7:"matches";s:1:"1";s:9:"permalink";s:71:"http://jeff.familyyu.net/2008/05/01/dell-d820-and-lenovo-thinkpad-t61p/";}i:9;a:4:{s:2:"ID";s:3:"199";s:10:"post_title";s:30:"Open source business in Redhat";s:7:"matches";s:1:"1";s:9:"permalink";s:67:"http://jeff.familyyu.net/2008/04/22/open-source-business-in-redhat/";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_relation_threshold</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Using wireless in Fedora8 for T61P</title>
		<link>http://jeff.familyyu.net/2008/05/05/using-wireless-in-fedora8-for-t61p/</link>
		<pubDate>Mon, 05 May 2008 04:44:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang.wordpress.com/2008/05/05/using-wireless-in-fedora8-for-t61p</guid>
		<description></description>
		<content:encoded><![CDATA[1. Go to System -&gt; Administration -&gt; Network
You will see the wireless was shown as: wlan0

2. Edit dialog, make sure the "Activate device when computer starts" unchecked
"Controlled by NetworkManager" checked. if you haven't installed the NetworkManager utility,
then use "yum install NetworkManager" command to install it.

3. Go to System -&gt; Administration -&gt; Services, Checked the "NetworkManager" and "NetworkManagerDispatcher", so that they can start automatically when you start your computer.

4. Reboot the system. (You can try to run: service network restart, but I just simply restarted it).

PS: you can use "iwconfig" to see your wireless device, and use the "iwlist wlan0 scan" to see your available wireless. here wlan0 is your wireless device name.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>202</wp:post_id>
		<wp:post_date>2008-05-05 15:44:00</wp:post_date>
		<wp:post_date_gmt>2008-05-05 04:44:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>using-wireless-in-fedora8-for-t61p</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="fedora"><![CDATA[Fedora]]></category>
		<category domain="category" nicename="os"><![CDATA[OS]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_blog</wp:meta_key>
			<wp:meta_value><![CDATA[jeff.familyyu.net]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_author</wp:meta_key>
			<wp:meta_value><![CDATA[Jeff Yu   (余昌)]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_429d160645182d8e72b48e90f5e50eb3_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[2033056257575227678]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_efficient_related_posts</wp:meta_key>
			<wp:meta_value><![CDATA[a:10:{i:0;a:4:{s:2:"ID";s:3:"264";s:10:"post_title";s:47:"Install VirtualBox and Chrome beta in Fedora 10";s:7:"matches";s:1:"1";s:9:"permalink";s:84:"http://jeff.familyyu.net/2009/12/12/install-virtualbox-and-chrome-beta-in-fedora-10/";}i:1;a:4:{s:2:"ID";s:3:"231";s:10:"post_title";s:27:"Fedora environment setting.";s:7:"matches";s:1:"1";s:9:"permalink";s:63:"http://jeff.familyyu.net/2009/07/08/fedora-environment-setting/";}i:2;a:4:{s:2:"ID";s:3:"228";s:10:"post_title";s:40:"Fedora 10 使用NetworkManager配置ADSL";s:7:"matches";s:1:"1";s:9:"permalink";s:101:"http://jeff.familyyu.net/2009/06/03/fedora-10-%e4%bd%bf%e7%94%a8networkmanager%e9%85%8d%e7%bd%aeadsl/";}i:3;a:4:{s:2:"ID";s:3:"220";s:10:"post_title";s:45:"How to fix "Lock Assertion Failure" in Fedora";s:7:"matches";s:1:"1";s:9:"permalink";s:80:"http://jeff.familyyu.net/2008/10/08/how-to-fix-lock-assertion-failure-in-fedora/";}i:4;a:4:{s:2:"ID";s:3:"207";s:10:"post_title";s:28:"Install Firefox3 in Fedora8.";s:7:"matches";s:1:"1";s:9:"permalink";s:64:"http://jeff.familyyu.net/2008/06/18/install-firefox3-in-fedora8/";}i:5;a:4:{s:2:"ID";s:3:"205";s:10:"post_title";s:37:"Fedora8 in Lenovo T61P with Projector";s:7:"matches";s:1:"1";s:9:"permalink";s:74:"http://jeff.familyyu.net/2008/06/17/fedora8-in-lenovo-t61p-with-projector/";}i:6;a:4:{s:2:"ID";s:3:"203";s:10:"post_title";s:44:"Postgresql installation/connection in Fedora";s:7:"matches";s:1:"1";s:9:"permalink";s:80:"http://jeff.familyyu.net/2008/05/19/postgresql-installationconnection-in-fedora/";}i:7;a:4:{s:2:"ID";s:3:"201";s:10:"post_title";s:26:"My Fedora8 Roadmap on T61P";s:7:"matches";s:1:"1";s:9:"permalink";s:63:"http://jeff.familyyu.net/2008/05/01/my-fedora8-roadmap-on-t61p/";}i:8;a:4:{s:2:"ID";s:3:"200";s:10:"post_title";s:34:"Dell D820 and Lenovo ThinkPad T61P";s:7:"matches";s:1:"1";s:9:"permalink";s:71:"http://jeff.familyyu.net/2008/05/01/dell-d820-and-lenovo-thinkpad-t61p/";}i:9;a:4:{s:2:"ID";s:3:"199";s:10:"post_title";s:30:"Open source business in Redhat";s:7:"matches";s:1:"1";s:9:"permalink";s:67:"http://jeff.familyyu.net/2008/04/22/open-source-business-in-redhat/";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_relation_threshold</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Postgresql installation/connection in Fedora</title>
		<link>http://jeff.familyyu.net/2008/05/19/postgresql-installationconnection-in-fedora/</link>
		<pubDate>Mon, 19 May 2008 09:14:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang.wordpress.com/2008/05/19/postgresql-installationconnection-in-fedora</guid>
		<description></description>
		<content:encoded><![CDATA[Because I wan to try the <a href="http://www.jboss.com/products/jbosson">JON 2.0</a>, I gotta have a database, currently the JON supports two databases, Postgres and Oracle. So here I choose the Postgres as it is open source.

I am using the Fedora8, so install the postgres just simply need to run
<blockquote>yum install postgresql-server</blockquote>
After I installed the postgres, I created it with following command:
<blockquote>service postgresql initdb
service postgresql start</blockquote>
And then I try to (as reference[1] described)
<blockquote>createuser -h 127.0.0.1 -p 5432 -U postgres -S -D -R rhqadmin</blockquote>
it tells me that " FATAL:  Ident authentication failed for user "postgres". This error mostly means you need to update the "pg_hba.conf" file.

try to run
<blockquote>ps aux | grep postmaster</blockquote>
to find out where the "pg_hba.conf" located. (Here thanks to illya77 and pilhuhn in #rhq at irc.freenode.net help me solve this problem).

Update the pg_hba.conf  suggested, and then

Edit the postgres host based access configuration file (pg_hba.conf), which typically would be at: /var/lib/pgsql/data/pg_hba.conf

Modify the local line to use "trust" based authentication rather than "identity". Please review the PostgreSQL documentation before making this change and take the security
<pre>local all  all   trust</pre>
After that, restart the postgresql to make the change taking effect.
<blockquote>service postgresql restart</blockquote>
At last: run
<blockquote>psql -h localhost -U postgres</blockquote>
to see if it can log in.

[Reference]
1. <a href="https://docs.jbosson.redhat.com/confluence/display/JON2/Postgres+Quick+Start+Installation+Guide"> Postgres Quick Start Installation</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>203</wp:post_id>
		<wp:post_date>2008-05-19 20:14:00</wp:post_date>
		<wp:post_date_gmt>2008-05-19 09:14:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>postgresql-installationconnection-in-fedora</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="database"><![CDATA[Database]]></category>
		<category domain="post_tag" nicename="fedora"><![CDATA[Fedora]]></category>
		<category domain="category" nicename="os"><![CDATA[OS]]></category>
		<category domain="post_tag" nicename="postgresql"><![CDATA[Postgresql]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_blog</wp:meta_key>
			<wp:meta_value><![CDATA[jeff.familyyu.net]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_author</wp:meta_key>
			<wp:meta_value><![CDATA[Jeff Yu   (余昌)]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_429d160645182d8e72b48e90f5e50eb3_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[6323945388521259528]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_efficient_related_posts</wp:meta_key>
			<wp:meta_value><![CDATA[a:10:{i:0;a:4:{s:2:"ID";s:3:"264";s:10:"post_title";s:47:"Install VirtualBox and Chrome beta in Fedora 10";s:7:"matches";s:1:"1";s:9:"permalink";s:84:"http://jeff.familyyu.net/2009/12/12/install-virtualbox-and-chrome-beta-in-fedora-10/";}i:1;a:4:{s:2:"ID";s:3:"231";s:10:"post_title";s:27:"Fedora environment setting.";s:7:"matches";s:1:"1";s:9:"permalink";s:63:"http://jeff.familyyu.net/2009/07/08/fedora-environment-setting/";}i:2;a:4:{s:2:"ID";s:3:"228";s:10:"post_title";s:40:"Fedora 10 使用NetworkManager配置ADSL";s:7:"matches";s:1:"1";s:9:"permalink";s:101:"http://jeff.familyyu.net/2009/06/03/fedora-10-%e4%bd%bf%e7%94%a8networkmanager%e9%85%8d%e7%bd%aeadsl/";}i:3;a:4:{s:2:"ID";s:3:"220";s:10:"post_title";s:45:"How to fix "Lock Assertion Failure" in Fedora";s:7:"matches";s:1:"1";s:9:"permalink";s:80:"http://jeff.familyyu.net/2008/10/08/how-to-fix-lock-assertion-failure-in-fedora/";}i:4;a:4:{s:2:"ID";s:3:"207";s:10:"post_title";s:28:"Install Firefox3 in Fedora8.";s:7:"matches";s:1:"1";s:9:"permalink";s:64:"http://jeff.familyyu.net/2008/06/18/install-firefox3-in-fedora8/";}i:5;a:4:{s:2:"ID";s:3:"205";s:10:"post_title";s:37:"Fedora8 in Lenovo T61P with Projector";s:7:"matches";s:1:"1";s:9:"permalink";s:74:"http://jeff.familyyu.net/2008/06/17/fedora8-in-lenovo-t61p-with-projector/";}i:6;a:4:{s:2:"ID";s:3:"202";s:10:"post_title";s:34:"Using wireless in Fedora8 for T61P";s:7:"matches";s:1:"1";s:9:"permalink";s:71:"http://jeff.familyyu.net/2008/05/05/using-wireless-in-fedora8-for-t61p/";}i:7;a:4:{s:2:"ID";s:3:"201";s:10:"post_title";s:26:"My Fedora8 Roadmap on T61P";s:7:"matches";s:1:"1";s:9:"permalink";s:63:"http://jeff.familyyu.net/2008/05/01/my-fedora8-roadmap-on-t61p/";}i:8;a:4:{s:2:"ID";s:3:"200";s:10:"post_title";s:34:"Dell D820 and Lenovo ThinkPad T61P";s:7:"matches";s:1:"1";s:9:"permalink";s:71:"http://jeff.familyyu.net/2008/05/01/dell-d820-and-lenovo-thinkpad-t61p/";}i:9;a:4:{s:2:"ID";s:3:"199";s:10:"post_title";s:30:"Open source business in Redhat";s:7:"matches";s:1:"1";s:9:"permalink";s:67:"http://jeff.familyyu.net/2008/04/22/open-source-business-in-redhat/";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_relation_threshold</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Railo opensource</title>
		<link>http://jeff.familyyu.net/2008/06/07/railo-opensource/</link>
		<pubDate>Fri, 06 Jun 2008 15:25:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang.wordpress.com/2008/06/07/railo-opensource</guid>
		<description></description>
		<content:encoded><![CDATA[Railo goes opensource, and it is under the JBoss umbrella. the chinese version of this news was published <a href="http://www.javaeye.com/news/2500">here</a>, which is in the <a href="http://www.javaeye.com/">Javaeye website</a>.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>204</wp:post_id>
		<wp:post_date>2008-06-07 02:25:00</wp:post_date>
		<wp:post_date_gmt>2008-06-06 15:25:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>railo-opensource</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="chinese"><![CDATA[Chinese]]></category>
		<category domain="category" nicename="jboss"><![CDATA[JBoss]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_blog</wp:meta_key>
			<wp:meta_value><![CDATA[jeff.familyyu.net]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_author</wp:meta_key>
			<wp:meta_value><![CDATA[Jeff Yu   (余昌)]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_429d160645182d8e72b48e90f5e50eb3_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[1181536745649815917]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Fedora8 in Lenovo T61P with Projector</title>
		<link>http://jeff.familyyu.net/2008/06/17/fedora8-in-lenovo-t61p-with-projector/</link>
		<pubDate>Mon, 16 Jun 2008 14:32:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang.wordpress.com/2008/06/17/fedora8-in-lenovo-t61p-with-projector</guid>
		<description></description>
		<content:encoded><![CDATA[As you might know projectors often do not work well with widescreen laptop, which installed Fedora. So my T61P does not work with the projector in my office.
Today, I've found a way to fix that. (Actually it was told by my colleague Denny). By that reducing the screen resolution and using the "Dual Head" functionality in the Display.

The steps are:

System -&gt; Administration -&gt; Display -&gt; Dual Head tab.

Checked the "Use dual head" option.
And then select the resolution as "1280X1024".  (Remember to save your original one as a backup in case of the change doesn't work for you and cause your xwindow broken.)

And then reboot the system. Hopefully it works for you too.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>205</wp:post_id>
		<wp:post_date>2008-06-17 01:32:00</wp:post_date>
		<wp:post_date_gmt>2008-06-16 14:32:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>fedora8-in-lenovo-t61p-with-projector</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="fedora"><![CDATA[Fedora]]></category>
		<category domain="category" nicename="os"><![CDATA[OS]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_blog</wp:meta_key>
			<wp:meta_value><![CDATA[jeff.familyyu.net]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_author</wp:meta_key>
			<wp:meta_value><![CDATA[Jeff Yu   (余昌)]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_429d160645182d8e72b48e90f5e50eb3_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[6691138307856935588]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_efficient_related_posts</wp:meta_key>
			<wp:meta_value><![CDATA[a:10:{i:0;a:4:{s:2:"ID";s:3:"264";s:10:"post_title";s:47:"Install VirtualBox and Chrome beta in Fedora 10";s:7:"matches";s:1:"1";s:9:"permalink";s:84:"http://jeff.familyyu.net/2009/12/12/install-virtualbox-and-chrome-beta-in-fedora-10/";}i:1;a:4:{s:2:"ID";s:3:"231";s:10:"post_title";s:27:"Fedora environment setting.";s:7:"matches";s:1:"1";s:9:"permalink";s:63:"http://jeff.familyyu.net/2009/07/08/fedora-environment-setting/";}i:2;a:4:{s:2:"ID";s:3:"228";s:10:"post_title";s:40:"Fedora 10 使用NetworkManager配置ADSL";s:7:"matches";s:1:"1";s:9:"permalink";s:101:"http://jeff.familyyu.net/2009/06/03/fedora-10-%e4%bd%bf%e7%94%a8networkmanager%e9%85%8d%e7%bd%aeadsl/";}i:3;a:4:{s:2:"ID";s:3:"220";s:10:"post_title";s:45:"How to fix "Lock Assertion Failure" in Fedora";s:7:"matches";s:1:"1";s:9:"permalink";s:80:"http://jeff.familyyu.net/2008/10/08/how-to-fix-lock-assertion-failure-in-fedora/";}i:4;a:4:{s:2:"ID";s:3:"207";s:10:"post_title";s:28:"Install Firefox3 in Fedora8.";s:7:"matches";s:1:"1";s:9:"permalink";s:64:"http://jeff.familyyu.net/2008/06/18/install-firefox3-in-fedora8/";}i:5;a:4:{s:2:"ID";s:3:"203";s:10:"post_title";s:44:"Postgresql installation/connection in Fedora";s:7:"matches";s:1:"1";s:9:"permalink";s:80:"http://jeff.familyyu.net/2008/05/19/postgresql-installationconnection-in-fedora/";}i:6;a:4:{s:2:"ID";s:3:"202";s:10:"post_title";s:34:"Using wireless in Fedora8 for T61P";s:7:"matches";s:1:"1";s:9:"permalink";s:71:"http://jeff.familyyu.net/2008/05/05/using-wireless-in-fedora8-for-t61p/";}i:7;a:4:{s:2:"ID";s:3:"201";s:10:"post_title";s:26:"My Fedora8 Roadmap on T61P";s:7:"matches";s:1:"1";s:9:"permalink";s:63:"http://jeff.familyyu.net/2008/05/01/my-fedora8-roadmap-on-t61p/";}i:8;a:4:{s:2:"ID";s:3:"200";s:10:"post_title";s:34:"Dell D820 and Lenovo ThinkPad T61P";s:7:"matches";s:1:"1";s:9:"permalink";s:71:"http://jeff.familyyu.net/2008/05/01/dell-d820-and-lenovo-thinkpad-t61p/";}i:9;a:4:{s:2:"ID";s:3:"199";s:10:"post_title";s:30:"Open source business in Redhat";s:7:"matches";s:1:"1";s:9:"permalink";s:67:"http://jeff.familyyu.net/2008/04/22/open-source-business-in-redhat/";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_relation_threshold</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Introduction of Mobicents</title>
		<link>http://jeff.familyyu.net/2008/06/17/introduction-of-mobicents/</link>
		<pubDate>Mon, 16 Jun 2008 15:42:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang.wordpress.com/2008/06/17/introduction-of-mobicents</guid>
		<description></description>
		<content:encoded><![CDATA[Today, my colleague <a href="http://amitbhayani.blogspot.com/">Amit</a> give the Beijing team a presentation on <a href="http://www.jboss.org/mobicents">JBoss Mobicents</a>, This project is very interesting, it is a event-based architecture. It can be deployed in the JBoss AS easily. With this project, you can easily integrate your application with telcom stuff, such as phone, SMS message etc, it also have Google talk built-in and so on. Its architecture is easily extended, if you find some protocol are missing, just feel free to implement a Resource Adapter, it is trivial.

Are you tired of doing the database-backend, typcially just database operate(CRUD), enterprise application? We all know our next big thing mostly will happen on Cellphone, don't we? Then why not take a peak at Mobicents, and give it a try?

See <a href="http://www.jbossworld.com/downloads/pdf/friday/2-25_NEW_Web_2_and_Communications_Building_Converged_Applications_Amit_Bhayani_JBoss.pdf">Amit's presentation</a> on JBossWorld this February.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>206</wp:post_id>
		<wp:post_date>2008-06-17 02:42:00</wp:post_date>
		<wp:post_date_gmt>2008-06-16 15:42:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>introduction-of-mobicents</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="java"><![CDATA[Java]]></category>
		<category domain="category" nicename="jboss"><![CDATA[JBoss]]></category>
		<category domain="post_tag" nicename="mobicents"><![CDATA[Mobicents]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_blog</wp:meta_key>
			<wp:meta_value><![CDATA[jeff.familyyu.net]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_author</wp:meta_key>
			<wp:meta_value><![CDATA[Jeff Yu   (余昌)]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_429d160645182d8e72b48e90f5e50eb3_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[3084836366901572893]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_efficient_related_posts</wp:meta_key>
			<wp:meta_value><![CDATA[a:0:{}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_relation_threshold</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Install Firefox3 in Fedora8.</title>
		<link>http://jeff.familyyu.net/2008/06/18/install-firefox3-in-fedora8/</link>
		<pubDate>Wed, 18 Jun 2008 06:28:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang.wordpress.com/2008/06/18/install-firefox3-in-fedora8</guid>
		<description></description>
		<content:encoded><![CDATA[Today is a big day for <a href="http://www.mozilla.com/en-US/firefox/">Firefox</a>, it just released its <a href="http://www.spreadfirefox.com/en-US/worldrecord">firefox3.GA</a>, with more than 15,000 improvements over firefox2.x.

So, I just can't wait to give that a try, but it seems that Fedora 9 shipped with the firefox3, as for Fedora8, it still sticks to the firefox2.x. Then I look for a firefox3 rpm package for F8, here comes the <a href="http://mirror.yandex.ru/fedora/tigro/8/i386/firefox3-3.0-1.fc8.i386.rpm">i86 rpm</a>, it is from this thread.[1]:

After you download the rpm, simply run: (Before installing firefox3, remember to keep a backup for your bookmark)

rpm -i firefox3....(your rpm filename).

Note: It doesn't work when I am running "yum localinstall ...", it seems failed in the GPG key check.

Once you finish the installation, simply open a shell, run: firefox3, make sure you have closed all the firefox browser, otherwise, it will still runs the firefox as same as what you are using now.
Your firefox3 and firefox2.x can be co-existed in your Fedora, but it just can be used one version at a time, it depends on which version you are firstly opened!

Although I know it is not a good/easy way for us to install software by using rpm, it is better to use the yum, so that we can make sure that the library dependencies get right, but currently, I haven't found the firefox3 in the F8 repository. Hopefully someone will upload it there.

<span style="color: #ff0000;">Update: Ahh.... just found we can download the tar file from mozilla directly, extract and run the "./firefox" in your console. but need to make sure you have closed all the firefox web browser, otherwise, it won't get it updated. That is when I thought this approach might not work. :(</span>

[Reference]
1: <a href="http://forums.fedoraforum.org/showthread.php?t=192028">http://forums.fedoraforum.org/showthread.php?t=192028</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>207</wp:post_id>
		<wp:post_date>2008-06-18 17:28:00</wp:post_date>
		<wp:post_date_gmt>2008-06-18 06:28:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>install-firefox3-in-fedora8</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="fedora"><![CDATA[Fedora]]></category>
		<category domain="category" nicename="os"><![CDATA[OS]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_blog</wp:meta_key>
			<wp:meta_value><![CDATA[jeff.familyyu.net]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_author</wp:meta_key>
			<wp:meta_value><![CDATA[Jeff Yu   (余昌)]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_429d160645182d8e72b48e90f5e50eb3_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[3352117053675049636]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_efficient_related_posts</wp:meta_key>
			<wp:meta_value><![CDATA[a:10:{i:0;a:4:{s:2:"ID";s:3:"264";s:10:"post_title";s:47:"Install VirtualBox and Chrome beta in Fedora 10";s:7:"matches";s:1:"1";s:9:"permalink";s:84:"http://jeff.familyyu.net/2009/12/12/install-virtualbox-and-chrome-beta-in-fedora-10/";}i:1;a:4:{s:2:"ID";s:3:"231";s:10:"post_title";s:27:"Fedora environment setting.";s:7:"matches";s:1:"1";s:9:"permalink";s:63:"http://jeff.familyyu.net/2009/07/08/fedora-environment-setting/";}i:2;a:4:{s:2:"ID";s:3:"228";s:10:"post_title";s:40:"Fedora 10 使用NetworkManager配置ADSL";s:7:"matches";s:1:"1";s:9:"permalink";s:101:"http://jeff.familyyu.net/2009/06/03/fedora-10-%e4%bd%bf%e7%94%a8networkmanager%e9%85%8d%e7%bd%aeadsl/";}i:3;a:4:{s:2:"ID";s:3:"220";s:10:"post_title";s:45:"How to fix "Lock Assertion Failure" in Fedora";s:7:"matches";s:1:"1";s:9:"permalink";s:80:"http://jeff.familyyu.net/2008/10/08/how-to-fix-lock-assertion-failure-in-fedora/";}i:4;a:4:{s:2:"ID";s:3:"205";s:10:"post_title";s:37:"Fedora8 in Lenovo T61P with Projector";s:7:"matches";s:1:"1";s:9:"permalink";s:74:"http://jeff.familyyu.net/2008/06/17/fedora8-in-lenovo-t61p-with-projector/";}i:5;a:4:{s:2:"ID";s:3:"203";s:10:"post_title";s:44:"Postgresql installation/connection in Fedora";s:7:"matches";s:1:"1";s:9:"permalink";s:80:"http://jeff.familyyu.net/2008/05/19/postgresql-installationconnection-in-fedora/";}i:6;a:4:{s:2:"ID";s:3:"202";s:10:"post_title";s:34:"Using wireless in Fedora8 for T61P";s:7:"matches";s:1:"1";s:9:"permalink";s:71:"http://jeff.familyyu.net/2008/05/05/using-wireless-in-fedora8-for-t61p/";}i:7;a:4:{s:2:"ID";s:3:"201";s:10:"post_title";s:26:"My Fedora8 Roadmap on T61P";s:7:"matches";s:1:"1";s:9:"permalink";s:63:"http://jeff.familyyu.net/2008/05/01/my-fedora8-roadmap-on-t61p/";}i:8;a:4:{s:2:"ID";s:3:"200";s:10:"post_title";s:34:"Dell D820 and Lenovo ThinkPad T61P";s:7:"matches";s:1:"1";s:9:"permalink";s:71:"http://jeff.familyyu.net/2008/05/01/dell-d820-and-lenovo-thinkpad-t61p/";}i:9;a:4:{s:2:"ID";s:3:"199";s:10:"post_title";s:30:"Open source business in Redhat";s:7:"matches";s:1:"1";s:9:"permalink";s:67:"http://jeff.familyyu.net/2008/04/22/open-source-business-in-redhat/";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_relation_threshold</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>78</wp:comment_id>
			<wp:comment_author><![CDATA[Charlie]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.blogger.com/profile/15870347109977095420</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2008-07-29 23:56:00</wp:comment_date>
			<wp:comment_date_gmt>2008-07-29 12:56:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Next time use:yum localinstall --nogpgcheck]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Log4j configuration in JBoss AS.</title>
		<link>http://jeff.familyyu.net/2008/07/13/log4j-configuration-in-jboss-as/</link>
		<pubDate>Sat, 12 Jul 2008 17:07:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang.wordpress.com/2008/07/13/log4j-configuration-in-jboss-as</guid>
		<description></description>
		<content:encoded><![CDATA[Yeah, log4j configuration is easy, but sometimes you might find it is a little bit hard for you to configure it in JBoss AS if you are new to it. So following is the step-by-step example which I was used in <a href="http://jboss.org/soag/">overlord</a> <a href="http://jboss.org/soag/cdl/index.html">cdl</a> project.

open up the jboss-log4j.xml in the $JBossAS/server/domain(ie. default)/conf folder.

1. the jboss-log4j.xml default for
is "DEBUG", in my case, I want to change it to "INFO" level, since the "DEBUG" level is too verbose.
[xml]
&lt;root&gt;
&lt;value=&quot;INFO&quot;&gt;
&lt;ref=&quot;CONSOLE&quot;&gt;
&lt;ref=&quot;FILE&quot;&gt;
&lt;/root &gt;
[/xml]
2. Add your own package log level to DEBUG: like
[xml]
&lt;category&gt;
&lt;name=&quot;org.jboss.soa.overlord&quot;&gt;
&lt;value=&quot;DEBUG&quot;&gt;
&lt;/category&gt;
[/xml]
3. If you want to show the DEBUG level to the console, you also need to update the 'Threshold' level to 'DEBUG' in CONSOLE appender.
[xml]
&lt; name=&quot;Threshold&quot; value=&quot;DEBUG&quot;&gt;
[/xml]
Yeah, that's all, quite easy, restart your sever, you would see it take effect. If you want to know more about JBossLog4j, you can refer to <a href="http://docs.jboss.org/jbossas/AllDocsSubscription/JBossLog4j.pdf">this document</a>, which was written by Scott Stark.

[<span style="color: #ff0000;">update Dec 2, 2009</span>] A more convenient way for you to do the debug would be add a 'appender', and then direct ur log into that appender. like following:
[xml]
&lt;appender name=&quot;RS&quot; class=&quot;org.jboss.logging.appender.RollingFileAppender&quot;&gt;
&lt;errorHandler class=&quot;org.jboss.logging.util.OnlyOnceErrorHandler&quot;/&gt;
&lt;param name=&quot;File&quot; value=&quot;${jboss.server.log.dir}/riftsaw.log&quot;/&gt;
&lt;param name=&quot;Append&quot; value=&quot;true&quot;/&gt;
&lt;param name=&quot;MaxFileSize&quot; value=&quot;500KB&quot;/&gt;
&lt;param name=&quot;MaxBackupIndex&quot; value=&quot;1&quot;/&gt;
&lt;param name=&quot;Threshold&quot; value=&quot;DEBUG&quot;/&gt;

&lt;layout class=&quot;org.apache.log4j.PatternLayout&quot;&gt;
&lt;param name=&quot;ConversionPattern&quot; value=&quot;%d %-5p [%c] %m%n&quot;/&gt;
&lt;/layout&gt;
&lt;/appender&gt;

&lt;category name=&quot;org.apache.ode&quot;&gt;
&lt;priority value=&quot;DEBUG&quot; /&gt;
&lt;appender-ref ref=&quot;RS&quot; /&gt;
&lt;/category&gt;

&lt;category name=&quot;org.jboss.soa.bpel&quot;&gt;
&lt;priority value=&quot;DEBUG&quot; /&gt;
&lt;appender-ref ref=&quot;RS&quot; /&gt;
&lt;/category&gt;
[/xml]
Note: I am validating this against JBossAS4.2.2GA.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>208</wp:post_id>
		<wp:post_date>2008-07-13 04:07:00</wp:post_date>
		<wp:post_date_gmt>2008-07-12 17:07:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>log4j-configuration-in-jboss-as</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="java"><![CDATA[Java]]></category>
		<category domain="category" nicename="jboss"><![CDATA[JBoss]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_blog</wp:meta_key>
			<wp:meta_value><![CDATA[jeff.familyyu.net]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_author</wp:meta_key>
			<wp:meta_value><![CDATA[Jeff Yu   (余昌)]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_429d160645182d8e72b48e90f5e50eb3_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[7516183523848162786]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>JAAS and JBossSX</title>
		<link>http://jeff.familyyu.net/2008/07/15/jaas-and-jbosssx/</link>
		<pubDate>Mon, 14 Jul 2008 17:18:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang.wordpress.com/2008/07/15/jaas-and-jbosssx</guid>
		<description></description>
		<content:encoded><![CDATA[There are couple good articles related to the JAAS and JBossSX.<br />1.<a href="http://www.javaworld.com/javaworld/jw-09-2002/jw-0913-jaas.html">All that JAAS</a> (Good for beginners)<br />2.<a href="http://www.javaworld.com/javaworld/jw-08-2001/jw-0831-jaas.html">Integrate security infrastructures with JBossSX</a> by Scott Stark<br />3.<a href="http://www.hp-interex.com/UserFiles/File/white%20papers/Implementing%20J2EE%20security%20using%20JAAS%20on%20JBOSS.pdf">Implementing J2EE security using JAAS in JBoss</a><br />4.<a href="http://wiki.jboss.org/wiki/JBossSX">JBossSX wiki</a><br />5.<a href="http://java.sun.com/javase/6/docs/technotes/guides/security/jaas/JAASRefGuide.html">JAAS Reference Guide</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>209</wp:post_id>
		<wp:post_date>2008-07-15 04:18:00</wp:post_date>
		<wp:post_date_gmt>2008-07-14 17:18:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>jaas-and-jbosssx</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="java"><![CDATA[Java]]></category>
		<category domain="category" nicename="jboss"><![CDATA[JBoss]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_blog</wp:meta_key>
			<wp:meta_value><![CDATA[jeff.familyyu.net]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_author</wp:meta_key>
			<wp:meta_value><![CDATA[Jeff Yu   (余昌)]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_429d160645182d8e72b48e90f5e50eb3_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[6706623761937123771]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Deploying OpenSSO &amp; Running its samples in JBossAS</title>
		<link>http://jeff.familyyu.net/2008/07/20/deploying-opensso-running-its-samples-in-jbossas/</link>
		<pubDate>Sat, 19 Jul 2008 19:20:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang.wordpress.com/2008/07/20/deploying-opensso-running-its-samples-in-jbossas</guid>
		<description></description>
		<content:encoded><![CDATA[It is a little bit tricky for me to get installed the OpenSSO against JBossAS4.x, So here I'd like to describe the steps that I am doing, if others new to opensso, hopefully it might be helpful for them.

<span style="text-decoration: underline;">Deploying opensso in the JBossAS</span>

1. Download the opensso build 4.5 zip from the <a href="https://opensso.dev.java.net/public/use/index.html">opensso download page</a>. (I validated build4 and 4.5 against JBossAS4.2.2.GA)

2. Following the <a href="http://download.java.net/general/opensso/stable/openssov1-build4/B4-ReleaseNotes.html">release note</a> of deploying the opensso.war in the JBossAS4.x.

3. You will also need to increase the Permsize in $JBoss/bin/run.conf by adding following option in the JAVA_OPTS line.
<blockquote>-XX:MaxPermSize=512m in the&nbsp;</blockquote>
4. Then start the $JBoss/bin/run.sh, you should be able to access its admin page in http://yourdomain:8080/opensso. (OpenSSO doesn't work well with the localhost, so you should specify a full qualified domain for it)

5. And then you can have a default configuration from http://yourdomain:8080/opensso link.

6. After you have the default configuration, you should be able to login the system by using: amAdmin, amLdapuser and with the password that you set before.

OK, so above the steps to deploy the opensso.war, not much tricky here. And then, I am going to run an example that based on opensso sdk. (openssoclientsdk.jar).

<span style="text-decoration: underline;">Running the example:</span>

In the opensso directory that you extracted from the opensso.zip, you can see a sub-folder is: samples.

1) Go to the $samples, you will see the fam-client.zip. (Because sun's commercial product name is Federation Acess Manager, that is what the fam stands for.)
2) Unzip that fam-client.zip, you will see it contains sdk and war folders
3) Go to the sdk folder. run the 'chmod 755 scripts/*.sh' to make the script runnable.
4) run: 'scripts/compile-samples.sh' to build the sample code.
5) run: 'scripts/setup.sh', (This is to configure the AMConfig.properties.)
<blockquote>Debug directory (make sure this directory exists): /var/local/tmp (This can be other places)
Password of the server application: opensso1 (Not sure this one, I just input a random one.)
Protocol of the server: http
Host name of the server: putian.nay.redhat.com
Port of the server: 8080
Server's deployment URI: opensso
Naming URL (hit enter to accept default value, http://putian.nay.redhat.com:8080/opensso/namingservice):&nbsp;</blockquote>
6) run: "scripts/Login.sh", you will see:
<blockquote>Realm (e.g. /): opensso
Login module name (e.g. DataStore or LDAP): DataStore
Login locale (e.g. en_US or fr_FR): en_US
DataStore: Obtained login context
User Name:amAdmin
Password:&nbsp;</blockquote>
Input your password, it should show you like following:
<blockquote>Login succeeded.
Logged Out!!&nbsp;</blockquote>
Well, this example shows you how to do the authentication by using openssoclientsdk.jar.

Note: <span style="color: #ff0000;">I am validating opensso build4 and 4.5 against JBossAS4.2.2.GA. If you have deployed the opensso.war in the JBossESB server, it has a known issue at https://jira.jboss.org/jira/browse/SOA-731</span>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>210</wp:post_id>
		<wp:post_date>2008-07-20 06:20:00</wp:post_date>
		<wp:post_date_gmt>2008-07-19 19:20:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>deploying-opensso-running-its-samples-in-jbossas</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="java"><![CDATA[Java]]></category>
		<category domain="category" nicename="jboss"><![CDATA[JBoss]]></category>
		<category domain="post_tag" nicename="opensso"><![CDATA[OpenSSO]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_blog</wp:meta_key>
			<wp:meta_value><![CDATA[jeff.familyyu.net]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_author</wp:meta_key>
			<wp:meta_value><![CDATA[Jeff Yu   (余昌)]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_429d160645182d8e72b48e90f5e50eb3_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[5866993197498198617]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_efficient_related_posts</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{i:0;a:4:{s:2:"ID";s:3:"211";s:10:"post_title";s:27:"OpenSSO installation blogs.";s:7:"matches";s:1:"1";s:9:"permalink";s:63:"http://jeff.familyyu.net/2008/07/22/opensso-installation-blogs/";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_relation_threshold</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>OpenSSO installation blogs.</title>
		<link>http://jeff.familyyu.net/2008/07/22/opensso-installation-blogs/</link>
		<pubDate>Tue, 22 Jul 2008 07:30:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang.wordpress.com/2008/07/22/opensso-installation-blogs</guid>
		<description></description>
		<content:encoded><![CDATA[<a href="http://blogs.sun.com/JohnD/">John</a> has composed two great blogs on installing opensso.
1.  <a id="how_to_install_tomcat_6" name="how_to_install_tomcat_6"></a> <a href="http://blogs.sun.com/JohnD/entry/how_to_install_tomcat_6"><span class="entrytitle">How to install Tomcat 6.x then launch and configure OpenSSO</span></a>
2.   <a id="how_to_install_glassfish_then" name="how_to_install_glassfish_then"></a> <a href="http://blogs.sun.com/JohnD/entry/how_to_install_glassfish_then"><span class="entrytitle">How to Install GlassFish Then Policy Agent 3.0</span></a>

Very good resources for new comers of OpenSSO.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>211</wp:post_id>
		<wp:post_date>2008-07-22 18:30:00</wp:post_date>
		<wp:post_date_gmt>2008-07-22 07:30:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>opensso-installation-blogs</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="java"><![CDATA[Java]]></category>
		<category domain="post_tag" nicename="opensso"><![CDATA[OpenSSO]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_blog</wp:meta_key>
			<wp:meta_value><![CDATA[jeff.familyyu.net]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_author</wp:meta_key>
			<wp:meta_value><![CDATA[Jeff Yu   (余昌)]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_429d160645182d8e72b48e90f5e50eb3_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[148582613624280549]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_efficient_related_posts</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{i:0;a:4:{s:2:"ID";s:3:"210";s:10:"post_title";s:50:"Deploying OpenSSO & Running its samples in JBossAS";s:7:"matches";s:1:"1";s:9:"permalink";s:85:"http://jeff.familyyu.net/2008/07/20/deploying-opensso-running-its-samples-in-jbossas/";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_relation_threshold</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>&quot;JBI in a nutshell&quot; presentation</title>
		<link>http://jeff.familyyu.net/2008/08/02/jbi-in-a-nutshell-presentation/</link>
		<pubDate>Fri, 01 Aug 2008 16:21:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang.wordpress.com/2008/08/02/jbi-in-a-nutshell-presentation</guid>
		<description></description>
		<content:encoded><![CDATA[Today, I conduct a 'JBI in a nutshell' in our Beijing team, because we are trying to think how to make <a href="http://jboss.org/jbossesb">JBossESB</a> SCA compatible. But before introduction of SCA, I'd like to share JBI spec to our team from my experience when I was working on <a href="http://servicemix.apache.org/">ServiceMix</a>. So here come the <a href="http://jeff.yuchang.googlepages.com/JBI_Presentation.pdf">'JBI in a nutshell' ppt</a> that I used today.<br /><br />Hopefully you will find it offers a little help for you understanding JBI, <a href="http://servicemix.apache.org/">ServiceMix</a>, and <a href="http://www.jboss.org/jbossesb">JBossESB</a>.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>212</wp:post_id>
		<wp:post_date>2008-08-02 03:21:00</wp:post_date>
		<wp:post_date_gmt>2008-08-01 16:21:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>jbi-in-a-nutshell-presentation</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="esb"><![CDATA[ESB]]></category>
		<category domain="category" nicename="java"><![CDATA[Java]]></category>
		<category domain="category" nicename="jboss"><![CDATA[JBoss]]></category>
		<category domain="category" nicename="soa"><![CDATA[SOA]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_blog</wp:meta_key>
			<wp:meta_value><![CDATA[jeff.familyyu.net]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_author</wp:meta_key>
			<wp:meta_value><![CDATA[Jeff Yu   (余昌)]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_429d160645182d8e72b48e90f5e50eb3_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[7894832562334369387]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>我喜欢下雨天</title>
		<link>http://jeff.familyyu.net/2008/08/21/%e6%88%91%e5%96%9c%e6%ac%a2%e4%b8%8b%e9%9b%a8%e5%a4%a9/</link>
		<pubDate>Thu, 21 Aug 2008 09:11:21 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang1.wordpress.com/2008/08/21/%e6%88%91%e5%96%9c%e6%ac%a2%e4%b8%8b%e9%9b%a8%e5%a4%a9</guid>
		<description></description>
		<content:encoded><![CDATA[<div id="msgcns!4001C604AF3F011!496" class="bvMsg">今天北京又下雨了，或许很多人都不喜欢下雨天，相比晴朗的天而言。 但我则相反，很多时候下雨天给我感觉很好，因为下雨天会给你偷懒的一种感觉，不再像平常的那么忙碌，那么快的节奏。或许跟我小时候的生活有关系，记得当时一到下雨天，父母也会在家里，因为不需要去田里干活。 那么小孩子就可以明目张胆的看电视，可以不用烧材做饭。很多时候，也才有时间跟他们轻松的聊聊天。&nbsp;

所以，我喜欢下雨天，特别是我在家里，外面下得很大的雨，似乎给你一个很正当的理由不去思考任何东西，不用去想你的工作等等..

</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>142</wp:post_id>
		<wp:post_date>2008-08-21 09:11:21</wp:post_date>
		<wp:post_date_gmt>2008-08-21 09:11:21</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e6%88%91%e5%96%9c%e6%ac%a2%e4%b8%8b%e9%9b%a8%e5%a4%a9</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="chinese"><![CDATA[Chinese]]></category>
		<category domain="category" nicename="thoughts"><![CDATA[Thoughts]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>spaces_a43755b404d273dfcedbd14ccb4f51ab_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[http://cid-04001c604af3f011.users.api.live.net/Users(288261576051650577)/Blogs('4001C604AF3F011!102')/Entries('4001C604AF3F011!496')?authkey=X13wC75MXT0%24]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>79</wp:comment_id>
			<wp:comment_author><![CDATA[霜子]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2008-08-26 06:50:41</wp:comment_date>
			<wp:comment_date_gmt>2008-08-26 06:50:41</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[我也喜欢雨天]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Twitter和手机的配合.</title>
		<link>http://jeff.familyyu.net/2008/12/20/twitter%e5%92%8c%e6%89%8b%e6%9c%ba%e7%9a%84%e9%85%8d%e5%90%88/</link>
		<pubDate>Sat, 20 Dec 2008 15:36:37 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang1.wordpress.com/2008/12/20/twitter%e5%92%8c%e6%89%8b%e6%9c%ba%e7%9a%84%e9%85%8d%e5%90%88</guid>
		<description></description>
		<content:encoded><![CDATA[<div id="msgcns!4001C604AF3F011!512" class="bvMsg">2007年11月份写的:
==================================
我们在讨论手机作为终端消费者的时候，
<div>我觉得我们忘了手机是一个更好的提供者，他提供的信息粒度更小，准确度更高...Blog是记录一天发生的事情，twitter是记录一个小时，半个小时发生的事情，所以twitter以后会更火，因为他提供的信息更准确...而且，只要你整合一天的twitter,那不就是一个blog了吗？ 很多人写blog本身就是记流水帐.. 对于电脑，你不可能随时打开记入你的想法，因为体积大，繁琐，很多时候，你的想法也只是一闪而过，这个时候，电脑根本没法捕捉住。。但是手机就可以，手机可以录音，手机可以拍摄。。实时的.&nbsp;

我还想到一个事情，那就是，这个月你到底消费了多少钱？分别是花在哪里？有浪费吗？我想这对于我来说，我很难回答，因为就算我有心思每天晚上去记录这个，也会记不清楚，更何况很多人，包括我，根本不愿意去记，原因是： 他要回忆很多个点。 但是，如果手机+ twitter的功能，我觉得我会使用这个软件，因为我只要吃完饭，走在路上的时候，对手机说"我今天吃饭花了10块"，完毕。 手机就记入下来。。。 那么我每一天只需要花几分钟，我就知道我今天消费了多少，花在哪里等等？ 同时，我们也就知道了月消费等等的。。。 如果有这么个功能了，我想录音笔也就可以被手机整合了吧？

其实，说起来，这个技术实现很简单，不难。 即使一个以时间戳作为一个线索，记录你的所作所为，包括你的文字，你的对话，你在某个时刻所拍摄的照片等等。。。

也就是说，我想做一个手机的客户端软件，来保存手机的记录。。。。 然后呢？ 我们也建立一个网站： 网站和手机之间不是客户端和服务器的概念: 他们是对等的概念...网站作为手机信息（包括所有记录）的备份，但是呢，网站也可以是客户端，比如你通过你的电脑写，你也可以同步到你的手机数据库上；同样的，你也可以把某一段时间段的手机上的记录同步到网站上...

但是呢，我觉得我们可以先把twitter做到手机上，因为现在的手机上网并不方便。。等方便时，我们就可以提供数据导出的办法。。。等等。。
==========================

所以,今天在开心网的时候,我特地观察了下是否能免费的用手机发布.因为我始终觉得,手机才是twitter上最适合的平台.

</div>
&nbsp;

</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>143</wp:post_id>
		<wp:post_date>2008-12-20 15:36:37</wp:post_date>
		<wp:post_date_gmt>2008-12-20 15:36:37</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>twitter%e5%92%8c%e6%89%8b%e6%9c%ba%e7%9a%84%e9%85%8d%e5%90%88</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="chinese"><![CDATA[Chinese]]></category>
		<category domain="category" nicename="thoughts"><![CDATA[Thoughts]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>spaces_a43755b404d273dfcedbd14ccb4f51ab_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[http://cid-04001c604af3f011.users.api.live.net/Users(288261576051650577)/Blogs('4001C604AF3F011!102')/Entries('4001C604AF3F011!512')?authkey=X13wC75MXT0%24]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Saving serializable object by using Hibernate</title>
		<link>http://jeff.familyyu.net/2008/08/04/saving-serializable-object-by-using-hibernate/</link>
		<pubDate>Mon, 04 Aug 2008 08:02:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang.wordpress.com/2008/08/04/saving-serializable-object-by-using-hibernate</guid>
		<description></description>
		<content:encoded><![CDATA[Well, sometimes you might want to save the object as serializable into database, with the Hibernate, it is quite simply for you to do that.

1). Using @Lob annotation from hibernate-annotation library
2). Write the ObjectInputStream, ObjectOutputstream like following thread's code.(<a href="http://blog.tremend.ro/2007/02/15/untitledserializable-java-objects-in-mysql/">sebastian mitroi serializable java objects  in  mysql</a>)]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>213</wp:post_id>
		<wp:post_date>2008-08-04 19:02:00</wp:post_date>
		<wp:post_date_gmt>2008-08-04 08:02:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>saving-serializable-object-by-using-hibernate</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="hibernate"><![CDATA[Hibernate]]></category>
		<category domain="category" nicename="java"><![CDATA[Java]]></category>
		<category domain="category" nicename="jboss"><![CDATA[JBoss]]></category>
		<category domain="post_tag" nicename="jpa"><![CDATA[JPA]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_blog</wp:meta_key>
			<wp:meta_value><![CDATA[jeff.familyyu.net]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_author</wp:meta_key>
			<wp:meta_value><![CDATA[Jeff Yu   (余昌)]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_429d160645182d8e72b48e90f5e50eb3_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[2655050196251694010]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_efficient_related_posts</wp:meta_key>
			<wp:meta_value><![CDATA[a:3:{i:0;a:4:{s:2:"ID";s:3:"219";s:10:"post_title";s:27:"Hibernate annotation of Map";s:7:"matches";s:1:"2";s:9:"permalink";s:64:"http://jeff.familyyu.net/2008/10/06/hibernate-annotation-of-map/";}i:1;a:4:{s:2:"ID";s:3:"699";s:10:"post_title";s:44:"Upgrading Hibernate 3.3.2 to Hibernate 4.0.0";s:7:"matches";s:1:"1";s:9:"permalink";s:81:"http://jeff.familyyu.net/2011/09/08/upgrading-hibernate-3-3-2-to-hibernate-4-0-0/";}i:2;a:4:{s:2:"ID";s:3:"263";s:10:"post_title";s:27:"JPA implementation patterns";s:7:"matches";s:1:"1";s:9:"permalink";s:64:"http://jeff.familyyu.net/2009/12/06/jpa-implementation-patterns/";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_relation_threshold</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Conversation Pattern</title>
		<link>http://jeff.familyyu.net/2008/08/11/conversation-pattern/</link>
		<pubDate>Mon, 11 Aug 2008 08:46:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang.wordpress.com/2008/08/11/conversation-pattern</guid>
		<description></description>
		<content:encoded><![CDATA[Gregor says:
<blockquote>There's usually a handful of roles that are defined. And usually there's a series of message types, and that's where WSDL and XSDs can do a little bit for us, like a certain message has a certain meaning and a certain structure. So for example I buy coffee and maybe my message contains what I want and then in the case of Starbucks there are 17 optional fields for all the extra double shot; but you have some notion of what's in these messages and then you have the rules about which messages can flow in which order. And that is really the most difficult part.&nbsp;</blockquote>
<blockquote>And that is exactly the sort argument between the BEPL people - they say that most of the time there is a central coordinator and this works pretty well and it's executable - and then what the choreography people say - careful here, you're making a very strong assumption, really we should look at the overall conversation there could be 20 parties and they all send messages back and forth, now we should not assume that there is this one thing that controls everything. That's exactly when the people fight and, stand up, and walk off with this kind of argument.</blockquote>
To the point. ;-), Hope you enjoy all the interview from <a href="http://www.infoq.com/interviews/gregor-hohpe-conversations">Gregor Hohpe</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>214</wp:post_id>
		<wp:post_date>2008-08-11 19:46:00</wp:post_date>
		<wp:post_date_gmt>2008-08-11 08:46:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>conversation-pattern</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="soa"><![CDATA[SOA]]></category>
		<category domain="post_tag" nicename="ws-cdl"><![CDATA[WS-CDL]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_blog</wp:meta_key>
			<wp:meta_value><![CDATA[jeff.familyyu.net]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_author</wp:meta_key>
			<wp:meta_value><![CDATA[Jeff Yu   (余昌)]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_429d160645182d8e72b48e90f5e50eb3_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[3276531455190417497]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_efficient_related_posts</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{i:0;a:4:{s:2:"ID";s:3:"197";s:10:"post_title";s:32:"Brief Introduction on the WS-CDL";s:7:"matches";s:1:"1";s:9:"permalink";s:69:"http://jeff.familyyu.net/2008/04/14/brief-introduction-on-the-ws-cdl/";}i:1;a:4:{s:2:"ID";s:3:"196";s:10:"post_title";s:16:"Links on WS-CDL.";s:7:"matches";s:1:"1";s:9:"permalink";s:52:"http://jeff.familyyu.net/2008/04/07/links-on-ws-cdl/";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_relation_threshold</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>REST articles link.</title>
		<link>http://jeff.familyyu.net/2008/08/19/rest-articles-link/</link>
		<pubDate>Tue, 19 Aug 2008 11:38:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang.wordpress.com/2008/08/19/rest-articles-link</guid>
		<description></description>
		<content:encoded><![CDATA[So in case you are new to REST, in case you are still fighting to get the REST correct, or either you are trying to be involved in the REST vs WS-* debate, then following articles worth your time to read it.<br /><br />1. <a href="http://www.infoq.com/articles/rest-introduction">A Brief Introduction to REST</a> By Stefan <strong>Tilkov</strong><br />2. <a href="http://www.infoq.com/articles/tilkov-rest-doubts">Addressing Doubts about REST</a> By Stefan <strong>Tilkov</strong><br />3. <a href="http://java.dzone.com/articles/intro-rest">Introduction to REST</a> By Bill Burke<br />4. <a href="http://architects.dzone.com/articles/putting-java-rest"> Putting Java To REST</a> By Bill Burke.<br /><br /><span style="color:rgb(255,0,0);">Notes: Add the 'putting java to rest' article. (update on Aug 2, 2009)<br /></span>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>215</wp:post_id>
		<wp:post_date>2008-08-19 22:38:00</wp:post_date>
		<wp:post_date_gmt>2008-08-19 11:38:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>rest-articles-link</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="rest"><![CDATA[REST]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_blog</wp:meta_key>
			<wp:meta_value><![CDATA[jeff.familyyu.net]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_author</wp:meta_key>
			<wp:meta_value><![CDATA[Jeff Yu   (余昌)]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_429d160645182d8e72b48e90f5e50eb3_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[791449823415037415]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>JBoss AS5 CR2 released.</title>
		<link>http://jeff.familyyu.net/2008/09/19/jboss-as5-cr2-released/</link>
		<pubDate>Thu, 18 Sep 2008 16:47:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang.wordpress.com/2008/09/19/jboss-as5-cr2-released</guid>
		<description></description>
		<content:encoded><![CDATA[I just post <a href="http://www.javaeye.com/news/3566">a news</a> about JBoss AS5 CR2 release in <a href="http://www.javaeye.com/">www.javaeye.com</a>, which is a quite popular in Chinese developer networks. Check it out <a href="http://www.javaeye.com/news/3566">here</a>.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>216</wp:post_id>
		<wp:post_date>2008-09-19 03:47:00</wp:post_date>
		<wp:post_date_gmt>2008-09-18 16:47:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>jboss-as5-cr2-released</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="chinese"><![CDATA[Chinese]]></category>
		<category domain="category" nicename="jboss"><![CDATA[JBoss]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_blog</wp:meta_key>
			<wp:meta_value><![CDATA[jeff.familyyu.net]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_author</wp:meta_key>
			<wp:meta_value><![CDATA[Jeff Yu   (余昌)]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_429d160645182d8e72b48e90f5e50eb3_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[7559537862681018151]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Using jdocbook to write documentation</title>
		<link>http://jeff.familyyu.net/2008/09/26/using-jdocbook-to-write-documentation/</link>
		<pubDate>Fri, 26 Sep 2008 06:22:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang.wordpress.com/2008/09/26/using-jdocbook-to-write-documentation</guid>
		<description></description>
		<content:encoded><![CDATA[If you are trying to find a tool to write your project documentation, and you don't like to use word processor to write your articles, you know, it is web era, sometimes you won't just to have one output, and you don't want to stick to one particular format either. then the <a href="http://www.jboss.org/maven-jdocbook-plugin/">JBoss Docbook</a> might be of your interest.

I used to use MS word to write articles, with a set of pre defined formats, such as Heading and so on, so that can produce a TOC (table of content). well, I still don't like to use Word to write articles. And then I find the <a href="http://www.jboss.org/maven-jdocbook-plugin/">JBoss Docbook</a> is very good and easy to use.

Use the JBoss Docbook is quite easy, now it is mavenized. you just simply define dependency and then add the task in the build process, that's all. BTW, if you are using Linux box, you can open the doc by "Open with Help" without running mvn install to build it.

So personally, I use Eclipse, with Xmlbuddy plugin to write the document, and it works quite well.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>217</wp:post_id>
		<wp:post_date>2008-09-26 17:22:00</wp:post_date>
		<wp:post_date_gmt>2008-09-26 06:22:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>using-jdocbook-to-write-documentation</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="java"><![CDATA[Java]]></category>
		<category domain="category" nicename="jboss"><![CDATA[JBoss]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_blog</wp:meta_key>
			<wp:meta_value><![CDATA[jeff.familyyu.net]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_author</wp:meta_key>
			<wp:meta_value><![CDATA[Jeff Yu   (余昌)]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_429d160645182d8e72b48e90f5e50eb3_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[8230783752512686584]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>&quot;JBoss ESB Introduction&quot; article (its written in chinese).</title>
		<link>http://jeff.familyyu.net/2008/09/28/jboss-esb-introduction-article-its-written-in-chinese/</link>
		<pubDate>Sun, 28 Sep 2008 10:22:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang.wordpress.com/2008/09/28/jboss-esb-introduction-article-its-written-in-chinese</guid>
		<description></description>
		<content:encoded><![CDATA[Just finished a writing of <a href="http://people.apache.org/%7Ejeffyu/articles/zh_CN/jbossesb/">JBoss ESB introduction</a> in chinese, I think <a href="http://www.jboss.org/jbossesb">JBoss ESB</a> is a good ESB implementation, and it has plenty of quick starts, which can help you get it started very quickly. And one of its strong points is that it integrates with jBPM, JBoss Rules, Smooks seamlessly. So it worths you to check it out. Hopefully my little article can help you understand it more quickly if you can read chinese. ;-)]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>218</wp:post_id>
		<wp:post_date>2008-09-28 21:22:00</wp:post_date>
		<wp:post_date_gmt>2008-09-28 10:22:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>jboss-esb-introduction-article-its-written-in-chinese</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="chinese"><![CDATA[Chinese]]></category>
		<category domain="category" nicename="esb"><![CDATA[ESB]]></category>
		<category domain="category" nicename="jboss"><![CDATA[JBoss]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_blog</wp:meta_key>
			<wp:meta_value><![CDATA[jeff.familyyu.net]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_author</wp:meta_key>
			<wp:meta_value><![CDATA[Jeff Yu   (余昌)]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_429d160645182d8e72b48e90f5e50eb3_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[4595272371177960455]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>80</wp:comment_id>
			<wp:comment_author><![CDATA[Anonymous]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://Anonymousnoreply@blogger.com</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2009-02-03 13:56:00</wp:comment_date>
			<wp:comment_date_gmt>2009-02-03 02:56:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[乱码，请问一下是字符集使用的是？]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>81</wp:comment_id>
			<wp:comment_author><![CDATA[Anonymous]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://Anonymousnoreply@blogger.com</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2009-02-03 14:00:00</wp:comment_date>
			<wp:comment_date_gmt>2009-02-03 03:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[utf-8.thanks a lot!如果部署jbossesb到生产环境，其性能有评估吗？]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Hibernate annotation of Map</title>
		<link>http://jeff.familyyu.net/2008/10/06/hibernate-annotation-of-map/</link>
		<pubDate>Mon, 06 Oct 2008 05:52:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang.wordpress.com/2008/10/06/hibernate-annotation-of-map</guid>
		<description></description>
		<content:encoded><![CDATA[If you happen to have a simple Map&lt;String, String&gt; to be mapped by using Hibernate annotation, and don't want to create an object by using List, such as List&lt;Property&gt;, the property contains the key and value member. Then you can use the Hibernate Annotation, "CollectionOfElements", it is hibernate specific, not JPA-specific. Details please refer to <a href="http://i-proving.ca/space/Technologies/Hibernate/Hibernate+Annotation+Examples/Collection+of+Elements">this blog entry</a>, it is well documented.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>219</wp:post_id>
		<wp:post_date>2008-10-06 16:52:00</wp:post_date>
		<wp:post_date_gmt>2008-10-06 05:52:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>hibernate-annotation-of-map</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="hibernate"><![CDATA[Hibernate]]></category>
		<category domain="category" nicename="java"><![CDATA[Java]]></category>
		<category domain="category" nicename="jboss"><![CDATA[JBoss]]></category>
		<category domain="post_tag" nicename="jpa"><![CDATA[JPA]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_blog</wp:meta_key>
			<wp:meta_value><![CDATA[jeff.familyyu.net]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_author</wp:meta_key>
			<wp:meta_value><![CDATA[Jeff Yu   (余昌)]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_429d160645182d8e72b48e90f5e50eb3_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[9068116184477227516]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_efficient_related_posts</wp:meta_key>
			<wp:meta_value><![CDATA[a:3:{i:0;a:4:{s:2:"ID";s:3:"213";s:10:"post_title";s:45:"Saving serializable object by using Hibernate";s:7:"matches";s:1:"2";s:9:"permalink";s:82:"http://jeff.familyyu.net/2008/08/04/saving-serializable-object-by-using-hibernate/";}i:1;a:4:{s:2:"ID";s:3:"699";s:10:"post_title";s:44:"Upgrading Hibernate 3.3.2 to Hibernate 4.0.0";s:7:"matches";s:1:"1";s:9:"permalink";s:81:"http://jeff.familyyu.net/2011/09/08/upgrading-hibernate-3-3-2-to-hibernate-4-0-0/";}i:2;a:4:{s:2:"ID";s:3:"263";s:10:"post_title";s:27:"JPA implementation patterns";s:7:"matches";s:1:"1";s:9:"permalink";s:64:"http://jeff.familyyu.net/2009/12/06/jpa-implementation-patterns/";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_relation_threshold</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>How to fix &quot;Lock Assertion Failure&quot; in Fedora</title>
		<link>http://jeff.familyyu.net/2008/10/08/how-to-fix-lock-assertion-failure-in-fedora/</link>
		<pubDate>Wed, 08 Oct 2008 05:07:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang.wordpress.com/2008/10/08/how-to-fix-lock-assertion-failure-in-fedora</guid>
		<description></description>
		<content:encoded><![CDATA[Not sure when exactly have the 'Lock Assertion Failure' warning, because it doesn't break my application in my case, so till today, I thought it was too tedious and want to get it fixed, and then I found the Ryan's blog post <a href="http://necessaryandsufficient.blogspot.com/2008/06/i-tried-to-build-gwt-today-on-ubuntu.html">here</a>.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>220</wp:post_id>
		<wp:post_date>2008-10-08 16:07:00</wp:post_date>
		<wp:post_date_gmt>2008-10-08 05:07:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>how-to-fix-lock-assertion-failure-in-fedora</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="fedora"><![CDATA[Fedora]]></category>
		<category domain="category" nicename="java"><![CDATA[Java]]></category>
		<category domain="category" nicename="os"><![CDATA[OS]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_blog</wp:meta_key>
			<wp:meta_value><![CDATA[jeff.familyyu.net]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_author</wp:meta_key>
			<wp:meta_value><![CDATA[Jeff Yu   (余昌)]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_429d160645182d8e72b48e90f5e50eb3_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[6058067776958906343]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_efficient_related_posts</wp:meta_key>
			<wp:meta_value><![CDATA[a:10:{i:0;a:4:{s:2:"ID";s:3:"264";s:10:"post_title";s:47:"Install VirtualBox and Chrome beta in Fedora 10";s:7:"matches";s:1:"1";s:9:"permalink";s:84:"http://jeff.familyyu.net/2009/12/12/install-virtualbox-and-chrome-beta-in-fedora-10/";}i:1;a:4:{s:2:"ID";s:3:"231";s:10:"post_title";s:27:"Fedora environment setting.";s:7:"matches";s:1:"1";s:9:"permalink";s:63:"http://jeff.familyyu.net/2009/07/08/fedora-environment-setting/";}i:2;a:4:{s:2:"ID";s:3:"228";s:10:"post_title";s:40:"Fedora 10 使用NetworkManager配置ADSL";s:7:"matches";s:1:"1";s:9:"permalink";s:101:"http://jeff.familyyu.net/2009/06/03/fedora-10-%e4%bd%bf%e7%94%a8networkmanager%e9%85%8d%e7%bd%aeadsl/";}i:3;a:4:{s:2:"ID";s:3:"207";s:10:"post_title";s:28:"Install Firefox3 in Fedora8.";s:7:"matches";s:1:"1";s:9:"permalink";s:64:"http://jeff.familyyu.net/2008/06/18/install-firefox3-in-fedora8/";}i:4;a:4:{s:2:"ID";s:3:"205";s:10:"post_title";s:37:"Fedora8 in Lenovo T61P with Projector";s:7:"matches";s:1:"1";s:9:"permalink";s:74:"http://jeff.familyyu.net/2008/06/17/fedora8-in-lenovo-t61p-with-projector/";}i:5;a:4:{s:2:"ID";s:3:"203";s:10:"post_title";s:44:"Postgresql installation/connection in Fedora";s:7:"matches";s:1:"1";s:9:"permalink";s:80:"http://jeff.familyyu.net/2008/05/19/postgresql-installationconnection-in-fedora/";}i:6;a:4:{s:2:"ID";s:3:"202";s:10:"post_title";s:34:"Using wireless in Fedora8 for T61P";s:7:"matches";s:1:"1";s:9:"permalink";s:71:"http://jeff.familyyu.net/2008/05/05/using-wireless-in-fedora8-for-t61p/";}i:7;a:4:{s:2:"ID";s:3:"201";s:10:"post_title";s:26:"My Fedora8 Roadmap on T61P";s:7:"matches";s:1:"1";s:9:"permalink";s:63:"http://jeff.familyyu.net/2008/05/01/my-fedora8-roadmap-on-t61p/";}i:8;a:4:{s:2:"ID";s:3:"200";s:10:"post_title";s:34:"Dell D820 and Lenovo ThinkPad T61P";s:7:"matches";s:1:"1";s:9:"permalink";s:71:"http://jeff.familyyu.net/2008/05/01/dell-d820-and-lenovo-thinkpad-t61p/";}i:9;a:4:{s:2:"ID";s:3:"199";s:10:"post_title";s:30:"Open source business in Redhat";s:7:"matches";s:1:"1";s:9:"permalink";s:67:"http://jeff.familyyu.net/2008/04/22/open-source-business-in-redhat/";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_relation_threshold</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>JBoss SOA-P 4.3.GA released.</title>
		<link>http://jeff.familyyu.net/2008/11/01/jboss-soa-p-4-3-ga-released/</link>
		<pubDate>Sat, 01 Nov 2008 06:40:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang.wordpress.com/2008/11/01/jboss-soa-p-4-3-ga-released</guid>
		<description></description>
		<content:encoded><![CDATA[On 30th Oct, we've just released the SOA-P 4.3.GA, this version include a great improvements. Details you can see from <a href="http://jbossesb.blogspot.com/2008/10/soa-platform-43-is-released.html">here</a>. Again, I just posted a <a href="http://www.javaeye.com/news/4007">chinese version of release announcement</a>.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>221</wp:post_id>
		<wp:post_date>2008-11-01 17:40:00</wp:post_date>
		<wp:post_date_gmt>2008-11-01 06:40:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>jboss-soa-p-4-3-ga-released</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="chinese"><![CDATA[Chinese]]></category>
		<category domain="category" nicename="soa"><![CDATA[SOA]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_blog</wp:meta_key>
			<wp:meta_value><![CDATA[jeff.familyyu.net]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_author</wp:meta_key>
			<wp:meta_value><![CDATA[Jeff Yu   (余昌)]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_429d160645182d8e72b48e90f5e50eb3_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[7640869454483817024]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>SAML &amp; XACML links</title>
		<link>http://jeff.familyyu.net/2008/11/04/saml-xacml-links/</link>
		<pubDate>Tue, 04 Nov 2008 10:19:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang.wordpress.com/2008/11/04/saml-xacml-links</guid>
		<description></description>
		<content:encoded><![CDATA[Some great SAML links.

1. <a href="http://docs.oasis-open.org/security/saml/Post2.0/sstc-saml-tech-overview-2.0-cd-02.pdf">SAML v2.0 Technical Overview</a> (Strongly recommended)
2. <a href="http://www.ibm.com/developerworks/xml/library/x-seclay4/">Ensure portable trust with SAML</a> from IBM developerworks
3. <a href="http://en.wikipedia.org/wiki/SAML_2.0">SAML 2.0</a> from wikipedia
4. <a href="http://www.oracle.com/technology/pub/articles/dev2arch/2005/11/saml.html">Demystifying SAML</a> from Oracle/BEA

XACML links:

1. <a href="http://sunxacml.sourceforge.net/guide.html#xacml">Sun's XACML Implementation Programmer's Guide</a>
2. <a href="http://www.oracle.com/technology/pub/articles/dev2arch/2004/02/xacml.html">Introduction to XACML</a>
3. <a href="http://www.ibm.com/developerworks/xml/library/x-xacml/">Control information access with XACML</a> from IBM developerworks
4. <a href="http://www.nsitonline.in/hemant/stuff/xacml/XACML%20Tutorial%20with%20a%20Use%20Case%20Scenario%20for%20Academic%20Institutions.htm">XACML Tutorial with a Use Case Scenario for Academic Institutions</a> by Hemant Goyal]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>222</wp:post_id>
		<wp:post_date>2008-11-04 21:19:00</wp:post_date>
		<wp:post_date_gmt>2008-11-04 10:19:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>saml-xacml-links</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="java"><![CDATA[Java]]></category>
		<category domain="post_tag" nicename="security"><![CDATA[Security]]></category>
		<category domain="category" nicename="soa"><![CDATA[SOA]]></category>
		<category domain="post_tag" nicename="ws-security"><![CDATA[WS-Security]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_blog</wp:meta_key>
			<wp:meta_value><![CDATA[jeff.familyyu.net]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_author</wp:meta_key>
			<wp:meta_value><![CDATA[Jeff Yu   (余昌)]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_429d160645182d8e72b48e90f5e50eb3_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[2089221266911640848]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_efficient_related_posts</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{i:0;a:4:{s:2:"ID";s:3:"235";s:10:"post_title";s:42:"浅谈ws-security: 加密,签名,证书等";s:7:"matches";s:1:"2";s:9:"permalink";s:130:"http://jeff.familyyu.net/2009/07/14/%e6%b5%85%e8%b0%88ws-security-%e5%8a%a0%e5%af%86%e7%ad%be%e5%90%8d%e8%af%81%e4%b9%a6%e7%ad%89/";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_relation_threshold</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>How to conduct a good presentation.</title>
		<link>http://jeff.familyyu.net/2008/11/21/how-to-conduct-a-good-presentation/</link>
		<pubDate>Fri, 21 Nov 2008 06:44:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang.wordpress.com/2008/11/21/how-to-conduct-a-good-presentation</guid>
		<description></description>
		<content:encoded><![CDATA[I've listened to a lot of presentation, some of them are good, some of them are bad. I also conducted some presentation by myself. Again, some of them are bad, some of them are NOT bad. ;-).<br /><br />Following are some bullet points that I think are necessary to a good presentation.<br /><br /><ol><li>When in doubt, leave it out, or at least, talk it quickly and not talk it too deep/much.<br />(只讲自己懂的东西,如果一定要说些自己不懂的,请就简单/粗浅的说)</li><li> Make sure you know the level of your target audience.<br />(需要明白你的听众接受能力)</li><li> Know the time for your whole presentation, do NOT extend your presentation as much as possible.<br />(知道你演讲的时间,尽量不要拖长)</li><li>Do NOT stay TOO LONG time in ONE slide. If it is, split it too many slides.<br />(同一个演讲稿页面,别停留太长时间,如果本身内容的确需要很长时间,请把它分成几个页面)</li><li> If it is an introduction presentation, then EXAMPLE is very important. Cause it can attract audience quickly.<br />(如果是做一个介绍性的演讲,例子很重要)</li><li>DO NOT talk too detail in your presentation, it is IMPOSSIBLE that people can know all of it just through you presentation. Highlight the important concepts and philosophy. You can lead people to documentation or other articles if they are interested.<br />(别在演讲的时候讲的太细. 不要指望听众只通过听你的演讲就能知道全部东西,挑重点讲,然后告诉听众在哪儿可以看到更详细的例子)</li><li>Try not to talk fast, use some easy understand words to illustrate your concepts, if it is not easy enough, it means you didn't think well how to express it or didn't understand it deeply.<br />(尽量用浅显的语言去解释,如果用太深奥的语言，说明要么你没准备好,又或者你没理解透彻)</li><li>If it is a product shown presentation, you'd better ask audience whether they have any questions or not in the end of each feature.<br />(如果是做产品会，最好在每个特性/功能完后,问下是否有问题)</li><li>Preparation is the most important. Whether is successful or not, largely depends on your preparation.<br />（演讲前期的准备很关键)</li></ol>What other bullet points am I missing here?]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>223</wp:post_id>
		<wp:post_date>2008-11-21 17:44:00</wp:post_date>
		<wp:post_date_gmt>2008-11-21 06:44:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>how-to-conduct-a-good-presentation</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="chinese"><![CDATA[Chinese]]></category>
		<category domain="category" nicename="others"><![CDATA[Others]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_blog</wp:meta_key>
			<wp:meta_value><![CDATA[jeff.familyyu.net]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_author</wp:meta_key>
			<wp:meta_value><![CDATA[Jeff Yu   (余昌)]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_429d160645182d8e72b48e90f5e50eb3_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[7304894335798403960]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Reflection on 2008, and 2009&#039;s resolution.</title>
		<link>http://jeff.familyyu.net/2009/01/13/reflection-on-2008-and-2009s-resolution/</link>
		<pubDate>Mon, 12 Jan 2009 14:45:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang.wordpress.com/2009/01/13/reflection-on-2008-and-2009s-resolution</guid>
		<description></description>
		<content:encoded><![CDATA[I know it is a bit late for the new year resolution, but you probably know that I am kind of guy that is always behind than others. ;-)<br /><br />So, before I am looking forward 2009, let me just think it back on what I have done on 2008. The first big thing of it is that I got an opportunity to join in JBoss division, Redhat.<br /><br />Then, here are things:<br /><ol><li>Used the Fedora Linux as my day to day OS. I used Ubuntu distro on the next half year of 2007.</li><li>Learned that <a href="http://www.jboss.com/products/platforms/soa">JBoss SOA-P</a> product, initially, learning the J<a href="http://www.jboss.org/jbossesb">Boss ESB</a>, and then write a simple <a href="http://people.apache.org/%7Ejeffyu/articles/zh_CN/jbossesb/">JBoss ESB introduction article in chinese</a>.</li><li>Worked on a sub-project of <a href="http://www.jboss.org/overlord">JBoss Overlord</a>, its called <a href="http://www.w3.org/TR/ws-cdl-10/">CDL(process governance)</a>, and <a href="http://www.jboss.com/index.html?module=bb&amp;op=viewtopic&amp;p=4192082">released our first Milestone in Nov 2008</a>.</li><li>Learned the security stuff, and then have some work on security integration with opensso in JBoss SOA-P product.</li><li>Me, Howard and Young set up a new project on the google code, its called <a href="http://code.google.com/p/twiddling">Twiddling</a>, yeah, we are trying to get it as a next generation of current JBoss AS's twiddle. and we are working on it in our spare time.<br /></li></ol>I have to say that I learn a lot since I joined in the JBoss, it is quite extensive as well. Say, not just ESB, but also BPM, BPEL, identity, security and so on. It makes me quite busy.<br /><br />Well, for the 2009, I am thinking that I am gonna try following things.<br /><ol><li>Learn a new languague, could be either erlang, scala or ruby? Apparently, ruby is very hooot these years. I am apt to erlang or scala. but we will see. I am thinking I am too Java centric, need to learn a new language, so that might look java in a new fresh perspective.</li><li>Continuing to work on/focus on ESB, BPM, Governance etc, say in the SOA area. But as the REST is easy to use compared to the web service, I would expect more and more peole are building RESTful service. I just hate to read the wsdl, bepl file. Frankly, IMHO, the wsdl and bepl were not desinged for human read. The xml was not a programming language, so if it is too large, it is out of our reading capability. </li><li>Get our <a href="http://code.google.com/p/twiddling">Twiddling</a> project out of door, hopefully in first half year of 2009. </li><li>Write more articles on SOA, or even JBoss AS area.</li></ol>Well, I would expect that 2009 will still be a bad econimo year in world wide, but with above things in mind, I still think it should be fun.<br /><br />Lets go for 2009. ;-)]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>224</wp:post_id>
		<wp:post_date>2009-01-13 01:45:00</wp:post_date>
		<wp:post_date_gmt>2009-01-12 14:45:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>reflection-on-2008-and-2009s-resolution</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="others"><![CDATA[Others]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_blog</wp:meta_key>
			<wp:meta_value><![CDATA[jeff.familyyu.net]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_author</wp:meta_key>
			<wp:meta_value><![CDATA[Jeff Yu   (余昌)]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_429d160645182d8e72b48e90f5e50eb3_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[4259625499229711198]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>JUL Logger setting</title>
		<link>http://jeff.familyyu.net/2009/02/18/jul-logger-setting/</link>
		<pubDate>Tue, 17 Feb 2009 17:13:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang.wordpress.com/2009/02/18/jul-logger-setting</guid>
		<description></description>
		<content:encoded><![CDATA[Well, first I have to say that the log in Java is kind of messy, why? we got too many choices. say log4j, jakarta common logging, slf etc. And as comes with the JDK 1.5, we have the java.util.logging along with this. Come on, it is just a simple log, what the hell do we need to have these many libraries.<br /><br />Anyway, avoid the jar conflictions, the simplest scenario would be to pick up the java.util.logging, as it has been shipped within JDK. If you are wondering where/how to update the logging.properties file, (like log4j.properties in log4j), then here we've got <a href="http://www.ociweb.com/mark/programming/JavaLogging.html">a good article</a> [1] can help you.<br /><br />HTH.<br /><br />[1] In this article, for the 2nd method of updating logging.properties file, which should be located in the $JDK_HOME/jre/lib/logging.properties.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>225</wp:post_id>
		<wp:post_date>2009-02-18 04:13:00</wp:post_date>
		<wp:post_date_gmt>2009-02-17 17:13:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>jul-logger-setting</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="java"><![CDATA[Java]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_blog</wp:meta_key>
			<wp:meta_value><![CDATA[jeff.familyyu.net]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_author</wp:meta_key>
			<wp:meta_value><![CDATA[Jeff Yu   (余昌)]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_429d160645182d8e72b48e90f5e50eb3_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[6702702577194002697]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>十篇每个程序员应该读的文章,论文.(至少两遍)</title>
		<link>http://jeff.familyyu.net/2009/03/23/%e5%8d%81%e7%af%87%e6%af%8f%e4%b8%aa%e7%a8%8b%e5%ba%8f%e5%91%98%e5%ba%94%e8%af%a5%e8%af%bb%e7%9a%84%e6%96%87%e7%ab%a0%e8%ae%ba%e6%96%87-%e8%87%b3%e5%b0%91%e4%b8%a4%e9%81%8d/</link>
		<pubDate>Mon, 23 Mar 2009 05:55:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang.wordpress.com/2009/03/23/%e5%8d%81%e7%af%87%e6%af%8f%e4%b8%aa%e7%a8%8b%e5%ba%8f%e5%91%98%e5%ba%94%e8%af%a5%e8%af%bb%e7%9a%84%e6%96%87%e7%ab%a0%e8%ae%ba%e6%96%87-%e8%87%b3%e5%b0%91%e4%b8%a4%e9%81%8d</guid>
		<description></description>
		<content:encoded><![CDATA[今天无意看到了Michael Feather差不多一个月写的 <a href="http://blog.objectmentor.com/articles/2009/02/26/10-papers-every-programmer-should-read-at-least-twice">10 Papers Every Programmer Should Read (At Least Twice) </a>, 个人觉得非常有意思,里面有篇是提到Functional Programming, 现在FP是越来越引起大家的关注.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>226</wp:post_id>
		<wp:post_date>2009-03-23 16:55:00</wp:post_date>
		<wp:post_date_gmt>2009-03-23 05:55:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%8d%81%e7%af%87%e6%af%8f%e4%b8%aa%e7%a8%8b%e5%ba%8f%e5%91%98%e5%ba%94%e8%af%a5%e8%af%bb%e7%9a%84%e6%96%87%e7%ab%a0%e8%ae%ba%e6%96%87-%e8%87%b3%e5%b0%91%e4%b8%a4%e9%81%8d</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="chinese"><![CDATA[Chinese]]></category>
		<category domain="category" nicename="others"><![CDATA[Others]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_blog</wp:meta_key>
			<wp:meta_value><![CDATA[jeff.familyyu.net]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_author</wp:meta_key>
			<wp:meta_value><![CDATA[Jeff Yu   (余昌)]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_429d160645182d8e72b48e90f5e50eb3_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[22662934316883594]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>I am a Duty Fulfiller??</title>
		<link>http://jeff.familyyu.net/2009/03/31/i-am-a-duty-fulfiller/</link>
		<pubDate>Tue, 31 Mar 2009 05:11:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang.wordpress.com/2009/03/31/i-am-a-duty-fulfiller</guid>
		<description></description>
		<content:encoded><![CDATA[Noticed from <a href="http://markclittle.blogspot.com/2009/03/analyze-your-blog.html">Mark's Blog</a>, I've analysed my blog, it turns out <a href="http://typealyzer.com/index.php">I am a Duty Fulfiller</a>?<br /><br /><blockquote>The responsible and hardworking type. They are especially attuned to the details of life and are careful about getting the facts right. Conservative by nature they are often reluctant to take any risks whatsoever.<br /><br />The Duty Fulfillers are happy to be let alone and to be able to work int heir own pace. They know what they have to do and how to do it.<br /><br /></blockquote>I think I am more than a Duty Fulfiller??? Maybe it is an indication like I didn't blog often. Anyway, it is interesting. ;-)]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>227</wp:post_id>
		<wp:post_date>2009-03-31 16:11:00</wp:post_date>
		<wp:post_date_gmt>2009-03-31 05:11:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>i-am-a-duty-fulfiller</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="others"><![CDATA[Others]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_blog</wp:meta_key>
			<wp:meta_value><![CDATA[jeff.familyyu.net]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_author</wp:meta_key>
			<wp:meta_value><![CDATA[Jeff Yu   (余昌)]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_429d160645182d8e72b48e90f5e50eb3_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[4313269843650274929]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Fedora 10 使用NetworkManager配置ADSL</title>
		<link>http://jeff.familyyu.net/2009/06/03/fedora-10-%e4%bd%bf%e7%94%a8networkmanager%e9%85%8d%e7%bd%aeadsl/</link>
		<pubDate>Wed, 03 Jun 2009 07:34:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang.wordpress.com/2009/06/03/fedora-10-%e4%bd%bf%e7%94%a8networkmanager%e9%85%8d%e7%bd%aeadsl</guid>
		<description></description>
		<content:encoded><![CDATA[在Fedora 10 下使用 NetworkManager 来配置ADSL.
<ol>
	<li>su -c NetworkManager (启动NetworkManager)</li>
	<li>点击NetworkManager的图标, 看到VPN Connections, 选择Configure VPN</li>
	<li>Go to DSL Tab,</li>
	<li>Add DSL, 输入: username, password etc</li>
</ol>
然后重启 NetworkManager, 使用 DSL 来连接即可.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>228</wp:post_id>
		<wp:post_date>2009-06-03 18:34:00</wp:post_date>
		<wp:post_date_gmt>2009-06-03 07:34:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>fedora-10-%e4%bd%bf%e7%94%a8networkmanager%e9%85%8d%e7%bd%aeadsl</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="chinese"><![CDATA[Chinese]]></category>
		<category domain="post_tag" nicename="fedora"><![CDATA[Fedora]]></category>
		<category domain="category" nicename="os"><![CDATA[OS]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_blog</wp:meta_key>
			<wp:meta_value><![CDATA[jeff.familyyu.net]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_author</wp:meta_key>
			<wp:meta_value><![CDATA[Jeff Yu   (余昌)]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_429d160645182d8e72b48e90f5e50eb3_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[7462374083353295953]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_efficient_related_posts</wp:meta_key>
			<wp:meta_value><![CDATA[a:10:{i:0;a:4:{s:2:"ID";s:3:"264";s:10:"post_title";s:47:"Install VirtualBox and Chrome beta in Fedora 10";s:7:"matches";s:1:"1";s:9:"permalink";s:84:"http://jeff.familyyu.net/2009/12/12/install-virtualbox-and-chrome-beta-in-fedora-10/";}i:1;a:4:{s:2:"ID";s:3:"231";s:10:"post_title";s:27:"Fedora environment setting.";s:7:"matches";s:1:"1";s:9:"permalink";s:63:"http://jeff.familyyu.net/2009/07/08/fedora-environment-setting/";}i:2;a:4:{s:2:"ID";s:3:"220";s:10:"post_title";s:45:"How to fix "Lock Assertion Failure" in Fedora";s:7:"matches";s:1:"1";s:9:"permalink";s:80:"http://jeff.familyyu.net/2008/10/08/how-to-fix-lock-assertion-failure-in-fedora/";}i:3;a:4:{s:2:"ID";s:3:"207";s:10:"post_title";s:28:"Install Firefox3 in Fedora8.";s:7:"matches";s:1:"1";s:9:"permalink";s:64:"http://jeff.familyyu.net/2008/06/18/install-firefox3-in-fedora8/";}i:4;a:4:{s:2:"ID";s:3:"205";s:10:"post_title";s:37:"Fedora8 in Lenovo T61P with Projector";s:7:"matches";s:1:"1";s:9:"permalink";s:74:"http://jeff.familyyu.net/2008/06/17/fedora8-in-lenovo-t61p-with-projector/";}i:5;a:4:{s:2:"ID";s:3:"203";s:10:"post_title";s:44:"Postgresql installation/connection in Fedora";s:7:"matches";s:1:"1";s:9:"permalink";s:80:"http://jeff.familyyu.net/2008/05/19/postgresql-installationconnection-in-fedora/";}i:6;a:4:{s:2:"ID";s:3:"202";s:10:"post_title";s:34:"Using wireless in Fedora8 for T61P";s:7:"matches";s:1:"1";s:9:"permalink";s:71:"http://jeff.familyyu.net/2008/05/05/using-wireless-in-fedora8-for-t61p/";}i:7;a:4:{s:2:"ID";s:3:"201";s:10:"post_title";s:26:"My Fedora8 Roadmap on T61P";s:7:"matches";s:1:"1";s:9:"permalink";s:63:"http://jeff.familyyu.net/2008/05/01/my-fedora8-roadmap-on-t61p/";}i:8;a:4:{s:2:"ID";s:3:"200";s:10:"post_title";s:34:"Dell D820 and Lenovo ThinkPad T61P";s:7:"matches";s:1:"1";s:9:"permalink";s:71:"http://jeff.familyyu.net/2008/05/01/dell-d820-and-lenovo-thinkpad-t61p/";}i:9;a:4:{s:2:"ID";s:3:"199";s:10:"post_title";s:30:"Open source business in Redhat";s:7:"matches";s:1:"1";s:9:"permalink";s:67:"http://jeff.familyyu.net/2008/04/22/open-source-business-in-redhat/";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_relation_threshold</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>jBPM4.0 framework exploring</title>
		<link>http://jeff.familyyu.net/2009/06/29/jbpm4-0-framework-exploring/</link>
		<pubDate>Mon, 29 Jun 2009 10:54:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang.wordpress.com/2009/06/29/jbpm4-0-framework-exploring</guid>
		<description></description>
		<content:encoded><![CDATA[I just finished a 0.1 version of 《<a href="http://people.apache.org/%7Ejeffyu/articles/zh_CN/jbpm/">jBPM 4.0 framework exploring</a>》 , it is written in Chinese, I would say the jbpm4.0 framework is very neat, and easy to understand, it is very flexible.

So, if you are looking for a good BPM library, then I would strongly recommend that try out the jBPM 4.0, whose GA will be supposed to be released at July 1st.

If you have any comments on the article, you can leave your comments here. ;-)]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>229</wp:post_id>
		<wp:post_date>2009-06-29 21:54:00</wp:post_date>
		<wp:post_date_gmt>2009-06-29 10:54:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>jbpm4-0-framework-exploring</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="chinese"><![CDATA[Chinese]]></category>
		<category domain="category" nicename="java"><![CDATA[Java]]></category>
		<category domain="category" nicename="jboss"><![CDATA[JBoss]]></category>
		<category domain="post_tag" nicename="jbpm"><![CDATA[jBPM]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_blog</wp:meta_key>
			<wp:meta_value><![CDATA[jeff.familyyu.net]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_author</wp:meta_key>
			<wp:meta_value><![CDATA[Jeff Yu   (余昌)]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_429d160645182d8e72b48e90f5e50eb3_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[7107429875273579030]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_efficient_related_posts</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{i:0;a:4:{s:2:"ID";s:3:"243";s:10:"post_title";s:38:"jBPM 4.0 restful service introduction.";s:7:"matches";s:1:"1";s:9:"permalink";s:74:"http://jeff.familyyu.net/2009/08/08/jbpm-4-0-restful-service-introduction/";}i:1;a:4:{s:2:"ID";s:3:"239";s:10:"post_title";s:21:"Updates on JBoss ESB.";s:7:"matches";s:1:"1";s:9:"permalink";s:57:"http://jeff.familyyu.net/2009/07/22/updates-on-jboss-esb/";}i:2;a:4:{s:2:"ID";s:3:"236";s:10:"post_title";s:39:"Getting Started with jBPM 4.0 (Part IV)";s:7:"matches";s:1:"1";s:9:"permalink";s:74:"http://jeff.familyyu.net/2009/07/19/getting-started-with-jbpm-4-0-part-iv/";}i:3;a:4:{s:2:"ID";s:3:"234";s:10:"post_title";s:40:"Getting Started with jBPM 4.0 (Part III)";s:7:"matches";s:1:"1";s:9:"permalink";s:75:"http://jeff.familyyu.net/2009/07/12/getting-started-with-jbpm-4-0-part-iii/";}i:4;a:4:{s:2:"ID";s:3:"233";s:10:"post_title";s:39:"Getting Started with jBPM 4.0 (Part II)";s:7:"matches";s:1:"1";s:9:"permalink";s:74:"http://jeff.familyyu.net/2009/07/12/getting-started-with-jbpm-4-0-part-ii/";}i:5;a:4:{s:2:"ID";s:3:"232";s:10:"post_title";s:41:"Getting Started with jBPM 4.0 - (Part I )";s:7:"matches";s:1:"1";s:9:"permalink";s:73:"http://jeff.familyyu.net/2009/07/11/getting-started-with-jbpm-4-0-part-i/";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_relation_threshold</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>java concurrency and scala links</title>
		<link>http://jeff.familyyu.net/2009/07/08/java-concurrency-and-scala-links/</link>
		<pubDate>Wed, 08 Jul 2009 06:13:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang.wordpress.com/2009/07/08/java-concurrency-and-scala-links</guid>
		<description></description>
		<content:encoded><![CDATA[On the weekend, happened to read the  <a href="http://refcardz.dzone.com/refcardz/core-java-concurrency?oid=hom11507">《core java concurrency》</a> ref card, it is a great material, and good summary. Also, read the <a href="http://macstrac.blogspot.com/2009/04/scala-as-long-term-replacement-for.html">a scala blog</a> entry from <a href="http://macstrac.blogspot.com/">James Strachan</a>. Very interesting to read, and there are a lot of scala resources links  on the blog.<br /><br />Hope you enjoy these two as I do.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>230</wp:post_id>
		<wp:post_date>2009-07-08 17:13:00</wp:post_date>
		<wp:post_date_gmt>2009-07-08 06:13:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>java-concurrency-and-scala-links</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="java"><![CDATA[Java]]></category>
		<category domain="category" nicename="scala"><![CDATA[Scala]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_blog</wp:meta_key>
			<wp:meta_value><![CDATA[jeff.familyyu.net]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_author</wp:meta_key>
			<wp:meta_value><![CDATA[Jeff Yu   (余昌)]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_429d160645182d8e72b48e90f5e50eb3_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[3208478970542408303]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Fedora environment setting.</title>
		<link>http://jeff.familyyu.net/2009/07/08/fedora-environment-setting/</link>
		<pubDate>Wed, 08 Jul 2009 08:42:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang.wordpress.com/2009/07/08/fedora-environment-setting</guid>
		<description></description>
		<content:encoded><![CDATA[I still recalled that when I used the Ubuntu, I put all of my environment variables, like JAVA_HOME et al in the .bash_profile file, and if I want to make it effect, I am running the:

source .bash_profile

But in Fedora, I couldn't make it effect unless I do the logout &amp; login.
And then searched on the google, it turns out the people would do as following:

put all of environment setting in the .bashrc file, and then if you update it, try to

source .bash_profile

It will make all of updates effective.

I tried it, it works as it was told. So, now I changed my habit, put the environment setting to the .bashrc file.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>231</wp:post_id>
		<wp:post_date>2009-07-08 19:42:00</wp:post_date>
		<wp:post_date_gmt>2009-07-08 08:42:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>fedora-environment-setting</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="fedora"><![CDATA[Fedora]]></category>
		<category domain="category" nicename="os"><![CDATA[OS]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_blog</wp:meta_key>
			<wp:meta_value><![CDATA[jeff.familyyu.net]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_author</wp:meta_key>
			<wp:meta_value><![CDATA[Jeff Yu   (余昌)]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_429d160645182d8e72b48e90f5e50eb3_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[8081369052787958708]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_efficient_related_posts</wp:meta_key>
			<wp:meta_value><![CDATA[a:10:{i:0;a:4:{s:2:"ID";s:3:"264";s:10:"post_title";s:47:"Install VirtualBox and Chrome beta in Fedora 10";s:7:"matches";s:1:"1";s:9:"permalink";s:84:"http://jeff.familyyu.net/2009/12/12/install-virtualbox-and-chrome-beta-in-fedora-10/";}i:1;a:4:{s:2:"ID";s:3:"228";s:10:"post_title";s:40:"Fedora 10 使用NetworkManager配置ADSL";s:7:"matches";s:1:"1";s:9:"permalink";s:101:"http://jeff.familyyu.net/2009/06/03/fedora-10-%e4%bd%bf%e7%94%a8networkmanager%e9%85%8d%e7%bd%aeadsl/";}i:2;a:4:{s:2:"ID";s:3:"220";s:10:"post_title";s:45:"How to fix "Lock Assertion Failure" in Fedora";s:7:"matches";s:1:"1";s:9:"permalink";s:80:"http://jeff.familyyu.net/2008/10/08/how-to-fix-lock-assertion-failure-in-fedora/";}i:3;a:4:{s:2:"ID";s:3:"207";s:10:"post_title";s:28:"Install Firefox3 in Fedora8.";s:7:"matches";s:1:"1";s:9:"permalink";s:64:"http://jeff.familyyu.net/2008/06/18/install-firefox3-in-fedora8/";}i:4;a:4:{s:2:"ID";s:3:"205";s:10:"post_title";s:37:"Fedora8 in Lenovo T61P with Projector";s:7:"matches";s:1:"1";s:9:"permalink";s:74:"http://jeff.familyyu.net/2008/06/17/fedora8-in-lenovo-t61p-with-projector/";}i:5;a:4:{s:2:"ID";s:3:"203";s:10:"post_title";s:44:"Postgresql installation/connection in Fedora";s:7:"matches";s:1:"1";s:9:"permalink";s:80:"http://jeff.familyyu.net/2008/05/19/postgresql-installationconnection-in-fedora/";}i:6;a:4:{s:2:"ID";s:3:"202";s:10:"post_title";s:34:"Using wireless in Fedora8 for T61P";s:7:"matches";s:1:"1";s:9:"permalink";s:71:"http://jeff.familyyu.net/2008/05/05/using-wireless-in-fedora8-for-t61p/";}i:7;a:4:{s:2:"ID";s:3:"201";s:10:"post_title";s:26:"My Fedora8 Roadmap on T61P";s:7:"matches";s:1:"1";s:9:"permalink";s:63:"http://jeff.familyyu.net/2008/05/01/my-fedora8-roadmap-on-t61p/";}i:8;a:4:{s:2:"ID";s:3:"200";s:10:"post_title";s:34:"Dell D820 and Lenovo ThinkPad T61P";s:7:"matches";s:1:"1";s:9:"permalink";s:71:"http://jeff.familyyu.net/2008/05/01/dell-d820-and-lenovo-thinkpad-t61p/";}i:9;a:4:{s:2:"ID";s:3:"199";s:10:"post_title";s:30:"Open source business in Redhat";s:7:"matches";s:1:"1";s:9:"permalink";s:67:"http://jeff.familyyu.net/2008/04/22/open-source-business-in-redhat/";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_relation_threshold</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Getting Started with jBPM 4.0 - (Part I )</title>
		<link>http://jeff.familyyu.net/2009/07/11/getting-started-with-jbpm-4-0-part-i/</link>
		<pubDate>Sat, 11 Jul 2009 11:08:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang.wordpress.com/2009/07/11/getting-started-with-jbpm-4-0-part-i</guid>
		<description></description>
		<content:encoded><![CDATA[<a href="http://processdevelopments.blogspot.com/2009/07/jbpm-40-is-out.html">jBPM 4.0 was out</a> yesterday, so I played it with a simple example, also include installing the eclipse plugin, and see the jbpm console, which I haven't tried them out before, to get a feeling about them. Below are the steps that I did, hopefully you find it helpful for you to get started.

<span style="text-decoration: underline;">Install jBPM and JBoss</span>

1. Download the <a href="http://sourceforge.net/projects/jbpm/files/a%29%20jBPM%204/jbpm-4.0.zip/download">jbpm 4.0 distribution</a>.
2. Extract it into your local directory, here mine is: /local/deploy
3. Go to jbpm-4.0/jboss.
4. Added the build.properties into ${user.home}/.jbpm4 directory if you want to update the default properties in the ant script. (below is what I did, I used the jboss-5.0.1.GA, and I already had the zip ball in the /local/softwares directory)
<pre>database=hsqldbjboss.version=5.0.1.GAjbpm.parent.dir=/local/deployjboss.distro.dir=/local/softwares</pre>
You can refer to <a href="http://www.jboss.org/community/wiki/jBPM4BuildingfromSource">this wiki entry</a> for detail.
5. run following command to install jboss &amp; jbpm.
<pre>ant install.jbossant install.jbpm.into.jboss</pre>
Now, you go to the jbpm-4.0/jboss-5.0.1.GA, run:
bin/run.sh -c default.

It should start the jbpm server properly, later then we need to populate the schema &amp; initialized sqls.

<span style="text-decoration: underline;">Import jBPM db schema and identity sql</span>

1. Go to jBPM-4.0/db, run following command to populate the schema &amp; sql.
<pre>ant create.jbpm.schemaant load.example.identities</pre>
Now, you can go to http://localhost:8080/jbpm-console, use the 'alex/password' as the username and password combination, you should be able to log in the jbpm console.

<span style="text-decoration: underline;">Install the jBPM eclipse plugin</span>

I won't described the steps for its installation, as it was very well documented in the <a href="http://docs.jboss.com/jbpm/v4.0/userguide/html_single/#graphicalprocessdesigner">user guide</a>.
<span style="color: #ff0000;">Note, it was based on the eclipse 3.5 jee distribution.</span>

In the next entry, we will try to build a simple process by using the Eclipse GUI.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>232</wp:post_id>
		<wp:post_date>2009-07-11 22:08:00</wp:post_date>
		<wp:post_date_gmt>2009-07-11 11:08:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>getting-started-with-jbpm-4-0-part-i</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="bpm"><![CDATA[BPM]]></category>
		<category domain="category" nicename="jboss"><![CDATA[JBoss]]></category>
		<category domain="post_tag" nicename="jbpm"><![CDATA[jBPM]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_blog</wp:meta_key>
			<wp:meta_value><![CDATA[jeff.familyyu.net]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_author</wp:meta_key>
			<wp:meta_value><![CDATA[Jeff Yu   (余昌)]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_429d160645182d8e72b48e90f5e50eb3_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[3318396154872647471]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_efficient_related_posts</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{i:0;a:4:{s:2:"ID";s:3:"243";s:10:"post_title";s:38:"jBPM 4.0 restful service introduction.";s:7:"matches";s:1:"1";s:9:"permalink";s:74:"http://jeff.familyyu.net/2009/08/08/jbpm-4-0-restful-service-introduction/";}i:1;a:4:{s:2:"ID";s:3:"239";s:10:"post_title";s:21:"Updates on JBoss ESB.";s:7:"matches";s:1:"1";s:9:"permalink";s:57:"http://jeff.familyyu.net/2009/07/22/updates-on-jboss-esb/";}i:2;a:4:{s:2:"ID";s:3:"236";s:10:"post_title";s:39:"Getting Started with jBPM 4.0 (Part IV)";s:7:"matches";s:1:"1";s:9:"permalink";s:74:"http://jeff.familyyu.net/2009/07/19/getting-started-with-jbpm-4-0-part-iv/";}i:3;a:4:{s:2:"ID";s:3:"234";s:10:"post_title";s:40:"Getting Started with jBPM 4.0 (Part III)";s:7:"matches";s:1:"1";s:9:"permalink";s:75:"http://jeff.familyyu.net/2009/07/12/getting-started-with-jbpm-4-0-part-iii/";}i:4;a:4:{s:2:"ID";s:3:"233";s:10:"post_title";s:39:"Getting Started with jBPM 4.0 (Part II)";s:7:"matches";s:1:"1";s:9:"permalink";s:74:"http://jeff.familyyu.net/2009/07/12/getting-started-with-jbpm-4-0-part-ii/";}i:5;a:4:{s:2:"ID";s:3:"229";s:10:"post_title";s:27:"jBPM4.0 framework exploring";s:7:"matches";s:1:"1";s:9:"permalink";s:64:"http://jeff.familyyu.net/2009/06/29/jbpm4-0-framework-exploring/";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_relation_threshold</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Getting Started with jBPM 4.0 (Part II)</title>
		<link>http://jeff.familyyu.net/2009/07/12/getting-started-with-jbpm-4-0-part-ii/</link>
		<pubDate>Sun, 12 Jul 2009 00:40:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang.wordpress.com/2009/07/12/getting-started-with-jbpm-4-0-part-ii</guid>
		<description></description>
		<content:encoded><![CDATA[In this blog entry, we are going to use the eclipse GUI to build a helloworld process, and then write a unit test to verify the process.

Firstly, I assumed that you've successfully installed the eclipse GUI, if you haven't done so, please refer to the <a href="http://jeffyuchang.blogspot.com/2009/07/getting-started-with-jbpm-40.html">first Part blog entry</a>.

<span style="text-decoration: underline;"> Create Project and Process Definition</span>

Then, we will create a java project, I used the following project layout(maven way).
<a href="http://jeff.familyyu.net/wp-content/uploads/2011/01/jbpm-helloworld-layout1.gif?w=300"><img src="http://jeff.familyyu.net/wp-content/uploads/2011/01/jbpm-helloworld-layout1.gif?w=300" border="0" alt="" /></a>
we will put the process definition file into the main/resource folder, and the test case &amp; its resources in the src/test folder.

In this helloworld process, we will do the following process scenario.
we will have a 'java node', to make a request, and then we add the 'review task node', and then if it is 'approved', it will lead to the 'audit state node'.  Of course, we will include the 'start' and the 'end' node in this process, so the finished process image would be like:

<a href="http://jeff.familyyu.net/wp-content/uploads/2011/01/jbpm-helloworld-process.gif"><img src="http://jeff.familyyu.net/wp-content/uploads/2011/01/jbpm-helloworld-process.gif?w=300" border="0" alt="" /></a>

In this process definition, we are using a java node to be the 'request' node, its java code as following:

[java]
package org.jbpm.helloworld;

public class Println {

public void request() {
    System.out.println(&quot;--------------------&quot;);
    System.out.println(&quot;Made a request.....&quot;);
    System.out.println(&quot;---------------------&quot;);
}
}
[/java]


The process definition xml is as following:

[xml]
&lt;process name=&quot;helloworld&quot; xmlns=&quot;http://jbpm.org/4.0/jpdl&quot;&gt;
&lt;start  name=&quot;start&quot;&gt;
  &lt;transition  name=&quot;to request&quot; to=&quot;request&quot;/&gt;
&lt;/start&gt;
&lt;end  name=&quot;end&quot;/&gt;
&lt;java class=&quot;org.jbpm.helloworld.Println&quot;  method=&quot;request&quot; name=&quot;request&quot;&gt;
  &lt;transition  name=&quot;to review&quot; to=&quot;review&quot;/&gt;
&lt;/java&gt;
&lt;task assignee=&quot;alex&quot;  name=&quot;review&quot;&gt;
  &lt;transition  name=&quot;approved&quot; to=&quot;audit&quot;/&gt;
&lt;/task&gt;
&lt;state  name=&quot;audit&quot;&gt;
  &lt;transition  name=&quot;to end&quot; to=&quot;end&quot;/&gt;
&lt;/state&gt;
&lt;/process&gt;
[/xml]


The xml itself is very easy to understand, you might notice that 'g' attribute in your process definition file, that is only used by the Eclipse GUI.

&nbsp;

<span style="text-decoration: underline;"> Verify the process </span>

Once we've finished the process, we want to verify whether it is as same as we expected, with the jBPM 4.0, it is very easy for us to verify it, without deploying it into the container.

With the following 2 steps, we can easily test the process by using API.
Because the jbpm.jar doesn't include the jbpm.hibernte.cfg.xml and jbpm.cfg.xml, we need to configure it by ourselves for the test purpose. (However, The deployed jbpm in JBoss container has these two files by default)
<ol>
	<li>Add the jbpm.hibernate.cfg.xml and jbpm.cfg.xml.</li>
we put these two files into the src/test/resource folder.
the jbpm.hibernate.cfg.xml would be like as following:

[xml]
&lt;hibernate-configuration&gt;
 &lt;session-factory&gt;
    &lt;property name=&quot;hibernate.dialect&quot;&gt;org.hibernate.dialect.HSQLDialect&lt;/property&gt;
    &lt;property name=&quot;hibernate.connection.driver_class&quot;&gt;org.hsqldb.jdbcDriver&lt;/property&gt;
    &lt;property name=&quot;hibernate.connection.url&quot;&gt;jdbc:hsqldb:mem:.&lt;/property&gt;
    &lt;property name=&quot;hibernate.connection.username&quot;&gt;sa&lt;/property&gt;
    &lt;property name=&quot;hibernate.connection.password&quot;&gt;&lt;/property&gt;
    &lt;property name=&quot;hibernate.hbm2ddl.auto&quot;&gt;create-drop&lt;/property&gt;
    &lt;property name=&quot;hibernate.format_sql&quot;&gt;true&lt;/property&gt;

    &lt;mapping resource=&quot;jbpm.repository.hbm.xml&quot; /&gt;
    &lt;mapping resource=&quot;jbpm.execution.hbm.xml&quot; /&gt;
    &lt;mapping resource=&quot;jbpm.history.hbm.xml&quot; /&gt;
    &lt;mapping resource=&quot;jbpm.task.hbm.xml&quot; /&gt;
    &lt;mapping resource=&quot;jbpm.identity.hbm.xml&quot; /&gt;

 &lt;/session-factory&gt;
&lt;/hibernate-configuration&gt;
[/xml]


and here it is the jbpm.cfg.xml:
[xml]
&lt;jbpm-configuration&gt;
 &lt;import resource=&quot;jbpm.default.cfg.xml&quot; /&gt;
 &lt;import resource=&quot;jbpm.tx.hibernate.cfg.xml&quot; /&gt;
 &lt;import resource=&quot;jbpm.jpdl.cfg.xml&quot; /&gt;
 &lt;import resource=&quot;jbpm.identity.cfg.xml&quot; /&gt;
&lt;/jbpm-configuration&gt;
[/xml]


&nbsp;
	<li>Write the test case, which extends the JbpmTestCase</li>
Now, we are ready to write the process unit test.

[java]
public class ProcessTest extends JbpmTestCase {
String deploymentId;


public void setUp() throws Exception {
 super.setUp();
 deploymentId = repositoryService.createDeployment()
     .addResourceFromClasspath(&quot;helloworld.jpdl.xml&quot;)
     .deploy();
}

public void testProcess() throws Exception {
 ProcessInstance instance = executionService.startProcessInstanceByKey(&quot;helloworld&quot;);
 String pid = instance.getId();

 assertTrue(instance.isActive(&quot;review&quot;));

 List tasks = taskService.findPersonalTasks(&quot;alex&quot;);
 Task task = tasks.get(0);
 taskService.completeTask(task.getId(), &quot;approved&quot;);

 instance = executionService.findProcessInstanceById(pid);
 String exeId = instance.findActiveExecutionIn(&quot;audit&quot;).getId();
 executionService.signalExecutionById(exeId, &quot;to end&quot;);

 HistoryProcessInstance historyInstance = historyService.createHistoryProcessInstanceQuery()
          .processInstanceId(pid).uniqueResult();
 assertEquals(&quot;ended&quot;, historyInstance.getState());
}

public void tearDown() throws Exception {
 repositoryService.deleteDeploymentCascade(deploymentId);
 super.tearDown();
}
[/java]


1) we used the repositoryService to deploy our process file.
2) we used the executionService to start the process.
3) after it starts, it should be at the 'review' task node.
4) used the taskService to get the specific task, and complete the task.
5) once it completes, it should be at the 'audit' task, as it is a wait state.
6) use the executionService.signal method to proceed the process, it goes to the 'end', which means the process should be ended.
7) use the historyService to check whether the process is ended or not. Please noted that in the jBPM 4.0, the finished process instance was stored in a separate db table, so you can't use the executionService API to look for the finished process instances.</ol>
The process unit test should be passed with green in Junit, and the console output is like:

Jul 12, 2009 11:08:17 AM org.hibernate.tool.hbm2ddl.SchemaExport execute
INFO: schema export complete
--------------------
Made a request.....
---------------------

So, that is it, you've already built an process, and verify it. It is simple, isn't it? ;-)

In next entry, I will try to deploy our process into the jBPM server.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>233</wp:post_id>
		<wp:post_date>2009-07-12 11:40:00</wp:post_date>
		<wp:post_date_gmt>2009-07-12 00:40:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>getting-started-with-jbpm-4-0-part-ii</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="bpm"><![CDATA[BPM]]></category>
		<category domain="category" nicename="java"><![CDATA[Java]]></category>
		<category domain="category" nicename="jboss"><![CDATA[JBoss]]></category>
		<category domain="post_tag" nicename="jbpm"><![CDATA[jBPM]]></category>
		<wp:postmeta>
			<wp:meta_key>blogger_blog</wp:meta_key>
			<wp:meta_value><![CDATA[jeff.familyyu.net]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_author</wp:meta_key>
			<wp:meta_value><![CDATA[Jeff Yu   (余昌)]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_429d160645182d8e72b48e90f5e50eb3_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[7070338884064611421]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_efficient_related_posts</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{i:0;a:4:{s:2:"ID";s:3:"243";s:10:"post_title";s:38:"jBPM 4.0 restful service introduction.";s:7:"matches";s:1:"1";s:9:"permalink";s:74:"http://jeff.familyyu.net/2009/08/08/jbpm-4-0-restful-service-introduction/";}i:1;a:4:{s:2:"ID";s:3:"239";s:10:"post_title";s:21:"Updates on JBoss ESB.";s:7:"matches";s:1:"1";s:9:"permalink";s:57:"http://jeff.familyyu.net/2009/07/22/updates-on-jboss-esb/";}i:2;a:4:{s:2:"ID";s:3:"236";s:10:"post_title";s:39:"Getting Started with jBPM 4.0 (Part IV)";s:7:"matches";s:1:"1";s:9:"permalink";s:74:"http://jeff.familyyu.net/2009/07/19/getting-started-with-jbpm-4-0-part-iv/";}i:3;a:4:{s:2:"ID";s:3:"234";s:10:"post_title";s:40:"Getting Started with jBPM 4.0 (Part III)";s:7:"matches";s:1:"1";s:9:"permalink";s:75:"http://jeff.familyyu.net/2009/07/12/getting-started-with-jbpm-4-0-part-iii/";}i:4;a:4:{s:2:"ID";s:3:"232";s:10:"post_title";s:41:"Getting Started with jBPM 4.0 - (Part I )";s:7:"matches";s:1:"1";s:9:"permalink";s:73:"http://jeff.familyyu.net/2009/07/11/getting-started-with-jbpm-4-0-part-i/";}i:5;a:4:{s:2:"ID";s:3:"229";s:10:"post_title";s:27:"jBPM4.0 framework exploring";s:7:"matches";s:1:"1";s:9:"permalink";s:64:"http://jeff.familyyu.net/2009/06/29/jbpm4-0-framework-exploring/";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_relation_threshold</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>82</wp:comment_id>
			<wp:comment_author><![CDATA[showmanlkz]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.blogger.com/profile/15044486265936288561</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2009-07-20 16:52:57</wp:comment_date>
			<wp:comment_date_gmt>2009-07-20 05:52:57</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Great post.. help me out a lot!But a question about the test iswhy need to obtain an instance twice if we are dealing with the same instance???]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>83</wp:comment_id>
			<wp:comment_author><![CDATA[Jeff Yu (余昌)]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.blogger.com/profile/09118191450334995303</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2009-07-20 20:10:33</wp:comment_date>
			<wp:comment_date_gmt>2009-07-20 09:10:33</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Good question.At first I thought we can reuse the process instance, but the fact is because we update the process underlie, you can image the data in database is updated, but it didn&#039;t reflect on the process instance, as we got it earlier, that is why I need to get the same instance twice.ThanksJeff]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>84</wp:comment_id>
			<wp:comment_author><![CDATA[Amnet]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.blogger.com/profile/05419001862744437824</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2009-07-23 12:05:43</wp:comment_date>
			<wp:comment_date_gmt>2009-07-23 01:05:43</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Jeff, i have a problem with the test:log4j:WARN No appenders could be found for logger (org.jbpm.test.BaseJbpmTestCase).log4j:WARN Please initialize the log4j system properly.I put a copy of log4j.xml in my classpath but I get the same error]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>85</wp:comment_id>
			<wp:comment_author><![CDATA[Jeff Yu (余昌)]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.blogger.com/profile/09118191450334995303</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2009-07-23 19:57:48</wp:comment_date>
			<wp:comment_date_gmt>2009-07-23 08:57:48</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[IIRC, there is a logging configuration section in the userguide document, you can refer to it for its configuration detail.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>86</wp:comment_id>
			<wp:comment_author><![CDATA[Mark Mc]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.blogger.com/profile/08998274939198160907</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2010-10-08 04:15:57</wp:comment_date>
			<wp:comment_date_gmt>2010-10-07 17:15:57</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I get the following error &quot;The type List is not generic; it cannot be parameterized with arguments &quot; on the List tasks = taskService.findPersonalTasks(&quot;alex&quot;); linecan you help me ? just learningMark Mc.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Getting Started with jBPM 4.0 (Part III)</title>
		<link>http://jeff.familyyu.net/2009/07/12/getting-started-with-jbpm-4-0-part-iii/</link>
		<pubDate>Sun, 12 Jul 2009 06:12:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang.wordpress.com/2009/07/12/getting-started-with-jbpm-4-0-part-iii</guid>
		<description></description>
		<content:encoded><![CDATA[In this entry, we are going to deploy the built process definition into jBPM server. Basically, we need to deploy two artifacts, one is the process definition file, which is archived as .bar file, the other is the classes file that will be needed.

<span style="text-decoration: underline;">Deploy the process definition into jBPM server </span>

jBPM offer its ant jBPM deploy task out of box, the example also uses this way to deploy the process definiton, the other way to do it is to move this .bar file to the jboss deploy folder directly, it will be pick up and deployed into db as well, thanks to the jBPM deployer that leverage JBoss AS 5  deployer framework.

In order to use both these ways, we will add the build.xml to help us do the bar, jar build work.

below is the code snippet from the build.xml.

[xml]
&lt;target name=&quot;jar&quot; depends=&quot;init&quot;&gt;
&lt;mkdir dir=&quot;${basedir}/target/classes&quot; /&gt;
&lt;javac srcdir=&quot;${basedir}/src/main/java&quot;
destdir=&quot;${basedir}/target/classes&quot;
classpathref=&quot;classpath.lib&quot; /&gt;
&lt;jar destfile=&quot;${basedir}/target/helloworld.jar&quot; &gt;
&lt;fileset dir=&quot;${basedir}/target/classes&quot;&gt;
&lt;include name=&quot;**/*.class&quot; /&gt;
&lt;/fileset&gt;
&lt;/jar&gt;
&lt;/target&gt;


&lt;target name=&quot;bar&quot; depends=&quot;init&quot;&gt;
&lt;jar destfile=&quot;${basedir}/target/helloworld.bar&quot;&gt;
&lt;fileset dir=&quot;${basedir}/src/main/resources&quot;&gt;
&lt;include name=&quot;*.jpdl.xml&quot;/&gt;
&lt;/fileset&gt;
&lt;/jar&gt;
&lt;/target&gt;
[/xml]


we will look into both two deployment ways, one is using ant task, the other is using jBPM deployer, the underlie is the same, it is using the RepositoryService to do the deployment work.

&nbsp;

1. using jBPM deployer.

[xml]
&lt;target name=&quot;deploy&quot; description=&quot;deploys the business archives into jboss&quot;
    depends=&quot; jar,bar&quot;&gt;
&lt;mkdir dir=&quot;${jboss.server.config.dir}/deploy/jbpm/userlibs&quot;/&gt;
&lt;copy file=&quot;${basedir}/target/helloworld.bar&quot;
todir=&quot;${jboss.server.config.dir}/deploy/jbpm/userlibs&quot;
overwrite=&quot;true&quot; /&gt;
&lt;copy file=&quot;${basedir}/target/helloworld.jar&quot;
todir=&quot;${jboss.server.config.dir}/deploy/jbpm/userlibs&quot;
overwrite=&quot;true&quot; /&gt;
&lt;/target&gt;
[/xml]


2. Use the jBPM deployer ANT task.

[xml]
&lt;target name=&quot;jbpm.deploy&quot;
description=&quot;deploys the business archives&quot;
depends=&quot; jar, bar&quot;&gt;
&lt;copy file=&quot;${jbpm.home}/db/hibernate.cfg/${database}.hibernate.cfg.xml&quot;
tofile=&quot;${basedir}/target/classes/jbpm.hibernate.cfg.xml&quot;
overwrite=&quot;true&quot;&gt;
&lt;filterset filtersfile=&quot;${jbpm.home}/db/jdbc/${database}.properties&quot; /&gt;
&lt;/copy&gt;
&lt;copy file=&quot;${basedir}/src/test/resources/jbpm.cfg.xml&quot;
   tofile=&quot;${basedir}/target/classes/jbpm.cfg.xml&quot;
/&gt;
&lt;taskdef name=&quot;jbpm-deploy&quot;
  classname=&quot;org.jbpm.pvm.internal.ant.JbpmDeployTask&quot;
classpathref=&quot;classpath.lib&quot; /&gt;
&lt;jbpm-deploy file=&quot;${basedir}/target/helloworld.bar&quot; /&gt;


&lt;mkdir dir=&quot;${jboss.server.config.dir}/deploy/jbpm/userlibs&quot; /&gt;
&lt;copy file=&quot;${basedir}/target/helloworld.jar&quot;
todir=&quot;${jboss.server.config.dir}/deploy/jbpm/userlibs&quot;
overwrite=&quot;true&quot; /&gt;
&lt;/target&gt;
[/xml]


<span style="color: #3366ff;">Note</span>: The jBPM server needs to be up and running, and then you deploy the process archive into server through either way.

&nbsp;

<span style="text-decoration: underline;">jBPM console tour </span>

After we deployed our process, we will use the console to see the process information etc.

Let's login http://localhost:8080/jbpm-console, with the 'alex/password' combination, it will direct us to the console homepage, as following page.
<a href="http://jeff.familyyu.net/wp-content/uploads/2011/01/console-homepage.gif"><img src="http://jeff.familyyu.net/wp-content/uploads/2011/01/console-homepage.gif?w=286" border="0" alt="" /></a>

Click the 'Runtime' tab from the left menu panel, we can see the 'Deployments' and 'Jobs' links. Click the 'Deployments', we can see the helloworld.bar that we just deployed.
<a href="http://jeff.familyyu.net/wp-content/uploads/2011/01/console-deployments.gif"><img src="http://jeff.familyyu.net/wp-content/uploads/2011/01/console-deployments.gif?w=300" border="0" alt="" /></a>

Click the 'Processes' tab from the left menu panel, we can see the 'Definition List' link, click it, it will show us all of the process definitions as following.
<a href="http://jeffyuchang.files.wordpress.com/2009/07/console-process.gif"><img src="http://jeffyuchang.files.wordpress.com/2009/07/console-process.gif?w=300" border="0" alt="" /></a>

Click the 'Process Instances' tab from the right area, click the 'start' button, which will start the process definition, its instace detail looks like:
<a href="http://jeffyuchang.files.wordpress.com/2009/07/console-start-process-detail.gif"><img src="http://jeffyuchang.files.wordpress.com/2009/07/console-start-process-detail.gif?w=300" border="0" alt="" /></a>

Also, look on the server's console, you would notice that following lines:

[xml]
17:37:44,566 INFO  [STDOUT] --------------------
17:37:44,567 INFO  [STDOUT] Made a request.....
17:37:44,567 INFO  [STDOUT] ---------------------
[/xml]


So, it means, the started process instance already gone through the java node, and right now is on the 'review' activity node. Remembered that we assigned this task to 'alex' in the process definition, and we login the console by using alex, so we should be able to see this task in the task tab from left panel.

&nbsp;

Click the 'Tasks' -&gt; 'Task Lists' -&gt; 'Personal Tasks', you would see the page as following.
<a href="http://jeffyuchang.files.wordpress.com/2009/07/console-task.gif"><img src="http://jeffyuchang.files.wordpress.com/2009/07/console-task.gif?w=300" border="0" alt="" /></a>

You can view or release this task. Currently, if you click the 'view' button, it will tell you that 'The task doesn't provide a UI'. we haven't added the UI page for this task yet, which we will talk about it in the next entry.

Because this entry is a bit lengthy, I think it is better that I make a summary here. Basically we talked about two ways to deploy the process and its classes into jBPM server, once you've deployed it, you should be able to see as much as information from the jbpm console, which is very fancy, built based on GWT.

In the next entry, I will try to talk about the task form in the console, stay tuned.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>234</wp:post_id>
		<wp:post_date>2009-07-12 17:12:00</wp:post_date>
		<wp:post_date_gmt>2009-07-12 06:12:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>getting-started-with-jbpm-4-0-part-iii</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="bpm"><![CDATA[BPM]]></category>
		<category domain="category" nicename="java"><![CDATA[Java]]></category>
		<category domain="category" nicename="jboss"><![CDATA[JBoss]]></category>
		<category domain="post_tag" nicename="jbpm"><![CDATA[jBPM]]></category>
		<wp:postmeta>
			<wp:meta_key>blogger_blog</wp:meta_key>
			<wp:meta_value><![CDATA[jeff.familyyu.net]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_author</wp:meta_key>
			<wp:meta_value><![CDATA[Jeff Yu   (余昌)]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_429d160645182d8e72b48e90f5e50eb3_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[1924802158090638637]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_efficient_related_posts</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{i:0;a:4:{s:2:"ID";s:3:"243";s:10:"post_title";s:38:"jBPM 4.0 restful service introduction.";s:7:"matches";s:1:"1";s:9:"permalink";s:74:"http://jeff.familyyu.net/2009/08/08/jbpm-4-0-restful-service-introduction/";}i:1;a:4:{s:2:"ID";s:3:"239";s:10:"post_title";s:21:"Updates on JBoss ESB.";s:7:"matches";s:1:"1";s:9:"permalink";s:57:"http://jeff.familyyu.net/2009/07/22/updates-on-jboss-esb/";}i:2;a:4:{s:2:"ID";s:3:"236";s:10:"post_title";s:39:"Getting Started with jBPM 4.0 (Part IV)";s:7:"matches";s:1:"1";s:9:"permalink";s:74:"http://jeff.familyyu.net/2009/07/19/getting-started-with-jbpm-4-0-part-iv/";}i:3;a:4:{s:2:"ID";s:3:"233";s:10:"post_title";s:39:"Getting Started with jBPM 4.0 (Part II)";s:7:"matches";s:1:"1";s:9:"permalink";s:74:"http://jeff.familyyu.net/2009/07/12/getting-started-with-jbpm-4-0-part-ii/";}i:4;a:4:{s:2:"ID";s:3:"232";s:10:"post_title";s:41:"Getting Started with jBPM 4.0 - (Part I )";s:7:"matches";s:1:"1";s:9:"permalink";s:73:"http://jeff.familyyu.net/2009/07/11/getting-started-with-jbpm-4-0-part-i/";}i:5;a:4:{s:2:"ID";s:3:"229";s:10:"post_title";s:27:"jBPM4.0 framework exploring";s:7:"matches";s:1:"1";s:9:"permalink";s:64:"http://jeff.familyyu.net/2009/06/29/jbpm4-0-framework-exploring/";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_relation_threshold</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>87</wp:comment_id>
			<wp:comment_author><![CDATA[PUCIT ONLINE]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.blogger.com/profile/15702140469208662212</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2009-07-17 17:29:11</wp:comment_date>
			<wp:comment_date_gmt>2009-07-17 06:29:11</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Awesome JBPM4 Series. I really like your post about newly JBPM4. But I have issues integrating GPD, JPDL Editor into my IDE, I have download MyEclipse 7.5 and 7 but in both it failed.Then I downloaded Simple Eclipse 3.5 and it also failed to integrate.Can you please give a post about successfully integrating with MyEclipse anyversion because we mostly working on it not simple Eclipse.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>88</wp:comment_id>
			<wp:comment_author><![CDATA[Jeff Yu (余昌)]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.blogger.com/profile/09118191450334995303</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2009-07-19 17:31:49</wp:comment_date>
			<wp:comment_date_gmt>2009-07-19 06:31:49</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I am glad that you like this series.With regard to the GPD and MyEclipse, I haven&#039;t ever used myeclipse,  because it is not open source. So I can&#039;t offer any suggestions on this one. For the eclipse 3.5, you need to download the jee distribution, not the classic one, again, it is very well documented in the jbpm4 user guide, you can refer to it for detail.ThanksJeff]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>89</wp:comment_id>
			<wp:comment_author><![CDATA[Anonymous]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://Anonymousnoreply@blogger.com</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2009-08-28 23:43:33</wp:comment_date>
			<wp:comment_date_gmt>2009-08-28 12:43:33</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks for the nice blog to get familiar with jbpm4.0...The process runs well, but we have a problem with the server&#039;s console output. The STDOUT statements in the messages view are not printed. Is it necessary to configure additional property-files to see the output of the process? Or isn&#039;t the messages view the same view as the screenshot of the tutorial?Regards,Sascha]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>90</wp:comment_id>
			<wp:comment_author><![CDATA[Jace]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.blogger.com/profile/04943406880511315229</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2009-11-19 23:06:20</wp:comment_date>
			<wp:comment_date_gmt>2009-11-19 12:06:20</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi Jeff,Thanks for this - very useful! I&#039;ve just started researching jBPM and got really confused at the fact my java tasks weren&#039;t executing. Turns out that although I was deploying the .bar file I hadn&#039;t updated the classes in the containers lib area (in my case tomcat). This is more than likely Sascha&#039;s problem (comment above). But it isn&#039;t clear  in the jBPM console that it can&#039;t find the class your task references - other than the process is stuck. Is this normal or am I missing something?CheersJace]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>91</wp:comment_id>
			<wp:comment_author><![CDATA[Jeff Yu (余昌)]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.blogger.com/profile/09118191450334995303</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2009-11-25 18:38:08</wp:comment_date>
			<wp:comment_date_gmt>2009-11-25 07:38:08</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi Jace &amp; Sascha,I haven&#039;t checked the jBPM 4 for a while, so there might be some update on the console, i mean, like in jBPM 4.2 release.so maybe you can direct this question into the user forum, otherwise, you might wait for a couple days that I find a time to test them against the jBPM 4.2 + tomcat.sorry about this.RegardsJeff]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>92</wp:comment_id>
			<wp:comment_author><![CDATA[Anonymous]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://Anonymousnoreply@blogger.com</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2010-03-02 18:22:11</wp:comment_date>
			<wp:comment_date_gmt>2010-03-02 07:22:11</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[ ... ] link is being shared on Twitter right now. @zenx, an influential author, said RT @1ndus: Xtreme [ ... ] ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>浅谈ws-security: 加密,签名,证书等</title>
		<link>http://jeff.familyyu.net/2009/07/14/%e6%b5%85%e8%b0%88ws-security-%e5%8a%a0%e5%af%86%e7%ad%be%e5%90%8d%e8%af%81%e4%b9%a6%e7%ad%89/</link>
		<pubDate>Tue, 14 Jul 2009 03:28:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang.wordpress.com/2009/07/14/%e6%b5%85%e8%b0%88ws-security-%e5%8a%a0%e5%af%86%e7%ad%be%e5%90%8d%e8%af%81%e4%b9%a6%e7%ad%89</guid>
		<description></description>
		<content:encoded><![CDATA[我们这个贴子所谈的,可以说是一个普遍的Security问题,不过因为我在做SOA的东西,所以就想从web service security的角度来探讨一下.必须声明的是,我并不是在解读 <a href="http://www.oasis-open.org/committees/tc_home.php?wg_abbrev=wss">ws-security</a> 规范, 从某种意义上来说,是在学习Java Security.

从web service的应用场景来说, 要从endpoint A 发送 SOAP message 到 endpoint B. 一般情况下, 如果我们要保证这个soap message信息的安全,主要会从以下三个方面来考虑,阐述.
<ol>
	<li>保密性(Confidentiality)</li>
	<li>完整性(Integrity)</li>
	<li>真实性(Authenticity)</li>
</ol>
我们接下来挨个来看下,是怎么满足这三个需求的,以及在JDK中,分别提供了什么样的API来于之对应.

1.<span style="text-decoration: underline;"> 保密性(Confidentiality)</span>

从大的分类来看,我们有两大种加密技术,分别是对称加密(symmetric encryption)和非对称加密(asymmetric encryption).

1.1 <span style="text-decoration: underline;">对称加密(symmetric encryption)</span>
对称加密是一个比较早的一种加密方式.比如说Alice要发送一个消息跟Bob,那么他们之前就应该说定了一个secret key,然后Alice把信息用这个secret key进行加密. 当信息到达Bob的时候, Bob再利用这个secret key来把它解密.
这种加密方式,可以是对每个bit进行加密,也可以是对block(chunk of bit, 比如64-bit)进行加密. 如果在是选择block加密的话,就得有一个补足(Padding)的概念,就比如说不够64-bit,你用0或者其他的来补足成一个block.
在Java中, Cipher类是负责加密,解密的.在对称加密中,需要以下三个属性.
1) 加密模式, 比如(ECB -Encryption Code Book, CBC, CFB, OFB, PCBC)
2) 加密算法, 比如(DES- Data Encryption Standard, TripleDES, AES, RC2, RC4, RC5, Blowfish, PBE)
3) 补足方式, 比如(No padding, PKCS5, OAEP, SSL3)

我们下面这个例子就是使用Java的Cipher类来加密.

[java]
KeyGenerator keygen = KeyGenerator.getInstance(&quot;DES&quot;);
keygen.init(56);
SecretKey key = keygen.generateKey();


Cipher cipher = Cipher.getInstance(&quot;DES/ECB/PKCS5Padding&quot;);
cipher.init(Cipher.ENCRYPT_MODE, key);

byte[] cipherText = cipher.doFinal(&quot;This is clear text&quot;.getBytes(&quot;UTF-8&quot;));

cipher.init(Cipher.DECRYPT_MODE, key);
byte[] clearText = cipher.doFinal(cipherText);
[/java]


先是生成一个56的DES的加密钥匙, 然后采用DES算法, ECB加密模式, PKCS5Padding补足方式来加密.

&nbsp;

1.2 <span style="text-decoration: underline;">非对称加密(Asymmetric Encryption)</span>
对称加密存在的一个主要问题在于怎么安全的配发这个密钥给Alice和Bob呢?所以,我们后来引入了这个非对称加密,可以说现在这个是一个很普遍的加密方法.
非对称加密主要是他有两把钥匙, 公钥(Public Key)和私钥(Private Key),这两把钥匙是配对的. 一样的情况, Alice想发送信息给Bob, 那么流程就如下:
<pre>Alice使用Bob的公钥加密信息 -&gt; 加密过的信息 -&gt;Bob用他自己的私钥解密.</pre>
这种情况下,大家只需要把公钥放在一个信任的机构(CA,例如Verisign),把私钥保留在自己手上,那么就解决了对称加密中密钥的配发问题.当然了,这个非对称加密的伟大之处还在于如果你没有私钥,至少在你的有生之年是无法破解的.
非对称加密的算法主要有两种: RSA 和 Diffie-Hellman. RSA是最为广泛使用的一种加密算法.
相对应的,我们就得使用keypair来加密解密,代码如下:

[java]
KeyPairGenerator keyGen = KeyPairGenerator.getInstance(&quot;RSA&quot;);
keyGen.initialize(1024);
KeyPair keypair = keyGen.generateKeyPair();


Cipher cipher = Cipher.getInstance(&quot;RSA/ECB/PKCS1Padding&quot;);
cipher.init(Cipher.ENCRYPT_MODE, keypair.getPublic());

byte[] cipherText = cipher.doFinal(&quot;This is clear text&quot;.getBytes(&quot;UTF-8&quot;));

cipher.init(Cipher.DECRYPT_MODE, keypair.getPrivate());
byte[] clearText = cipher.doFinal(cipherText);
[/java]


不同的是,我们用公钥加密,然后用私钥来解密. 当然了,我们也可以用私钥加密,然后公钥来解密,这在我们后面的数字签名中会用到.

&nbsp;

2. <span style="text-decoration: underline;">完整性(Integrity)</span>

我们可以用加密的手段对信息进行了加密,那么保证这个信息的明文不会被其他人看到,但是我们怎么来保证说这个发过来的信息就是完整的呢?
那么我们这里就因为一个叫信息摘要(Message Digest)的概念,所谓的信息摘要就是说用一个摘要算法,把信息生成一串字符,可以算是信息的足迹(fingerprint of the message). 这种算法是一个单方向的,也就是说,从生成的字符想倒推到原来的这个信息,那几乎是不可能的.这个算法的另外一个特点是,只要你对信息做一个小小的改动,那么生成的字符串差别就很明显.
常见的消息摘要(Message-digest)算法有: MD2, MD5 (128位的算法), SHA-1 (160位的算法)
在Java中,MessageDigest类来负责信息摘要,使用大致如下:

[java]
MessageDigest messageDigest = MessageDigest.getInstance(&quot;MD5&quot;);
messageDigest.update(&quot;TestMessage&quot;.getBytes(&quot;UTF-8&quot;));
System.out.println(new String(messageDigest.digest(), &quot;UTF-8&quot;));
[/java]


3. <span style="text-decoration: underline;">真实性(Authenticity)</span>

&nbsp;

上面我们解决了保密性和完整性,那我们怎么来保证Bob收到的这个信息就是Alice发的吗?有可能是Eva借用Alice的名字,拿到Bob的公钥发的.
基于这个考虑,我们就引入了一个数字签名(Digital Signature)的概念.数字签名就是在你发送信息的时候,用你的私钥进行加密,实际应用中,会对信息摘要进行数字签名,那么当Bob收到这个被数字签名过的信息摘要时,用Alice的公钥去解密,就可以确定这个消息是来自于Alice.
数字签名的算法有两种: RSA, DSA(Digital Signature Algorithm). 注意, RSA算法,既可用于加密,也可以用于数字签名. 但是DSA只可用于数字签名.
JDK支持以下的组合, MD2/RSA, MD5/RSA, SHA1/DSA, SHA1/RSA.
下面我们直接看JDK中Siganiture类来签名的使用.

[java]
KeyPairGenerator keyGen = KeyPairGenerator.getInstance(&quot;RSA&quot;);
keyGen.initialize(1024);
KeyPair keypair = keyGen.generateKeyPair();


Signature sig = Signature.getInstance(&quot;MD5WithRSA&quot;);
sig.initSign(keypair.getPrivate());
sig.update(&quot;This is message&quot;.getBytes(&quot;UTF-8&quot;));

byte[] signature = sig.sign();

//Verify the signature
sig.initVerify(keypair.getPublic());
sig.update(&quot;This is message&quot;.getBytes(&quot;UTF-8&quot;));
if (sig.verify(signature)) {
  System.out.println(&quot;Signature verified.&quot;);
}
[/java]


到目前为止,我们介绍了加密,信息完整,数字签名这三个概念,应该说可以是完成了,你都懂了.

&nbsp;

但是,等等,你是不是在经常听到说证书,X.509, keytool, keystore等等的概念呢?
下面,我们再来依次看看这几个概念.

4. <span style="text-decoration: underline;">证书(certificates) &amp; X.509</span>

之前我们说,在这种非对称加密算法中,我们一般会把公钥放在一个另外一个机构,这个机构专门负责来保管你的公钥,而且这个机构还负责核实你的真实性. 那么他一旦核实你后,就会创建一个东西,这个东西包含了你的公钥,你的个人信息(Identity),然后再用这个机构的私钥进行数字签名. 我们管这个东西就叫数字证书. 我们管这样的机构叫做CA( Certificate Authority)
X.509是一种存储证书的标准,我们通常直接叫X.509证书.

5. <span style="text-decoration: underline;">keytool, keystore</span>

keystore是用来存放钥匙(包括公钥,私钥),证书的容器. keystore是一个以.keystore为后缀名的文件.在keystore里面的钥匙和证书可以有名字,叫做alias. 而且他们各自可以有密码保护.

JDK自带的keytool是用来创建keystore以及key的工具,下面我们来看几个常用的命令.

1) 创建keys (注意不能换行).

[xml]
keytool -genkey -alias serverkey -keypass serverpass -keyalg RSA -sigalg SHA1withRSA -keystore server.keystore -storepass nosecret&amp;nbsp;

keytool -genkey -alias clientkey -keypass clientpass -keyalg RSA -sigalg SHA1withRSA -keystore client.keystore -storepass nosecret
[/xml]


2)导出证书

&nbsp;
<blockquote>keytool -export -alias serverkey -keystore server.keystore -storepass nosecret -file servercert.cer</blockquote>
3)导入证书

[xml]
keytool -import -alias serverkey -keystore client.keystore -storepass nosecret -file servercert.cer
[/xml]


6. <span style="text-decoration: underline;">keystore, truststore的区别</span>

&nbsp;

在跟web service 打交道,或者做测试的时候,你会经常听到trust store这个词,他其实就是一个CA,他是专门存放public key的; keystore是既存放public key,也存放private key的.<a href="http://www.jboss.org/community/index.html?module=bb&amp;op=viewtopic&amp;t=94406">
这个贴子上</a>, Jason详细的解释了在ws security中,keystore和truststore的配置问题.

[References]
<a href="http://www.ibm.com/developerworks/edu/j-dw-javasec1-i.html">Java security Part 1, Crypto basics</a>
<a href="http://www.ibm.com/developerworks/edu/ws-dw-ws-understand-web-services4.html">Understanding WS-Security</a>
<a href="http://www.ibm.com/developerworks/webservices/library/j-jws5/index.html">WS-Security signing and encryption</a>
<a href="http://java.sun.com/j2se/1.5.0/docs/tooldocs/solaris/keytool.html">Keytool documentation</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>235</wp:post_id>
		<wp:post_date>2009-07-14 14:28:00</wp:post_date>
		<wp:post_date_gmt>2009-07-14 03:28:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e6%b5%85%e8%b0%88ws-security-%e5%8a%a0%e5%af%86%e7%ad%be%e5%90%8d%e8%af%81%e4%b9%a6%e7%ad%89</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="chinese"><![CDATA[Chinese]]></category>
		<category domain="category" nicename="java"><![CDATA[Java]]></category>
		<category domain="post_tag" nicename="security"><![CDATA[Security]]></category>
		<category domain="post_tag" nicename="ws-security"><![CDATA[WS-Security]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_blog</wp:meta_key>
			<wp:meta_value><![CDATA[jeff.familyyu.net]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_author</wp:meta_key>
			<wp:meta_value><![CDATA[Jeff Yu   (余昌)]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_429d160645182d8e72b48e90f5e50eb3_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[3044088116844692520]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_efficient_related_posts</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{i:0;a:4:{s:2:"ID";s:3:"222";s:10:"post_title";s:18:"SAML & XACML links";s:7:"matches";s:1:"2";s:9:"permalink";s:53:"http://jeff.familyyu.net/2008/11/04/saml-xacml-links/";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_relation_threshold</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Getting Started with jBPM 4.0 (Part IV)</title>
		<link>http://jeff.familyyu.net/2009/07/19/getting-started-with-jbpm-4-0-part-iv/</link>
		<pubDate>Sun, 19 Jul 2009 06:45:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang.wordpress.com/2009/07/19/getting-started-with-jbpm-4-0-part-iv</guid>
		<description></description>
		<content:encoded><![CDATA[As said in <a href="http://jeffyuchang.blogspot.com/2009/07/getting-started-with-jbpm-40-part-iii.html">part III</a>, we will revise our example, to create the task form, and then use the jbpm console to take or complete the task.

Firstly, because there was a minor issue related to this feature, which was reported <a href="https://jira.jboss.org/jira/browse/JBPM-2423">here in the jBPM jira</a>, we will use the 'form' attribute in the jpdl file.

1.<span style="text-decoration: underline;">Add the task form template</span>
Here, we will create a freemarker template file, named review.ftl. the files content is as following:

[xml]
&lt;html&gt;
&lt;body&gt;
&lt;h2&gt;Please review the request
&lt;form action=&quot;${form.action}&quot; method=&quot;POST&quot; enctype=&quot;multipart/form-data&quot;&gt;
&lt;#list outcome.values as transition&gt;
&lt;input type=&quot;submit&quot; name=&quot;outcome&quot; value=&quot;${transition}&quot;&gt;
&lt;/#list&gt;
&lt;/form&gt;
&lt;/body&gt;
&lt;/html&gt;
[/xml]

2.<span style="text-decoration: underline;">Add the form attribute in task node</span>
As we said earlier, due to the <a href="https://jira.jboss.org/jira/browse/JBPM-2423">JBPM-2423 issue</a> in jBPM 4.0 GA, we need to update our jpdl to associate our task form template. the updated section is as following.
<pre class="brush:xml">&lt;task assignee="alex" g="277,235,92,52" name="review" <span style="color: #ff0000;">form="review.ftl"</span>&gt;
&lt;transition g="-73,-25" name="approved" to="audit"/&gt;
&lt;/task&gt;</pre>
3. <span style="text-decoration: underline;"> Update the build.xml, to include the .ftl file in .bar archive</span>
The last step would be to update our build.xml, to include the ftl template file, and also include the png file for the diagram show usage in our jbpm console.
The updated bar package built script is:

[xml]
&lt;target name=&quot;bar&quot; depends=&quot;init&quot;&gt;
&lt;jar destfile=&quot;${basedir}/target/helloworld.bar&quot;&gt;
  &lt;fileset dir=&quot;${basedir}/src/main/resources&quot;&gt;
        &lt;include name=&quot;*.jpdl.xml&quot; /&gt;
        &lt;include name=&quot;*.ftl&quot; /&gt;
       &lt;include name=&quot;*.png&quot; /&gt;
&lt;/fileset&gt;
   &lt;/jar&gt;
&lt;/target&gt;
[/xml]

That is it, now you can re-deploy it into the jBPM server, <a href="http://jeffyuchang.blogspot.com/2009/07/getting-started-with-jbpm-40-part-iii.html">like we said in the part3</a>.

<span style="text-decoration: underline;">Task Form in jBPM console</span>
well, after we started the process instance, let's see the diagram and the task form in its console UI.

On the process instance tab, click the 'diagram' button in the instance details page, you would see page as following picture.
<a href="http://jeff.familyyu.net/wp-content/uploads/2011/01/diagram1.gif"><img src="http://jeff.familyyu.net/wp-content/uploads/2011/01/diagram1.gif?w=300" border="0" alt="" /></a>

Go to the task list -&gt; Personal tasks, you would see there is a task, the name is called "review", select the task and click the 'view' button, it would pop up the task form interface as following picture.
<a href="http://jeff.familyyu.net/wp-content/uploads/2011/01/taskform.gif"><img src="http://jeff.familyyu.net/wp-content/uploads/2011/01/taskform.gif?w=300" border="0" alt="" /></a>

Once you click the 'approved' button, the task is completed, and the whole process goes to the 'audit' state as we've defined in the jpdl file.

So, that is all for the task form example. If you want to know more about the template, like syntax, you can refer to the <a href="http://freemarker.sourceforge.net/">freemarker webiste</a>.

One thing interesting is that there is a console-server, which is the jbpm console talk to, the console server is responsible for exposing the jBPM service as a RESTful services. You can go to "http://localhost:8080/gwt-console-server/rs/server/resources" to see all available resources. we won't go detail in this entry, this is an interesting topic that we will cover in the future blog entry.

<span style="text-decoration: underline;">Summary</span>

Until now, this 《Getting Started with jBPM 4.0》series is finished, you can download the <a href="http://people.apache.org/%7Ejeffyu/articles/artifacts/jbpm-helloworld.tar">jbpm-helloworld example as a tar ball from here</a>. Its aim is to help you get started, if you want to know more about jBPM 4.0, the <a href="http://docs.jboss.com/jbpm/v4.0/userguide/html_single/">userguide</a> and <a href="http://docs.jboss.com/jbpm/v4.0/devguide/html_single/">dev guide</a> are very good documents, and you also shouldn't miss <a href="http://www.jboss.org/index.html?module=bb&amp;op=viewforum&amp;f=217">the jbpm user forum</a>.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>236</wp:post_id>
		<wp:post_date>2009-07-19 17:45:00</wp:post_date>
		<wp:post_date_gmt>2009-07-19 06:45:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>getting-started-with-jbpm-4-0-part-iv</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="bpm"><![CDATA[BPM]]></category>
		<category domain="category" nicename="java"><![CDATA[Java]]></category>
		<category domain="category" nicename="jboss"><![CDATA[JBoss]]></category>
		<category domain="post_tag" nicename="jbpm"><![CDATA[jBPM]]></category>
		<wp:postmeta>
			<wp:meta_key>blogger_blog</wp:meta_key>
			<wp:meta_value><![CDATA[jeff.familyyu.net]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_author</wp:meta_key>
			<wp:meta_value><![CDATA[Jeff Yu   (余昌)]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_429d160645182d8e72b48e90f5e50eb3_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[1846988186397747820]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_efficient_related_posts</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{i:0;a:4:{s:2:"ID";s:3:"243";s:10:"post_title";s:38:"jBPM 4.0 restful service introduction.";s:7:"matches";s:1:"1";s:9:"permalink";s:74:"http://jeff.familyyu.net/2009/08/08/jbpm-4-0-restful-service-introduction/";}i:1;a:4:{s:2:"ID";s:3:"239";s:10:"post_title";s:21:"Updates on JBoss ESB.";s:7:"matches";s:1:"1";s:9:"permalink";s:57:"http://jeff.familyyu.net/2009/07/22/updates-on-jboss-esb/";}i:2;a:4:{s:2:"ID";s:3:"234";s:10:"post_title";s:40:"Getting Started with jBPM 4.0 (Part III)";s:7:"matches";s:1:"1";s:9:"permalink";s:75:"http://jeff.familyyu.net/2009/07/12/getting-started-with-jbpm-4-0-part-iii/";}i:3;a:4:{s:2:"ID";s:3:"233";s:10:"post_title";s:39:"Getting Started with jBPM 4.0 (Part II)";s:7:"matches";s:1:"1";s:9:"permalink";s:74:"http://jeff.familyyu.net/2009/07/12/getting-started-with-jbpm-4-0-part-ii/";}i:4;a:4:{s:2:"ID";s:3:"232";s:10:"post_title";s:41:"Getting Started with jBPM 4.0 - (Part I )";s:7:"matches";s:1:"1";s:9:"permalink";s:73:"http://jeff.familyyu.net/2009/07/11/getting-started-with-jbpm-4-0-part-i/";}i:5;a:4:{s:2:"ID";s:3:"229";s:10:"post_title";s:27:"jBPM4.0 framework exploring";s:7:"matches";s:1:"1";s:9:"permalink";s:64:"http://jeff.familyyu.net/2009/06/29/jbpm4-0-framework-exploring/";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_relation_threshold</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>93</wp:comment_id>
			<wp:comment_author><![CDATA[showmanlkz]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.blogger.com/profile/15044486265936288561</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2009-07-20 22:03:43</wp:comment_date>
			<wp:comment_date_gmt>2009-07-20 11:03:43</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi, need to thank again for this great post!I somehow completed this tutorial except still have something not sure1, I still don&#039;t get the point for copying the JAR to ${jboss.server.config.dir}/deploy/jbpm/userlibs, what is that for??2, my png diagram could not display properly, the image was broken. Is it normal in jBPM?3, I found that jBPM console does not update the information itself, for example, it won&#039;t tell Alex has approved the review and move to audit node unless I re-login to JBPM console, does it happen to you as well??Thanks again]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>94</wp:comment_id>
			<wp:comment_author><![CDATA[showmanlkz]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.blogger.com/profile/15044486265936288561</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2009-07-20 22:05:54</wp:comment_date>
			<wp:comment_date_gmt>2009-07-20 11:05:54</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi I think I found the answer for my third question, there are refresh bottom there... lolz]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>95</wp:comment_id>
			<wp:comment_author><![CDATA[Jeff Yu (余昌)]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.blogger.com/profile/09118191450334995303</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2009-07-21 16:35:01</wp:comment_date>
			<wp:comment_date_gmt>2009-07-21 05:35:01</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[we put the jar into the userlibs, so that those classes can be picked up, like the Println class that we&#039;ve used for the java node. I am not saying that you could only put the classes jar into the userlibs folder, you can put it into other folder as long as it can be picked up from the classloader.with regard to the 2nd question, yes, I also couldn&#039;t open the png file directly(not in the console&#039;s digram button).. not sure why at the moment. ;-)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>96</wp:comment_id>
			<wp:comment_author><![CDATA[Ronald van Kuijk (Kukeltje)]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://RonaldvanKuijk(Kukeltje)noreply@blogger.com</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2009-07-24 13:47:48</wp:comment_date>
			<wp:comment_date_gmt>2009-07-24 02:47:48</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[The image is in reality  a jpg but has the png extension. That seems to go wrong. Jira issue is already filed]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>97</wp:comment_id>
			<wp:comment_author><![CDATA[Anonymous]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://Anonymousnoreply@blogger.com</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2009-08-19 18:42:18</wp:comment_date>
			<wp:comment_date_gmt>2009-08-19 07:42:18</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi, thanks for the tutorial ! =)But i dont get where the &quot;outcome&quot; variable comes from. and have u tried to put a second identical form (with different name) inside the process ? the task gets assigned correctly but when i try to view it an error is risen. &quot;Expected hash. outcome evaluated instead to freemarker.template.SimpleScalar online 6, column 8 in email/task1.ftl.The problematic instruction:----------==&gt; list outcome.values as transition [on line 6, column 1 in email/task1.ftl]&quot;thx,chris]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>98</wp:comment_id>
			<wp:comment_author><![CDATA[Yukon]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://Yukonnoreply@blogger.com</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2009-08-25 07:49:56</wp:comment_date>
			<wp:comment_date_gmt>2009-08-24 20:49:56</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I have a question about Java task... I am trying to get return value from Java task ...Note - I am not able to copy my my jpdl content as this comment text field is not allowing ... still trying replacing &quot;&lt;&quot; with &quot;#&quot; ...   #java class=&quot;com.mypackage.MyClass&quot; g=&quot;173,70,175,58&quot; method=&quot;test&quot; var=&quot;answer&quot; name=&quot;Retrieve Application&quot; #       #arg##object expr=&quot;#{input.apre.force}&quot;/##/arg#      #transition name=&quot;to end1&quot; to=&quot;end1&quot; g=&quot;-42,-18&quot;/#   #/java#i can call the method and with input arguments but for some reason which getting return value i am getting NullPointerException on this line ...String out = (String)executionService.getVariable(pid, &quot;answer&quot;);and exception is ...java.lang.NullPointerException at org.jbpm.pvm.internal.cmd.GetExecutionVariablesCmd.execute(GetExecutionVariablesCmd.java:60) at org.jbpm.pvm.internal.cmd.GetExecutionVariablesCmd.execute(GetExecutionVariablesCmd.java:36) at org.jbpm.pvm.internal.svc.DefaultCommandService.execute(DefaultCommandService.java:42) at org.jbpm.pvm.internal.tx.StandardTransactionInterceptor.execute(StandardTransactionInterceptor.java:54) at org.jbpm.pvm.internal.svc.EnvironmentInterceptor.execute(EnvironmentInterceptor.java:54) at org.jbpm.pvm.internal.svc.RetryInterceptor.execute(RetryInterceptor.java:55) at org.jbpm.pvm.internal.svc.ExecutionServiceImpl.getVariable(ExecutionServiceImpl.java:130)Can you please help me on this ???]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>99</wp:comment_id>
			<wp:comment_author><![CDATA[Jeff Yu (余昌)]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.blogger.com/profile/09118191450334995303</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2009-08-26 16:47:42</wp:comment_date>
			<wp:comment_date_gmt>2009-08-26 05:47:42</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[@Chris, @YukonCould you please post these two question on the jBPM user forum?http://www.jboss.org/index.html?module=bb&amp;op=viewforum&amp;f=217As we&#039;ve got other jBPM experts over there.. With you guys&#039; question, I haven&#039;t tried it before, I will try to do so and reply on the forum instead.-Jeff]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>100</wp:comment_id>
			<wp:comment_author><![CDATA[Yukon]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://Yukonnoreply@blogger.com</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2009-08-27 05:17:35</wp:comment_date>
			<wp:comment_date_gmt>2009-08-26 18:17:35</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks for your response...I got it working! You can remove my comments from your blog if you like.Yukon]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>101</wp:comment_id>
			<wp:comment_author><![CDATA[Jeff Yu (余昌)]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.blogger.com/profile/09118191450334995303</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2009-08-27 16:21:29</wp:comment_date>
			<wp:comment_date_gmt>2009-08-27 05:21:29</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[@YukonGreat to hear, thats fine. ;-)-Jeff]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>102</wp:comment_id>
			<wp:comment_author><![CDATA[Anonymous]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://Anonymousnoreply@blogger.com</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2009-12-25 23:05:05</wp:comment_date>
			<wp:comment_date_gmt>2009-12-25 12:05:05</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I want to quote your post in my blog. It can?And you et an account on Twitter?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Updates on JBoss ESB.</title>
		<link>http://jeff.familyyu.net/2009/07/22/updates-on-jboss-esb/</link>
		<pubDate>Tue, 21 Jul 2009 14:06:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang.wordpress.com/2009/07/22/updates-on-jboss-esb</guid>
		<description></description>
		<content:encoded><![CDATA[The JBoss ESB team rolled out <a href="http://www.jboss.org/index.html?module=bb&amp;op=viewtopic&amp;t=158696">its 4.6 release</a> yesterday, one of its main feature that it is introduced is to support the JBoss AS5, so go and grab it to try it out.

Also spotted that <a href="http://swqetesting.blogspot.com/">Len</a> has composed three great posts on JBoss SOA-P, it applies also to the JBoss ESB.
1. <a href="http://jboss-soa-p.blogspot.com/2009/07/soa-platform-gateways-and-notifiers.html">SOA Platform Gateways and Notifiers</a>. This talks about the Gateway, ESB aware message, ESB non-aware message, Notifier concepts that from the JBoss ESB.
2. <a href="http://jboss-soa-p.blogspot.com/2009/07/when-content-knows-way-content-based.html">When The Content knows the way</a>. This talks about the JBoss ESB integrates with Drools.
3. <a href="http://jboss-soa-p.blogspot.com/2009/06/hanging-together-on-soa-platform.html">Hanging Together on the SOA Platform - Introduction to the ESB-jBPM integration</a>. This entry talks about the ESB and jBPM integration.

One thing that I must say is that these three entries are very well written, easy to understand. Very good work, Len. ;-)

If you want to read more Len's posts, then follow the <a href="http://jboss-soa-p.blogspot.com/">soa-p's blog</a>.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>239</wp:post_id>
		<wp:post_date>2009-07-22 01:06:00</wp:post_date>
		<wp:post_date_gmt>2009-07-21 14:06:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>updates-on-jboss-esb</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="drools"><![CDATA[Drools]]></category>
		<category domain="category" nicename="esb"><![CDATA[ESB]]></category>
		<category domain="category" nicename="jboss"><![CDATA[JBoss]]></category>
		<category domain="post_tag" nicename="jbossesb"><![CDATA[JBossESB]]></category>
		<category domain="post_tag" nicename="jbpm"><![CDATA[jBPM]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_blog</wp:meta_key>
			<wp:meta_value><![CDATA[jeff.familyyu.net]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_author</wp:meta_key>
			<wp:meta_value><![CDATA[Jeff Yu   (余昌)]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_429d160645182d8e72b48e90f5e50eb3_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[6465199240144872692]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_efficient_related_posts</wp:meta_key>
			<wp:meta_value><![CDATA[a:7:{i:0;a:4:{s:2:"ID";s:3:"247";s:10:"post_title";s:35:"Publishing web service in JBoss ESB";s:7:"matches";s:1:"1";s:9:"permalink";s:72:"http://jeff.familyyu.net/2009/08/11/publishing-web-service-in-jboss-esb/";}i:1;a:4:{s:2:"ID";s:3:"243";s:10:"post_title";s:38:"jBPM 4.0 restful service introduction.";s:7:"matches";s:1:"1";s:9:"permalink";s:74:"http://jeff.familyyu.net/2009/08/08/jbpm-4-0-restful-service-introduction/";}i:2;a:4:{s:2:"ID";s:3:"236";s:10:"post_title";s:39:"Getting Started with jBPM 4.0 (Part IV)";s:7:"matches";s:1:"1";s:9:"permalink";s:74:"http://jeff.familyyu.net/2009/07/19/getting-started-with-jbpm-4-0-part-iv/";}i:3;a:4:{s:2:"ID";s:3:"234";s:10:"post_title";s:40:"Getting Started with jBPM 4.0 (Part III)";s:7:"matches";s:1:"1";s:9:"permalink";s:75:"http://jeff.familyyu.net/2009/07/12/getting-started-with-jbpm-4-0-part-iii/";}i:4;a:4:{s:2:"ID";s:3:"233";s:10:"post_title";s:39:"Getting Started with jBPM 4.0 (Part II)";s:7:"matches";s:1:"1";s:9:"permalink";s:74:"http://jeff.familyyu.net/2009/07/12/getting-started-with-jbpm-4-0-part-ii/";}i:5;a:4:{s:2:"ID";s:3:"232";s:10:"post_title";s:41:"Getting Started with jBPM 4.0 - (Part I )";s:7:"matches";s:1:"1";s:9:"permalink";s:73:"http://jeff.familyyu.net/2009/07/11/getting-started-with-jbpm-4-0-part-i/";}i:6;a:4:{s:2:"ID";s:3:"229";s:10:"post_title";s:27:"jBPM4.0 framework exploring";s:7:"matches";s:1:"1";s:9:"permalink";s:64:"http://jeff.familyyu.net/2009/06/29/jbpm4-0-framework-exploring/";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_relation_threshold</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>103</wp:comment_id>
			<wp:comment_author><![CDATA[Len DiMaggio]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.blogger.com/profile/07124585546929851174</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2009-07-23 07:50:08</wp:comment_date>
			<wp:comment_date_gmt>2009-07-22 20:50:08</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks Jeff - I&#039;m working on more SOA-P posts - stay tuned...    -- Len]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>104</wp:comment_id>
			<wp:comment_author><![CDATA[lz_ever]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.blogger.com/profile/09013946527090381158</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2009-12-23 02:34:41</wp:comment_date>
			<wp:comment_date_gmt>2009-12-22 15:34:41</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[你好，最近在看overlord-cdl项目，在运行.cdm文件生成ESB services的时候出现了”Unable to load model used to generate the ESB artefacts“错误，不知道您是不是有了解这方面的内容？]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>105</wp:comment_id>
			<wp:comment_author><![CDATA[Jeff Yu (余昌)]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.blogger.com/profile/09118191450334995303</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2009-12-23 03:48:00</wp:comment_date>
			<wp:comment_date_gmt>2009-12-22 16:48:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[如果你是在看overlord-cdl,你可以尝试下savara这个项目,目前已经推出M1版本,overlord-cdl目前只处于维护状态,代码也已经被合并到savara里面了. 具体的看http://www.jboss.org/savara]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>106</wp:comment_id>
			<wp:comment_author><![CDATA[lz_ever]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.blogger.com/profile/09013946527090381158</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2009-12-23 14:22:40</wp:comment_date>
			<wp:comment_date_gmt>2009-12-23 03:22:40</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[我是在看pi4soa这个项目，我在研究里面的监控功能，需要根据建好的模型生成ESB services，所以用到了overlord-cdl来根据.cdm文件生成ESB 代码，根据GettingStartedGuide的介绍运行出错。看了很久卡在这一块上了。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>107</wp:comment_id>
			<wp:comment_author><![CDATA[Jeff Yu (余昌)]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.blogger.com/profile/09118191450334995303</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2009-12-23 15:51:30</wp:comment_date>
			<wp:comment_date_gmt>2009-12-23 04:51:30</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[目前pi4soa也被包括在savara里面,pi4soa的作者就是savara的project lead.你是用overlord-cdl M2??]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>108</wp:comment_id>
			<wp:comment_author><![CDATA[lz_ever]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.blogger.com/profile/09013946527090381158</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2009-12-23 20:30:07</wp:comment_date>
			<wp:comment_date_gmt>2009-12-23 09:30:07</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[哦，好的，那我去看看savara项目，我用的overlord-cdl M1.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>109</wp:comment_id>
			<wp:comment_author><![CDATA[lz_ever]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.blogger.com/profile/09013946527090381158</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2009-12-23 23:38:12</wp:comment_date>
			<wp:comment_date_gmt>2009-12-23 12:38:12</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[我还想请问一下你有研究过pi4soa这个项目吗？知道里面的监控功能是怎么实现的吗？我研究了4个多月了，还是一头雾水，一定要用SAVARA或overlord-cdl生成&quot;Conversation Aware&quot; ESBActions才能实现监控功能吗？不好意思，打扰你了。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>110</wp:comment_id>
			<wp:comment_author><![CDATA[Jeff Yu (余昌)]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.blogger.com/profile/09118191450334995303</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2009-12-24 00:53:47</wp:comment_date>
			<wp:comment_date_gmt>2009-12-23 13:53:47</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[我所知道的监控功能是用JMS来实现的.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>111</wp:comment_id>
			<wp:comment_author><![CDATA[lz_ever]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.blogger.com/profile/09013946527090381158</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2009-12-24 18:46:59</wp:comment_date>
			<wp:comment_date_gmt>2009-12-24 07:46:59</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[哦。那如果研究pi4soa的监控功能是不用涉及到esb 的知识的吗？实在是看的头大，所以想请教一下你监控方面的内容，找不到pi4soa监控的介绍，一些论文都是对它建模方面的介绍。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>438</wp:comment_id>
			<wp:comment_author><![CDATA[Mohan]]></wp:comment_author>
			<wp:comment_author_email>mohankumarc8988@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>122.167.77.156</wp:comment_author_IP>
			<wp:comment_date>2011-09-15 23:45:09</wp:comment_date>
			<wp:comment_date_gmt>2011-09-15 13:45:09</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi,

I am newbie to the world of Jboss ESB.

I am trying to do a simple file tranformation to database.
Please guide me.

Thanks in advance.

Mohan Kumar C]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>code against web service.</title>
		<link>http://jeff.familyyu.net/2009/07/24/code-against-web-service/</link>
		<pubDate>Fri, 24 Jul 2009 08:38:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang.wordpress.com/2009/07/24/code-against-web-service</guid>
		<description></description>
		<content:encoded><![CDATA[Have worked on the web service area since when I joined the IONA in 2007, specifically, from the time that I started working on the <a href="http://cxf.apache.org/">Apache CXF project</a>. Although I've been working on web service stuff about 3 years, I still thought it is not an easy job to code against web service. these days, some of my friends ask me about the web service, from concepts to its hello-world example. So I think it worths to do a blog entry for people to get started with web service projects.<br /><br />And then I remembered that <a href="http://www.jroller.com/gmazza/">Glen</a> has did a ton of great blog entries about web service stack.(CXF, Metro and even Aix2 lately), and all of them are very detail, step-to-step. So here we go, we pick some of Glen's blog entries to get you started on web service.<br /><br />It is better that you get some concepts like the WSDL, SOAP, XSD, and read the JAXWS spec if time is allowed, just get a rough idea on it is ok, before we code against web service.<br /><br />Firstly, let's see the<a href="http://www.jroller.com/gmazza/entry/creating_a_wsdl_first_web1"> Creating a WSDL-first web service with Apache CXF or GlassFish Metro</a> entry, it is our 'hello world' example.<br /><br />Want to see the SOAP Message that was transferred on the wire? you have couple options for this. One is to use tools like <a href="http://wso2.org/blog/saliya/3938">Apache TCP Monitor</a> or <a href="http://www.jroller.com/gmazza/entry/wireshark_usage_for_cxf">wireshark</a>. Another option is to use the JAXWS handler(similar to interceptor) mechanism, which is a very important feature in the spec. See <a href="http://www.jroller.com/gmazza/entry/adding_jax_ws_handlers_to">Glen's JAX-WS handler blog entry</a> to try it out.<br /><br />So you saw the soap message on the wire, how can we do with the binary stuff, that is what MTOM is for, you can see <a href="http://www.jroller.com/gmazza/entry/using_mtom_and_apache_fop">"Returning PDFs from Web Services using MTOM and Apache FOP" blog entry</a> for its usage and detail.<br /><br />If you are a person who like the Test-Driven Development, then don't miss the '<a href="http://www.jroller.com/gmazza/entry/writing_junit_test_cases_for">creating junit test case for web service</a>' blog entry.<br /><br />Security is a big concern in the enterprise development, so that is what ws-security spec for. firstly, you could read the '<a href="http://www.jroller.com/gmazza/entry/setting_up_ssl_and_basic">Using SSL and Basic Authentication with web services (Tomcat or WebLogic)</a>' for its basic usage, and then go on reading the <a href="http://www.jroller.com/gmazza/entry/implementing_ws_security_using_usernametokens">username token profile blog entry</a>, <a href="http://www.jroller.com/gmazza/entry/implementing_ws_security_with_pki">Implementing WS-Security with public key certificates for Metro-based web services</a>. Also can read the ' <a href="http://www.jroller.com/gmazza/entry/using_the_opensaml_library_in">Using OpenSAML in JAX-WS Handlers</a>' if you are interested in the SAML token profile in ws-security.<br /><br />I think that should be enough for you to get it started, you can explore more on the <a href="http://www.jroller.com/gmazza/">Glen's website</a>, you would find more entries about web service.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>240</wp:post_id>
		<wp:post_date>2009-07-24 19:38:00</wp:post_date>
		<wp:post_date_gmt>2009-07-24 08:38:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>code-against-web-service</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="java"><![CDATA[Java]]></category>
		<category domain="category" nicename="web-service"><![CDATA[Web Service]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_blog</wp:meta_key>
			<wp:meta_value><![CDATA[jeff.familyyu.net]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_author</wp:meta_key>
			<wp:meta_value><![CDATA[Jeff Yu   (余昌)]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_429d160645182d8e72b48e90f5e50eb3_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[4953541814901266400]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Build restful service with RESTEasy</title>
		<link>http://jeff.familyyu.net/2009/08/02/build-restful-service-with-resteasy/</link>
		<pubDate>Sun, 02 Aug 2009 10:44:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang.wordpress.com/2009/08/02/build-restful-service-with-resteasy</guid>
		<description></description>
		<content:encoded><![CDATA[Haven't used JAX-RS to build RESTful service for a while, these days I look at the BPM console project, and one thing is that its service are all rest services. So I tried to build a restful service with <a href="http://jboss.org/resteasy/">RESTEasy</a> library to see how it goes. Hope this blog entry could help people who are also trying to build Restful service with RESTEasy. I am using the RESTEasy 1.1.GA version in our example.

If you are still working on the REST topic, then take a look at <a href="http://jeff.familyyu.net/2008/08/rest-articles-link.html">this resource</a>, also I strongly recommend that you have a read on 《Restful webservice》if possible. I will build a restful-blog project as our helloworld, and will look into it from three aspects: build, deployment and unit test.

<span style="text-decoration: underline;">Build the Project</span>

1.<strong>create a project and add the resteasy lib</strong>

Firstly, lets create the project, I am using the m2eclipse plugin to create a maven blank project. Open up the pom.xml, add the resteay-jaxrs, resteasy-jaxb-provider libs in our pom.xml, in order to download the resteasy-jaxrs, you need to add the jboss maven repo in the repository.
The repository and the dependency would be like:

[xml]
&lt;repositories&gt;
  &lt;repository&gt;
   &lt;id&gt;JBossMavenRepo&lt;/id&gt;
   &lt;name&gt;JBoss Maven2 repo&lt;/name&gt;
   &lt;url&gt;http://repository.jboss.org/maven2&lt;/url&gt;
   &lt;releases&gt;
    true&lt;/enabled&gt;
   &lt;/releases&gt;
   &lt;snapshots&gt;
    false&lt;/enabled&gt;
   &lt;/snapshots&gt;
  &lt;/repository&gt;
 &lt;/repositories&gt;

 &lt;dependencies&gt;
  &lt;dependency&gt;
   &lt;groupId&gt;junit&lt;/groupId&gt;
   &lt;artifactId&gt;junit&lt;/artifactId&gt;
   &lt;version&gt;4.4&lt;/version&gt;
   &lt;scope&gt;test&lt;/scope&gt;
  &lt;/dependency&gt;
  &lt;dependency&gt;
   &lt;groupId&gt;org.jboss.resteasy&lt;/groupId&gt;
   &lt;artifactId&gt;resteasy-jaxrs&lt;/artifactId&gt;
   &lt;version&gt;1.1.GA&lt;/version&gt;
  &lt;/dependency&gt;
  &lt;dependency&gt;
   &lt;groupId&gt;org.jboss.resteasy&lt;/groupId&gt;
   &lt;artifactId&gt;resteasy-jaxb-provider&lt;/artifactId&gt;
   &lt;version&gt;1.1.GA&lt;/version&gt;
  &lt;/dependency&gt;
[/xml]

Run: mvn eclipse:eclipse, it should generate all the eclipse needed workspace files.

2. <strong>Build the Resource service</strong>
Here, I created the UserService interface, which takes care of users CRUD operation, and UserServiceImpl to implement UserService. I am a guy that like to keep the API and implementation separated as much as possible. (Because I found people would typically created a resource class directly in building restful service. like they would name it as UserResource class directly, don't have UserService interface. I still prefer to have interface as the contract.) As the JAX-RS 1.0 spec supports that put the annotation on its interface, so it is ok for us to keep API and impl separated.

Lets look at the UserService firstly.

[java]
public interface UserService {

 @GET
 @Path(&quot;{id}&quot;)
 @Produces({&quot;application/xml&quot;})
 public User getUser(@PathParam(&quot;id&quot;) long id);

 @POST
 @Consumes(&quot;application/xml&quot;)
 public Response addUser(User user);

}
[/java]

JAX-RS spec introduced a set of annotations to help us to expose the java bean as RESTful service.

@Path: This annotation defines which url that we are trying to expose our service to.
@GET:  We know that we have five operations in HTTP, they are GET, PUT, POST, DELETE and HEAD. This annotation is mapped to HTTP's GET, it means you need to use the GET method to access the url to get this resource.
@POST: Mapped to the HTTP's POST.
@Produces: This annotation defines which media type that this method(every method is a resource here) produced.
@Consumes:This annotation is opposed to the @Produces, this one specifies what kind of media type (format) is expected for this method(resource)
@PathParam: This means we will extract the id value from the url path. Other params are: QueryParam, CookieParam, HeaderParam, FormParam etc.

The 'Response' object is a JAX-RS spec defined return type. Client is able to get this object from the HTTP's Response object.

Now, let's look at User Object itself,

[java]
@XmlRootElement(name=&quot;user&quot;)
public class User {

 @XmlAttribute
 public long getId() {
  return id;
 }
 @XmlElement
 public String getUsername() {
  return username;
 }
 @XmlElement
 public String getEmail() {
  return email;
 }
.....
}
[/java]

Here, I omitted the class memeber and its setter methods. You can see that our domain object has the JAXB specific annotation.

Let's step back and look at what we are trying to do in the UserService, we want client to send a xml file over HTTP to add a User, so we need to have a data binding lib that convert the xml to Java Object, thats the reason that we introduced the JAXB annotation.

Our User Object corresponding xml would be like following:

[xml]
&lt;user id=&quot;1&quot;&gt;
 &lt;username&gt;TestUser&lt;/username&gt;
 &lt;email&gt;testuser@test.com&lt;/email&gt;
&lt;/user&gt;
[/xml]

Now, let's look at the UserServiceImpl class.

[java]
@Path(&quot;/user&quot;)
public class UserServiceImpl implements UserService{

   private Map userDB = new ConcurrentHashMap();
   private AtomicLong idCounter = new AtomicLong();

 public UserServiceImpl() {
  User user = new User();
  user.setId(100);
  user.setUsername(&quot;jeff.yuchang&quot;);
  user.setEmail(&quot;jeff.yuchang@jboss.org&quot;);
  userDB.put(Long.valueOf(100), user);
 }

 public Response addUser(User user) {
  user.setId(idCounter.getAndIncrement());
  userDB.put(user.getId(), user);
  System.out.println(&quot;User was created, its id &quot; + user.getId());
  return Response.created(URI.create(&quot;/user/&quot; + user.getId())).build();
 }

 public User getUser(long id) {
  final User user = userDB.get(Long.valueOf(id));
  if (null == user) {
   throw new WebApplicationException(Response.Status.NOT_FOUND);
  }
  return user;
 }
[/java]

This is a very simple implementation, you would understand it easily.
<span style="color: #ff0000;">Note:</span> Here we got one thing to note is that we've used the '@Path' in our impl, we didn't include this in our UserService interface, the reason that I am doing so is because I didn't make it work when I deployed it into the Servlet container.
Until now, we've built a very simple resource, next is to deploy it under container, and then we can check it through browser or HttpClient code etc.

<span style="text-decoration: underline;">Deploy it into Servlet Container</span>

In order to deploy our restful resource into Servlet container, we still need to add one class, which needs to extends the 'Application' object that defined in the JAX-RS. we can simply view the Application as a registry that allows us to register our resource into system.

[java]
public class BlogApplication extends Application {

   private Set&lt;Object&gt; singletons = new HashSet&lt;Object&gt;();
   private Set&lt;Class&lt;?&gt;&gt; empty = new HashSet&lt;Class&lt;?&gt;&gt;();

   public BlogApplication() {
    singletons.add(new UserServiceImpl());
   }

 @Override
 public Set&lt;Class&lt;?&gt;&gt; getClasses() {
  return empty;
 }

    @Override
    public Set&lt;Object&gt; getSingletons() {
       return singletons;
    }

}
[/java]

Once we've finished the Application class, we need to add the web.xml and then use the maven-war plugin file to build a war.

The web.xml is as following:

[xml]
&lt;web-app&gt;
    &lt;display-name&gt;restful-blog&lt;/display-name&gt;

    &lt;context-param&gt;
      &lt;param-name&gt;javax.ws.rs.core.Application&lt;/param-name&gt;
      &lt;param-value&gt;org.jboss.resteasy.blog.BlogApplication&lt;/param-value&gt;
   &lt;/context-param&gt;

    &lt;listener&gt;
        &lt;listener-class&gt;org.jboss.resteasy.plugins.server.servlet.ResteasyBootstrap&lt;/listener-class&gt;
    &lt;/listener&gt;

    &lt;servlet&gt;
        &lt;servlet-name&gt;Resteasy&lt;/servlet-name&gt;
        &lt;servlet-class&gt;org.jboss.resteasy.plugins.server.servlet.HttpServletDispatcher&lt;/servlet-class&gt;
    &lt;/servlet&gt;

    &lt;servlet-mapping&gt;
        &lt;servlet-name&gt;Resteasy&lt;/servlet-name&gt;
        &lt;url-pattern&gt;/*&lt;/url-pattern&gt;
    &lt;/servlet-mapping&gt;
&lt;/web-app&gt;
[/xml]

Also, add the maven-war-plugin into your pom.xml, like

[xml]
&lt;plugin&gt;
          &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;
          &lt;artifactId&gt;maven-war-plugin&lt;/artifactId&gt;
          &lt;version&gt;2.0&lt;/version&gt;
          &lt;configuration&gt;
            &lt;webappDirectory&gt;src/webapp&lt;/webappDirectory&gt;
          &lt;/configuration&gt;
       &lt;/plugin&gt;
[/xml]

Now, run the mvn clean install, you would see the restful-blog-1.0-SNAPSHOT.war in the target folder.

Copy it into the $Tomcat/webapps, start the tomcat, and then access the following url: http://localhost:8080/restful-blog-1.0-SNAPSHOT/user/100, you should see the following xml file.

[xml]
&lt;user id=&quot;100&quot;&gt;
&lt;email&gt;jeff.yuchang@jboss.org&lt;/email&gt;
&lt;username&gt;jeff.yuchang&lt;/username&gt;
&lt;/user&gt;
[/xml]

OK, now we've successfully built and deployed a restful service. If you are a TDD(Test Driven Development) person like me, I guess you would like to use the embedded servlet container in your unit test.

<span style="text-decoration: underline;">Unit Test (Embedded servlet container)</span>

RESTEasy has a out-of-box integration with <a href="http://tjws.sourceforge.net/">Tiny Java Web Server</a> as the embedded servlet container. We are using the http client as our client in our unit tests.

1.<strong>Adding tjws-webserver and servlet 2.5</strong>
We need to add the twjs webserver-1.3.3.jar and the servlet-2.5.jar in our pom.xml

[xml]
 &lt;dependency&gt;
   &lt;groupId&gt;tjws&lt;/groupId&gt;
   &lt;artifactId&gt;webserver&lt;/artifactId&gt;
   &lt;version&gt;1.3.3&lt;/version&gt;
   &lt;scope&gt;test&lt;/scope&gt;
  &lt;/dependency&gt;
  &lt;dependency&gt;
   &lt;groupId&gt;org.apache.geronimo.specs&lt;/groupId&gt;
   &lt;artifactId&gt;geronimo-servlet_2.5_spec&lt;/artifactId&gt;
   &lt;version&gt;1.2&lt;/version&gt;
   &lt;scope&gt;test&lt;/scope&gt;
  &lt;/dependency&gt;
[/xml]

2.<strong>Write a Base test to start the webserver</strong>
I write a following base test, which takes care of starting and stopping servlet server.

[java]
public class BaseTest extends Assert{

 protected static TJWSEmbeddedJaxrsServer server;

 protected static ResteasyDeployment deployment;

 protected static int port = 8081;

 @BeforeClass
 public static void initialize() throws Exception{
  server = new TJWSEmbeddedJaxrsServer();
  deployment = new ResteasyDeployment();
  server.setDeployment(deployment);
  server.setPort(port);
  server.start();
 }

 public void addPerRequestResource(Class&lt;?&gt; clazz) {
  deployment.getRegistry().addPerRequestResource(clazz);
 }

 @AfterClass
 public static void destroy() throws Exception{
  if (server != null) {
   server.stop();
  }
 }
[/java]

3.<strong>Write unit test by using http client</strong>
And now, comes our unit test class.

[java]
public class UserServiceTest extends BaseTest {

 @Before
 public void setUp() throws Exception {
    this.addPerRequestResource(UserServiceImpl.class);
 }

 @Test
 public void testGetUser() throws Exception {
  URL url = new URL(&quot;http://localhost:8081/user/100&quot;);
  HttpURLConnection connection = (HttpURLConnection)url.openConnection();
  connection.setRequestMethod(&quot;GET&quot;);

     BufferedReader reader = new BufferedReader(new
               InputStreamReader(connection.getInputStream()));
     String line = reader.readLine();
        while (line != null)
        {
         System.out.println(line);
         line = reader.readLine();
        }

  connection.disconnect();
 }

 @Test
 public void testCreateUser() throws Exception {
  URL url = new URL(&quot;http://localhost:8081/user&quot;);
  HttpURLConnection connection = (HttpURLConnection)url.openConnection();
  connection.setRequestMethod(&quot;POST&quot;);
  connection.setRequestProperty(&quot;Content-Type&quot;, &quot;application/xml&quot;);
  connection.setDoOutput(true);
  connection.setInstanceFollowRedirects(false);

  StringBuffer sbuffer = new StringBuffer();
  sbuffer.append(&quot;&lt;user id=&quot;0&quot;&gt;&quot;);
  sbuffer.append(&quot;   &lt;username&gt;Test User&lt;/username&gt;&quot;);
  sbuffer.append(&quot;   &lt;email&gt;test.user@test.com&lt;/email&gt;&quot;);
  sbuffer.append(&quot;&lt;/user&gt;&quot;);

  OutputStream os = connection.getOutputStream();
  os.write(sbuffer.toString().getBytes());
  os.flush();

     assertEquals(HttpURLConnection.HTTP_CREATED, connection.getResponseCode());
  connection.disconnect();
 }

}
[/java]

You should be able to run test cases either in IDE or simply do it by running maven surefire plugin. You could obtain <a href="http://people.apache.org/~jeffyu/articles/artifacts/restful-blog.tar">the whole project as a tall bar from here</a>.

[References]
1. <a href="http://jboss.org/file-access/default/members/resteasy/freezone/docs/1.1.GA/userguide/html_single/index.html">RESTEasy user guide</a>.
2. <a href="http://jcp.org/en/jsr/detail?id=311">JAX RS 1.0 spec</a>.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>242</wp:post_id>
		<wp:post_date>2009-08-02 21:44:00</wp:post_date>
		<wp:post_date_gmt>2009-08-02 10:44:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>build-restful-service-with-resteasy</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="java"><![CDATA[Java]]></category>
		<category domain="category" nicename="rest"><![CDATA[REST]]></category>
		<category domain="post_tag" nicename="resteasy"><![CDATA[RESTEasy]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_blog</wp:meta_key>
			<wp:meta_value><![CDATA[jeff.familyyu.net]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_author</wp:meta_key>
			<wp:meta_value><![CDATA[Jeff Yu   (余昌)]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_429d160645182d8e72b48e90f5e50eb3_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[625026525176723857]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_efficient_related_posts</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{i:0;a:4:{s:2:"ID";s:3:"243";s:10:"post_title";s:38:"jBPM 4.0 restful service introduction.";s:7:"matches";s:1:"1";s:9:"permalink";s:74:"http://jeff.familyyu.net/2009/08/08/jbpm-4-0-restful-service-introduction/";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_relation_threshold</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>113</wp:comment_id>
			<wp:comment_author><![CDATA[Ｗeinan Li]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://ＷeinanLinoreply@blogger.com</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2010-01-17 02:34:33</wp:comment_date>
			<wp:comment_date_gmt>2010-01-16 15:34:33</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Good article, thanks!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>114</wp:comment_id>
			<wp:comment_author><![CDATA[Pranab]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.blogger.com/profile/13640683687903025427</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2010-03-04 03:27:45</wp:comment_date>
			<wp:comment_date_gmt>2010-03-03 16:27:45</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks for the great post. Got me going on my first JAX-RS project quickly]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>115</wp:comment_id>
			<wp:comment_author><![CDATA[Place]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.blogger.com/profile/00952039227440518263</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2010-09-13 10:07:48</wp:comment_date>
			<wp:comment_date_gmt>2010-09-12 23:07:48</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Great post. Very clear and concise. One question: Is is possible to have more that one input argument in a post e.g  @POST @Consumes(&quot;application/xml&quot;) public Response addUser(User user, UserGroup group);]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>116</wp:comment_id>
			<wp:comment_author><![CDATA[Jeff Yu (余昌)]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.blogger.com/profile/09118191450334995303</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2010-09-13 13:01:34</wp:comment_date>
			<wp:comment_date_gmt>2010-09-13 02:01:34</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I don&#039;t think it is a good design to have two Arguments for one method, you need to think those two are two different resources, why not have a User(resource) to have an association with UserGroup. And then you put User as a parameter, but you can update UserGroup in the User Object.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>jBPM 4.0 restful service introduction.</title>
		<link>http://jeff.familyyu.net/2009/08/08/jbpm-4-0-restful-service-introduction/</link>
		<pubDate>Sat, 08 Aug 2009 10:14:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang.wordpress.com/2009/08/08/jbpm-4-0-restful-service-introduction</guid>
		<description></description>
		<content:encoded><![CDATA[We all knew that we've had a completely re-write console that is using GWT in jBPM 4.0.  But we might not know that we've also introduced a set of jbpm restful services. Specifically, it is including following resources: Process Management, Task Management, User Management, Process Engine service etc. These resources are exchanged by using json as data format. The jBPM console (<a href="http://localhost:8080/jbpm-console">http://localhost:8080/jbpm-console</a>) operates jbpm services through this restful services.

Assume that you've installed the jBPM 4.0, started the server, you can see all available services at <a href="http://localhost:8080/gwt-console-server/rs/server/resources">http://localhost:8080/gwt-console-server/rs/server/resources</a> url. This page basically lists the most important information for the services, like the Method (could be GET, POST etc), the url, consume and produce data format etc.

Now, lets look at how many components are consist of this restful service. In the jBPM server, we can find following three packages.

[xml]$JBoss/server/default/lib/gwt-console-rpc.jar
$JBoss/server/default/lib/gwt-console-server-integration.jar
$JBoss/server/default/deploy/jbpm/gwt-console-server.war
[/xml]

These three libraries is the backbone of our restful services.
1. <span style="text-decoration: underline;">gwt-console-rpc.jar</span>: this jar includes all the domain classes that server used to expose. In other word, this jar define all of data format that we are going to expose to the client.
2. <span style="text-decoration: underline;">gwt-console-server-integration</span>: This package includes all of abstracted SPIs(Service Provider Interface), like TaskManagement etc. jBPM integration layer uses this to implement these SPIs.
3. <span style="text-decoration: underline;">gwt-console-server.war</span>: This artifact extends the rpc and server-integration modules(the artifacts in the default/deploy folder will see all libaries in the default/lib folder) , also leverages the RESTEasy lib to expose all of service to be restful. (here we are using the RESTEasy's jaxb-json provider to expose all the domain model into json data format.)

*<span style="color: #ff0000;"> Tip</span>: we've put all of jBPM related API into the jbpm.jar itself (you can find it under the $JBoss/server/default/lib/jbpm.jar). For the jBPM integration point, we are getting the ProcessEngine API from the JNDI at "java:/ProcessEngine".

Now you saw these services. Next I will write a simple test to use this service to show you how you can leverage it.

For its simplicity, I won't do it in the html, that is what jBPM console did, here I will write a test client, and then use the <a href="http://code.google.com/p/google-gson/">Gson library</a> to convert the json into our domain model(in our gwt-console-rpc).

[java]
public class RestfulServiceTest extends TestCase {

  public void testDeploymentRestfulService() throws Exception {
      URL url = new URL(&quot;http://localhost:8080/gwt-console-server/rs/engine/deployments&quot;);
      HttpURLConnection connection = (HttpURLConnection)url.openConnection();
      connection.setRequestMethod(&quot;GET&quot;);

      BufferedReader reader = new BufferedReader(new
                InputStreamReader(connection.getInputStream()));

      StringBuffer buffer = new StringBuffer();
      String line = reader.readLine();
      while (line != null)
      {
       buffer.append(line);
       line = reader.readLine();
      }

      System.out.println(buffer.toString());

      Gson gson = new Gson();
      DeploymentRefWrapper result = gson.fromJson(buffer.toString(), DeploymentRefWrapper.class);

      for (DeploymentRef deploymentRef : result.getDeployments()) {
          System.out.println(&quot;deployment name is: &quot; + deploymentRef.getName());
      }

      connection.disconnect();
  }

}
[/java]


Before you run the above code, you need to make sure that you've started the jBPM 4.0, and deployed a bar file into the server. Otherwise you would see nothing, as there were no data on the server. (you can refer to <a href="http://jeff.familyyu.net/search/label/jBPM">my previous blogs</a> if you don't know how to start and deploy bar artifact into server).

&nbsp;

* <span style="color: #ff0000;">Note</span>: You need to add the gson lib in your classpath.

Run the test code, you would get following result.
<pre class="brush:xml">{"deployments":[{"id":"1","suspended":false,"name":"helloworld.bar","timestamp":1249805642238,"definitions":["helloworld-1"],"resourceNames":["review.ftl","META-INF/","META-INF/MANIFEST.MF","helloworld.jpdl.xml","helloworld.png"]}]}

deployment name is: helloworld.bar</pre>
First one is the whole data in json format.

[Reference]
1. <a href="http://www.jboss.org/community/wiki/BPMConsoleReference">BPM Console Reference</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>243</wp:post_id>
		<wp:post_date>2009-08-08 21:14:00</wp:post_date>
		<wp:post_date_gmt>2009-08-08 10:14:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>jbpm-4-0-restful-service-introduction</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="bpm"><![CDATA[BPM]]></category>
		<category domain="category" nicename="java"><![CDATA[Java]]></category>
		<category domain="category" nicename="jboss"><![CDATA[JBoss]]></category>
		<category domain="post_tag" nicename="jbpm"><![CDATA[jBPM]]></category>
		<category domain="category" nicename="rest"><![CDATA[REST]]></category>
		<category domain="post_tag" nicename="resteasy"><![CDATA[RESTEasy]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_blog</wp:meta_key>
			<wp:meta_value><![CDATA[jeff.familyyu.net]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_author</wp:meta_key>
			<wp:meta_value><![CDATA[Jeff Yu   (余昌)]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_429d160645182d8e72b48e90f5e50eb3_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[1121236765145740557]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_efficient_related_posts</wp:meta_key>
			<wp:meta_value><![CDATA[a:7:{i:0;a:4:{s:2:"ID";s:3:"242";s:10:"post_title";s:35:"Build restful service with RESTEasy";s:7:"matches";s:1:"1";s:9:"permalink";s:72:"http://jeff.familyyu.net/2009/08/02/build-restful-service-with-resteasy/";}i:1;a:4:{s:2:"ID";s:3:"239";s:10:"post_title";s:21:"Updates on JBoss ESB.";s:7:"matches";s:1:"1";s:9:"permalink";s:57:"http://jeff.familyyu.net/2009/07/22/updates-on-jboss-esb/";}i:2;a:4:{s:2:"ID";s:3:"236";s:10:"post_title";s:39:"Getting Started with jBPM 4.0 (Part IV)";s:7:"matches";s:1:"1";s:9:"permalink";s:74:"http://jeff.familyyu.net/2009/07/19/getting-started-with-jbpm-4-0-part-iv/";}i:3;a:4:{s:2:"ID";s:3:"234";s:10:"post_title";s:40:"Getting Started with jBPM 4.0 (Part III)";s:7:"matches";s:1:"1";s:9:"permalink";s:75:"http://jeff.familyyu.net/2009/07/12/getting-started-with-jbpm-4-0-part-iii/";}i:4;a:4:{s:2:"ID";s:3:"233";s:10:"post_title";s:39:"Getting Started with jBPM 4.0 (Part II)";s:7:"matches";s:1:"1";s:9:"permalink";s:74:"http://jeff.familyyu.net/2009/07/12/getting-started-with-jbpm-4-0-part-ii/";}i:5;a:4:{s:2:"ID";s:3:"232";s:10:"post_title";s:41:"Getting Started with jBPM 4.0 - (Part I )";s:7:"matches";s:1:"1";s:9:"permalink";s:73:"http://jeff.familyyu.net/2009/07/11/getting-started-with-jbpm-4-0-part-i/";}i:6;a:4:{s:2:"ID";s:3:"229";s:10:"post_title";s:27:"jBPM4.0 framework exploring";s:7:"matches";s:1:"1";s:9:"permalink";s:64:"http://jeff.familyyu.net/2009/06/29/jbpm4-0-framework-exploring/";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_relation_threshold</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>296</wp:comment_id>
			<wp:comment_author><![CDATA[Toby]]></wp:comment_author>
			<wp:comment_author_email>superoverdrive@gmx.de</wp:comment_author_email>
			<wp:comment_author_url>http://www.flirtbox.co.uk</wp:comment_author_url>
			<wp:comment_author_IP>81.24.70.2</wp:comment_author_IP>
			<wp:comment_date>2011-07-01 02:05:42</wp:comment_date>
			<wp:comment_date_gmt>2011-06-30 16:05:42</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Unfortunately it is not working anymore - most dependencies are missing and don't exist anymore :-(]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Publishing web service in JBoss ESB</title>
		<link>http://jeff.familyyu.net/2009/08/11/publishing-web-service-in-jboss-esb/</link>
		<pubDate>Tue, 11 Aug 2009 07:21:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang.wordpress.com/2009/08/11/publishing-web-service-in-jboss-esb</guid>
		<description></description>
		<content:encoded><![CDATA[As of this writing, <a href="http://www.jboss.org/jbossesb">JBoss ESB 4.6</a> has two ways of publishing web service for ESB service.
1. Using JSR 181 annotation to do the web service publish and use SOAPProcessor action to connect it in ESB.
2. Providing the in,out, fault xsd schema to generate the wsdl dynamically and publish the web service.
These two ways are not exclusive, it is for different usage:
1. The first one is using JBossWS to publish the annotated Java service, and then using the SOAPProcessor to be a thin wrapper for the existed web service.
2. The second one, which we called EBWS(Endpoint Web Service), is asking developers to provide the in,out,fault xsd if it is required, And then uses these xsds, plus the service info (like service name, category etc) that were defined in the jboss-esb.xml to generate the wsdl and publish the web service.

The JBoss ESB distribution has both quick start examples for these two scenarios. We will examine them in order shortly, quickstart/webservice_producer sample is using the first approach that we've described, while the quickstart/publish_as_webservice is the EBWS as we said.

<span style="text-decoration: underline;">web service producer using SOAPProcessor</span>

We will examine the first approach, below are the steps that is required to publish a web service in ESB.

1.<strong>Add the impl class with jsr 181 annotation</strong>
Lets see the GoodbyeWorldWS.java class, this is the class that is supposed to expose as web service.

[java]
@WebService(name = &quot;GoodbyeWorldWS&quot;, targetNamespace=&quot;http://webservice_producer/goodbyeworld&quot;)
public class GoodbyeWorldWS {
@WebMethod
public String sayGoodbye(@WebParam(name=&quot;message&quot;) String message) {


   Message esbMessage = SOAPProcessor.getMessage();
   if(esbMessage != null) {
       System.out.println(&quot;**** SOAPRequest perhaps mediated by ESB:n&quot; + esbMessage.getBody().get());
   }
   System.out.println(&quot;Web Service Parameter - message=&quot; + message);
   return &quot;... Ah Goodbye then!!!! - &quot; + message;
}
....
}
[/java]


You can see that we are using the jsr181 annotation to expose it as web service. Noted that we are using the SOAPProcessor class to get the incoming soap message just for demonstration, you don't have to use it in this class's implementation.

&nbsp;

2.<strong>Add web.xml to deploy it in servlet container</strong>
In the $webservice_producer/war/resources/WEB-INF/web.xml, it looks like

[xml]
&lt;servlet-name&gt;GoodbyeWorldWS&lt;/servlet-name&gt;
   &lt;servlet-class&gt;org.jboss.soa.esb.samples.quickstart.webserviceproducer.webservice.GoodbyeWorldWS&lt;/servlet-class&gt;
&lt;/servlet&gt;

&lt;servlet-mapping&gt;
   &lt;servlet-name&gt;GoodbyeWorldWS&lt;/servlet-name&gt;
   &lt;url-pattern&gt;/GoodbyeWorldWS&lt;/url-pattern&gt;
&lt;/servlet-mapping&gt;
[/xml]


Typically, we can build a war file that includes both web.xml and the GoodbyeWorldWS.class, and it should be enough to be published as a web service through JBoss WS. since we are trying to access the web service through our ESB, so we need to define an extra file (jboss-esb.xml) in our case.

&nbsp;

3.<strong>Add SOAPProcessor in the jboss-esb.xml</strong>
In the jboss-esb.xml service section, we need to use the SOAPProcessor as following:

[xml]
&lt;action name=&quot;JBossWSAdapter&quot; class=&quot;org.jboss.soa.esb.actions.soap.SOAPProcessor&quot;&gt;
    &lt;property name=&quot;jbossws-endpoint&quot; value=&quot;GoodbyeWorldWS&quot;/&gt;
&lt;/action&gt;
[/xml]


Here the "jbossws-endpoint" property should be referred to published web service servlet name.
*<span style="color: #ff0000;">Tip</span>: There's one optional property "rewrite-endpoint-url" which is not used in this sample. This property is to support load balance on HTTP endpoints.

&nbsp;

4.<strong>pack them in esb and war archive</strong>
The last step for us it to pack them and then deploy. The war file will include all needed classes and web.xml to publish web service. The esb file will include all needed esb files, like jboss-esb.xml etc. You can bundle the war file into esb archive, which is the way that sample uses.

Until now, we've described all of important steps. Next, we will deploy this esb archive into ESB server, you can see the wsdl file at: http://localhost:8080/contract/ (This is offered by ESB), or you can see the one from http://localhost:8080/jbossws/services, that is offered by JBoss WS.

5.<strong>Add the client to do the test</strong>
So, we've completed our server side work. In the example, we defined three gateway for this web service, for the simplicity, we will just look at the one uses JBR gateway to do the test in our client. Here is the client code:

[java]
private void sendMessageToJBRListener(String protocol, int port, String message) throws Throwable {
   String locatorURI = protocol + &quot;://localhost:&quot; + port;
   InvokerLocator locator = new InvokerLocator(locatorURI);
   System.out.println(&quot;Calling JBoss Remoting Listener using locator URI: &quot; + locatorURI);


   Client remotingClient = null;
   try {
       remotingClient = new Client(locator);
       remotingClient.connect();

       // Deliver the message to the listener...
       Object response = remotingClient.invoke(message);
       System.out.println(&quot;JBR Class: &quot; + response.getClass().getName());
       System.out.println(&quot;Response from JBoss Remoting Listener '&quot; + locatorURI + &quot;' was '&quot; + response + &quot;'.&quot;);
   } finally {
       if(remotingClient != null) {
           remotingClient.disconnect();
       }
   }
}
[/java]


We are using the following soap message in our client as input.

[xml]
&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:good=&quot;http://webservice_producer/goodbyeworld&quot;&gt;
&lt;soapenv:Header/&gt;
&lt;soapenv:Body&gt;
&lt;good:sayGoodbye&gt;
    &lt;message&amp;gt;Goodbye!!
 &lt;/good:sayGoodbye&gt;
&lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;
[/xml]


Run the "ant deploy" to deploy the server into ESB server; Run the 'ant runtest', you would get following result:

[xml]
saygoodbye_over_http:
[echo] Invoking a JBossWS Endpoint over HTTP (via JBoss ESB).
[java] Calling JBoss Remoting Listener using locator URI: http://localhost:8765
[java] JBR Class: java.lang.String
[java] Response from JBoss Remoting Listener 'http://localhost:8765' was '&lt;env:Envelope xmlns:env='http://schemas.xmlsoap.org/soap/envelope/'&gt;&lt;env:Header&gt;&lt;/env:Header&gt;&lt;env:Body&gt;&lt;ns2:sayGoodbyeResponse xmlns:ns2=&quot;http://webservice_producer/goodbyeworld&quot;&gt;&lt;return&gt;... Ah Goodbye then!!!! - Goodbye!!&lt;/return&gt;&lt;/ns2:sayGoodbyeResponse&gt;&lt;/env:Body&gt;&lt;/env:Envelope&gt;'.
[/xml]


<span style="text-decoration: underline;">ESB End Point Web Service</span>

&nbsp;

Now, we will see the End Point Web Service, the corresponding example is publish_as_webservice in the JBoss ESB distribution. Lets also see it step by step.

1.<strong>The Web Service server class</strong>
firstly, take a look at the server impl class.

[java]
public class ESBWSListenerAction extends AbstractActionLifecycle
{
protected ConfigTree _config;


public ESBWSListenerAction(ConfigTree config)
{
   _config = config;
}

public Message displayMessage(Message message) throws Exception
{
.......
}
[/java]


Is it just an ordinary ESB action? right, it is. This is totally different from the first one that we saw earlier, we do not have annotation, we used the ESB's Message Object as input/output parameter.

&nbsp;

* <span style="color: #ff0000;">Note</span>: In this approach, you can view it as Dispatch/Provider way that we used to have in JAX-WS, it means you deal with the raw soap message directly, the server doesn't help you do the unmarshall work, this is also a very big difference from the first approach.

2. <strong> define request, response, fault xsd</strong>
In this example, we just define the in and out xsd. it is as following:
request.xsd

[xml]
&lt;xs:schema version=&quot;1.0&quot; targetNamespace=&quot;http://www.jboss.org/sayHi&quot; xmlns:x1=&quot;http://www.jboss.org/sayHi&quot;  xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot; elementFormDefault=&quot;qualified&quot;&gt;
&lt;xs:element name=&quot;sayHi&quot; type=&quot;x1:sayHi&quot;/&gt;
&lt;xs:complexType name=&quot;sayHi&quot;&gt;
&lt;xs:sequence&gt;
 &lt;xs:element name=&quot;arg0&quot; type=&quot;xs:string&quot; minOccurs=&quot;1&quot;/&gt;
&lt;/xs:sequence&gt;
&lt;/xs:complexType&gt;
&lt;/xs:schema&gt;
[/xml]


Response.xsd

[xml]
&lt;xs:schema version=&quot;1.0&quot; targetNamespace=&quot;http://www.jboss.org/sayHi&quot; xmlns:x1=&quot;http://www.jboss.org/sayHi&quot;  xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot; elementFormDefault=&quot;qualified&quot;&gt;
&lt;xs:element name=&quot;sayHiResponse&quot; type=&quot;x1:sayHiResponse&quot;/&gt;
&lt;xs:complexType name=&quot;sayHiResponse&quot;&gt;
&lt;xs:sequence&gt;
 &lt;xs:element name=&quot;arg0&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot;/&gt;
&lt;/xs:sequence&gt;
&lt;/xs:complexType&gt;
&lt;/xs:schema&gt;
[/xml]


We won't show the fault.xsd for the simplicity.

&nbsp;

3.<strong> Add xsd file in the jboss-esb.xml</strong>
After we've defined the xsd file, we will add it in the jboss-esb.xml like following.

[xml]
&lt;actions  inXsd=&quot;/request.xsd&quot; outXsd=&quot;/response.xsd&quot; faultXsd=&quot;/fault.xsd&quot;&gt;
              &lt;action name=&quot;action&quot; class=&quot;org.jboss.soa.esb.samples.quickstart.publishAsWebservice.ESBWSListenerAction&quot; process=&quot;displayMessage&quot;/&gt;
       &lt;/actions&gt;
[/xml]


*Tip: Here it use the 'service name' + hard code name, like 'Binding' for binding, 'Op' for operation name in the generated wsdl. Refer to ESBServiceEndpointInfo class for its detail.

&nbsp;

4.<strong>build it as an esb artifact and deploy</strong>
The last step is to build them as an esb archive and deploy it into the ESB server, as same as the first approach, you can see its wsdl file through either http://localhost:8080/contract or http://localhost:8080/jbossws/services.

The client is as same as the first one(apart from the soap message and url), so I won't show it again.

<span style="text-decoration: underline;">Summary</span>

You see two approaches to help you publish web service in JBoss ESB. At first glance, you might think EBWS(second approach here) is simple as you don't need to build the war file etc. But I would say the first approach is more common in the real use case.

[Acknowledgement]
I'd like to thank my colleague <a href="http://maerqiang.blogspot.com/">Jim Ma</a> for help me explain these two approaches on publishing web service.

[Reference]
1. <a href="http://www.jboss.org/jbossesb">JBoss ESB website</a>.
2. <a href="http://www.mastertheboss.com/en/soa-a-esb/137-jboss-esb-webservice-producer.html">JBoss ESB Webservice Producer.</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>247</wp:post_id>
		<wp:post_date>2009-08-11 18:21:00</wp:post_date>
		<wp:post_date_gmt>2009-08-11 07:21:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>publishing-web-service-in-jboss-esb</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="esb"><![CDATA[ESB]]></category>
		<category domain="category" nicename="java"><![CDATA[Java]]></category>
		<category domain="post_tag" nicename="jbossesb"><![CDATA[JBossESB]]></category>
		<category domain="category" nicename="web-service"><![CDATA[Web Service]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_blog</wp:meta_key>
			<wp:meta_value><![CDATA[jeff.familyyu.net]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_author</wp:meta_key>
			<wp:meta_value><![CDATA[Jeff Yu   (余昌)]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_429d160645182d8e72b48e90f5e50eb3_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[2508964700665936580]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_efficient_related_posts</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{i:0;a:4:{s:2:"ID";s:3:"239";s:10:"post_title";s:21:"Updates on JBoss ESB.";s:7:"matches";s:1:"1";s:9:"permalink";s:57:"http://jeff.familyyu.net/2009/07/22/updates-on-jboss-esb/";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_relation_threshold</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>117</wp:comment_id>
			<wp:comment_author><![CDATA[Taguato]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.blogger.com/profile/02682697748895473561</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2009-08-20 08:36:59</wp:comment_date>
			<wp:comment_date_gmt>2009-08-19 21:36:59</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[in both cases the developer must handle manually the raw SOAP message body.if you have one or more common actions (no web service) and then finally the web service action, then the request data is available to the first and the second action in the default body location, but as a SOAP envelope.so without using smooks or xstream or your own parser, there is no way to convert the payload into a java bean input wich is already done in the ws action.very useless...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>118</wp:comment_id>
			<wp:comment_author><![CDATA[Jeff Yu (余昌)]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.blogger.com/profile/09118191450334995303</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2009-08-20 14:15:54</wp:comment_date>
			<wp:comment_date_gmt>2009-08-20 03:15:54</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Not really, in the first case, when you use the SOAPProcessor to deliver the request to the target webservice, it will help you do the unmarshall job.I don&#039;t think it is a good practice that you have one or more common actions along with the web serivice action. It is better that you can separate the common actions with soapporcessor action. a solution for this is to use the soapprocessor to publish a web service, and then in the webservice impl, to use the ServiceInvoker to invoke the target service that include the action1, action2 etc.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>442</wp:comment_id>
			<wp:comment_author><![CDATA[Alonzo Burns]]></wp:comment_author>
			<wp:comment_author_email>alonzo_burns@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>66.170.94.30</wp:comment_author_IP>
			<wp:comment_date>2011-11-05 08:25:09</wp:comment_date>
			<wp:comment_date_gmt>2011-11-04 22:25:09</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Jeff,

is there a special way you bundle the war file in the esb file? Also, I get the following when running the example.

[org.jboss.soa.esb.listeners.message.ActionProcessingPipeline] No fault address defined for fault message! To: JMSEpr [ PortReference &lt; , , , , , , , , , , ,  &gt; ] MessageID: 3445754b-6ae7-427f-8dbc-6d5087bfd4c0 RelatesTo: jms:correlationID#3445754b-6ae7-427f-8dbc-6d5087bfd4c0]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>477</wp:comment_id>
			<wp:comment_author><![CDATA[URL]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.hSrfB78d.net</wp:comment_author_url>
			<wp:comment_author_IP>176.61.137.179</wp:comment_author_IP>
			<wp:comment_date>2012-01-21 12:16:59</wp:comment_date>
			<wp:comment_date_gmt>2012-01-21 02:16:59</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>... [Trackback]...</strong>

[...] There you will find 39524 more Infos: jeff.familyyu.net/2009/08/11/publishing-web-service-in-jboss-esb/ [...]...]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Soft delete, or Hard delete.</title>
		<link>http://jeff.familyyu.net/2009/09/10/soft-delete-or-hard-delete/</link>
		<pubDate>Thu, 10 Sep 2009 05:42:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang.wordpress.com/2009/09/10/soft-delete-or-hard-delete</guid>
		<description></description>
		<content:encoded><![CDATA[Read the topic of whether we should use the 'soft delete' or 'hard delete' when we are building enterprise application. It was started by <a href="http://ayende.com/Blog/archive/2009/08/30/avoid-soft-deletes.aspx">Ayende's 'Avoid soft deletes'</a>, and then <a href="http://www.udidahan.com/2009/09/01/dont-delete-just-dont/">Udi Dahan says 'don't delete, just dont'</a>. <a href="http://www.infoq.com/news/2009/09/Do-Not-Delete-Data">InfoQ has a thread to discuss about it</a>. Personally, I agree with Udi Dahan. I didn't say that we should always use soft delete. But I would say use it in most cases, compared to the hard delete.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>253</wp:post_id>
		<wp:post_date>2009-09-10 16:42:00</wp:post_date>
		<wp:post_date_gmt>2009-09-10 05:42:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>soft-delete-or-hard-delete</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="java"><![CDATA[Java]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_blog</wp:meta_key>
			<wp:meta_value><![CDATA[jeff.familyyu.net]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_author</wp:meta_key>
			<wp:meta_value><![CDATA[Jeff Yu   (余昌)]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_429d160645182d8e72b48e90f5e50eb3_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[4633163559005177659]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>PartnerLink,PartnerLinkType详解</title>
		<link>http://jeff.familyyu.net/2009/09/28/partnerlinkpartnerlinktype%e8%af%a6%e8%a7%a3/</link>
		<pubDate>Sun, 27 Sep 2009 16:04:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang.wordpress.com/2009/09/28/partnerlinkpartnerlinktype%e8%af%a6%e8%a7%a3</guid>
		<description></description>
		<content:encoded><![CDATA[记得我在看BPEL的时候,总是对PartnerLink和PartnerLinkType概念比较混淆,特别是里面的partnerRole, myRole属性的疑惑,后通过查阅资料,觉得理解得差不多,特分享自己的学习笔记.

BPEL的出现,最主要是想提供一个业务流程(process)的语法,从另外一个方面,也就是想对已有的服务(这里限定于发布成web service的服务)进行一系列的编制(orchestration),然后变成一个新的服务(默认也是发布成web service). 这从一方面来说,也算是重复利用了已有的服务.

BPEL Process主要包括了Activity的概念,里面有包括最基本的Receive,Invoke, Reply等primitive Activity,也包括了strcture activity,比如sequence, flow, case等. 那既然我们定义了这些activity,又是怎么跟外部的已有服务进行联系上呢. 那么就是通过我们所要讲的PartnerLink, PartnerLinkType来关联.

我们先来看下PartnerLinkType. 我比较赞同把PartnerLinkType比喻成通道{Note: 来自于reference[2]的文章}. 可以这么想, BPEL Process是一个web service,这个服务是通过什么方法来与其他已经存在的另外一些web service(s)进行关联呢?PartnerLinkType就是定义这样的一个通道.

先看下PartnerLinkType的例子.

[xml]
&lt;plnk:partnerLinkType name=&quot;AuctionHouse_SellerLT&quot;&gt;
&lt;plnk:role name=&quot;AuctionHouse&quot; portType=&quot;tns:sellerPT&quot; /&gt;
&lt;plnk:role name=&quot;Seller&quot; portType=&quot;tns:sellerAnswerPT&quot; /&gt;
&lt;/plnk:partnerLinkType&gt;
[/xml]

注意这里定义的role可以有1个或者2个,在这个例子当中,我们看到的是2个,代表着需要两个portType(类似Java的Interface)来完成这个通道.这种情况一般是属于异步(Asynchronous)的情况. 我们也可以看做是2个的叫做双向,1个的叫做单向. 1个的一般直接是同步(Synchronous)的,可以直接获取到结果的,不用向异步那样需要一个回调方法(callback).

介绍完PartnerLinkType,可以把PartnerLink想做是PartnerLinkType的实例化.但有点不同的是,在上面我们讲到PartnerLinkType是有单向和双向的,在双向的情况下,那到底是哪个方向呢?比方说,到底是从A -&gt;B 还是从 B -&gt; A呢? PartnerLink的定义就会明确规定了这个方向,比如说:

[xml]
&lt;partnerLink name=”seller”
   partnerLinkType=”AuctionHouse_SellerLT”
   myRole=”AuctionHouse” partnerRole=”Seller”&gt;
&lt;/partnerLink&gt;
[/xml]

注意到这里的myRole和partnerRole的属性,这两个属性指明了PartnerLinkType的方向. 这里, MyRole是指BPEL Process, partnerRole是指外部的we service. 那么,这个例子当中就是,这个通道是从bpel process流向exernal web service.也就是有个请求发送到bpel process,然后bpel process通过这个通道,调用到外面的web service,然后外部的web service再传递结果给bpel process.

这里,我们还得看下单向的情况(也就是在定义PartnerLinkType时,只有一个role的). 比方下面的这个例子.

[xml]
&lt;plnk:partnerLinkType name=&quot;loanPartnerLT&quot;&gt;
&lt;plnk:role name=&quot;loanService&quot; portType=&quot;tns:loanServicePT&quot; /&gt;
&lt;/plnk:partnerLinkType&gt;
&lt;plnk:partnerLinkType name=&quot;loanApprovalLT&quot;&gt;
&lt;plnk:role name=&quot;approver&quot; portType=&quot;tns:loanApprovalPT&quot; /&gt;
&lt;/plnk:partnerLinkType&gt;
[/xml]

再看PartnerLink的定义.

[xml]
&lt;partnerLink  name=&quot;customer&quot;
partnerLinkType=&quot;lns:loanPartnerLT&quot;
myRole=&quot;loanService&quot; /&gt;

&lt;partnerLink name=&quot;approver&quot;
partnerLinkType=&quot;lns:loanApprovalLT&quot;
partnerRole=&quot;approver&quot; /&gt;
[/xml]

在这里,第一个customer的partnerLink定义,说明这个管道是从bpel process这个方向开的,也就是说Request的message应该是发到 Bpel Process. 相反的,第二个approver是属于partnerRole,也就是说这个Request Message应该是BPEL Process发给 partner (也就是外部真正提供服务的web service).

可以推知，凡是partnerLink中定义了myrole的地方，都是外界要调用bpel process的地方，必然对应receive操作.

注意,因为这个PartnerLinkType是WSDL的一个扩展点,所以很多时候,对于这个PartnerLinkType就直接定义在WSDL文件里,而不放在.bpel文件中.

[Reference]
0. <a href="http://docs.oasis-open.org/wsbpel/2.0/OS/wsbpel-v2.0-OS.html">WSBPEL 2.0 specification</a>
1. <a href="http://infocenter.activevos.com/infocenter/ActiveVOS/v60/index.jsp?topic=/com.activee.bpel.doc/html/UG8-2.html">PartnerLinks and PartnerLinkTypes</a>
2. <a href="http://www.zhaoxiangpeng.com/articles/bpel%E4%B8%AD%E7%9A%84partnerlink%E5%92%8Cpartnerlinktype.html">BPEL中的PartnerLink和PartnerLinkType</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>255</wp:post_id>
		<wp:post_date>2009-09-28 03:04:00</wp:post_date>
		<wp:post_date_gmt>2009-09-27 16:04:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>partnerlinkpartnerlinktype%e8%af%a6%e8%a7%a3</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="bpel"><![CDATA[BPEL]]></category>
		<category domain="category" nicename="bpm"><![CDATA[BPM]]></category>
		<category domain="category" nicename="chinese"><![CDATA[Chinese]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_blog</wp:meta_key>
			<wp:meta_value><![CDATA[jeff.familyyu.net]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_author</wp:meta_key>
			<wp:meta_value><![CDATA[Jeff Yu   (余昌)]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_429d160645182d8e72b48e90f5e50eb3_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[6888358038862044704]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_efficient_related_posts</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{i:0;a:4:{s:2:"ID";s:3:"270";s:10:"post_title";s:38:"Exploring ODE Part II: JACOB Framework";s:7:"matches";s:1:"1";s:9:"permalink";s:74:"http://jeff.familyyu.net/2010/01/27/exploring-ode-part-ii-jacob-framework/";}i:1;a:4:{s:2:"ID";s:3:"269";s:10:"post_title";s:59:"Exploring ODE Part I: Bpel Compiler and its internal model.";s:7:"matches";s:1:"1";s:9:"permalink";s:94:"http://jeff.familyyu.net/2010/01/26/exploring-ode-part-i-bpel-compiler-and-its-internal-model/";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_relation_threshold</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>简说XML的Namespace.</title>
		<link>http://jeff.familyyu.net/2009/09/29/%e7%ae%80%e8%af%b4xml%e7%9a%84namespace/</link>
		<pubDate>Mon, 28 Sep 2009 17:56:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang.wordpress.com/2009/09/29/%e7%ae%80%e8%af%b4xml%e7%9a%84namespace</guid>
		<description></description>
		<content:encoded><![CDATA[这是一个简单的XML 101的贴子,写下以帮助自己记忆. ;-)

XML的namespace属性类似java中的packagename,是为了使得唯一性.在xml schema, wsdl or bpel中,我们一般会看到如下的定义
<pre class="brush:xml">&lt;definitions name="echoWsdl"        targetNamespace="http://www.jboss.org/jeffyu/bpel/wsdl"        xmlns:tns="http://www.jboss.org/jeffyu/bpel/wsdl"        xmlns:plnk="http://docs.oasis-open.org/wsbpel/2.0/plnktype"        xmlns="http://schemas.xmlsoap.org/wsdl/"        xmlns:xsd="http://www.w3.org/2001/XMLSchema"        xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"&gt;</pre>
这里面,就要涉及到我们所要谈的default namespace 和 targetNamespace.
先看普通的定义,比如:
<pre class="brush:xml">xmlns:xsd="http://www.w3.org/2001/XMLSchema"</pre>
这样定义后,我们就可以在wsdl文件中写 xsd:string来引用XMLSchema所定义的数据类型,用java理解,可以理解是引入了某个package.

接着我们来看default namespace.
<pre class="brush:xml">xmlns="http://schemas.xmlsoap.org/wsdl/"</pre>
这里,我们可以看到它不像我们上个例子那样定义前缀,那么它就是这个xsd/wsdl/bpel文件中的默认namespace,(注意默认的namespace只适用于没有前缀的element,对attribute不起作用),一个xsd/wsdl文件中只能有一个默认的namespace.

最后,我们再来看targetNamespace.
<pre class="brush:xml">targetNamespace="http://www.jboss.org/jeffyu/bpel/wsdl"</pre>
定义targetNamespace的目的是对在这个xsd/wsdl中自己定义的element(s)归到这个namespace里,也就是说,如果外部的文件要调用这里面的element,那么就需要用这个targetNamespace来调用.所以这也是,当你定义了一个xsd,你要写一个相对应于这个xsd的xml,就需要这个xsd里面的targetNamespace来做校验,看xml是否符合xsd的定义.

[Reference]
1. http://www.coderanch.com/t/148016/Web-Services-Certification-SCDJWS/certification/Differences-between-targetNamespace-default-namespace
2. http://www.oracle.com/technology/pub/articles/srivastava_namespaces.html]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>257</wp:post_id>
		<wp:post_date>2009-09-29 04:56:00</wp:post_date>
		<wp:post_date_gmt>2009-09-28 17:56:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e7%ae%80%e8%af%b4xml%e7%9a%84namespace</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="chinese"><![CDATA[Chinese]]></category>
		<category domain="category" nicename="java"><![CDATA[Java]]></category>
		<category domain="post_tag" nicename="xml"><![CDATA[XML]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_blog</wp:meta_key>
			<wp:meta_value><![CDATA[jeff.familyyu.net]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_author</wp:meta_key>
			<wp:meta_value><![CDATA[Jeff Yu   (余昌)]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_429d160645182d8e72b48e90f5e50eb3_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[2385518741665010146]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_efficient_related_posts</wp:meta_key>
			<wp:meta_value><![CDATA[a:0:{}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_relation_threshold</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Openfire + jwchat + Tomcat = Realtime collaboration</title>
		<link>http://jeff.familyyu.net/2009/10/22/openfire-jwchat-tomcat-realtime-collaboration/</link>
		<pubDate>Wed, 21 Oct 2009 16:22:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang.wordpress.com/2009/10/22/openfire-jwchat-tomcat-realtime-collaboration</guid>
		<description></description>
		<content:encoded><![CDATA[If you are building a web application, you might need customers use IM client to get to you easily, and can communicate with you on real time. Then I would recommend the <a href="http://www.igniterealtime.org/projects/openfire/index.jsp">Openfire</a> (IM server) +<a href="http://blog.jwchat.org/jwchat/"> jwchat</a> (web IM) to build your real time collaboration. All of these two are open source. Openfire also has its enterprise edition.

Following are two links about how to setup these two. (both of them are written in Chinese).

1. <a href="http://www.javaeye.com/topic/154697?page=1">构建 基于openfire + jwchat 的 WEB IM</a>
2. <a href="http://www.cnblogs.com/bluespot/archive/2008/07/17/1243164.html">Openfire+jwchat linux 下安装记录</a>

I am using the Openfire 3.6.4. But the steps are the same as before.

Update (Oct-24-2009), if you want to build your own web IM to communicate with Jabber server, then you'd better check out the <a href="http://blog.jwchat.org/jsjac/">JSJAC library</a>. One common issue due to the XMLHttpRequest is that is unable to get resource across the domain. Good news is that you could either <a href="http://www.enavigo.com/2008/10/14/setting-up-jsjac-with-openfire-352/">use the Apache mod_proxy or url rewrite to do so</a>, or you deploy a JHB servlet like what jwchat war did.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>258</wp:post_id>
		<wp:post_date>2009-10-22 03:22:00</wp:post_date>
		<wp:post_date_gmt>2009-10-21 16:22:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>openfire-jwchat-tomcat-realtime-collaboration</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="chinese"><![CDATA[Chinese]]></category>
		<category domain="category" nicename="java"><![CDATA[Java]]></category>
		<category domain="post_tag" nicename="jwchat"><![CDATA[jwchat]]></category>
		<category domain="post_tag" nicename="openfire"><![CDATA[Openfire]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_blog</wp:meta_key>
			<wp:meta_value><![CDATA[jeff.familyyu.net]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_author</wp:meta_key>
			<wp:meta_value><![CDATA[Jeff Yu   (余昌)]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_429d160645182d8e72b48e90f5e50eb3_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[1711211538153749981]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_efficient_related_posts</wp:meta_key>
			<wp:meta_value><![CDATA[a:0:{}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_relation_threshold</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Create Database and user in Postgres and Mysql.</title>
		<link>http://jeff.familyyu.net/2009/10/29/create-database-and-user-in-postgres-and-mysql/</link>
		<pubDate>Thu, 29 Oct 2009 05:32:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang.wordpress.com/2009/10/29/create-database-and-user-in-postgres-and-mysql</guid>
		<description></description>
		<content:encoded><![CDATA[Since I worked in SOA area, haven't touched the database for couple years, although in some projects, I need to test against various database (Mysql, Postgres, Oracle etc), but it is very basic stuff, like create database, users etc.

This post basically is a memo for me, I need to work with various DBs from time to time, and think it is best to record it in my blog, instead of looking into the manual again. ;-). Also, you could see this is a follow-up post for my previous <a href="http://jeff.familyyu.net/2008/05/postgresql-installationconnection-in.html">postgres installation blog</a>.

1. <span style="text-decoration: underline;"><strong>Postgres</strong></span>

1) connect Postgres
<blockquote>psql -h localhost -U postgres&nbsp;</blockquote>
2) add user
<blockquote>create user jeff with password 'jeff'&nbsp;</blockquote>
3) create database
<blockquote>create database jeffdb&nbsp;</blockquote>
4) grant db to user
<blockquote>grant all privileges on database jeffdb to jeff&nbsp;</blockquote>
Log out with "q" command

Log in jeffdb through user jeff:
<blockquote>psql -d jeffdb -U jeff&nbsp;</blockquote>
2. <span style="text-decoration: underline;"><strong>Mysql</strong></span>

1) connect mysql
<blockquote>mysql -u root -p 'urpassword'&nbsp;</blockquote>
2) create database
<blockquote>create database jeffdb&nbsp;</blockquote>
3) allow user jeff to connect to the server from localhost using the password jeff
<blockquote>grant usage on *.* to jeff@localhost identified by 'jeff';&nbsp;</blockquote>
4)grant all privileges on the jeffdb database to this user
<blockquote>grant all privileges on jeffdb.* to jeff@localhost ;&nbsp;</blockquote>
Log out and log in through jeff user.
<blockquote>mysql -u jeff -p'jeff' jeffdb&nbsp;</blockquote>
[Reference]
1. <a href="http://www.cyberciti.biz/faq/howto-add-postgresql-user-account/">How to add postgres user and create db</a>
2. <a href="http://www.debuntu.org/how-to-create-a-mysql-database-and-set-privileges-to-a-user">Create mysql database and set privileges into a user</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>259</wp:post_id>
		<wp:post_date>2009-10-29 16:32:00</wp:post_date>
		<wp:post_date_gmt>2009-10-29 05:32:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>create-database-and-user-in-postgres-and-mysql</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="database"><![CDATA[Database]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_blog</wp:meta_key>
			<wp:meta_value><![CDATA[jeff.familyyu.net]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_author</wp:meta_key>
			<wp:meta_value><![CDATA[Jeff Yu   (余昌)]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_429d160645182d8e72b48e90f5e50eb3_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[1588944557961115976]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>JBoss AS5 MC articles and presentations.</title>
		<link>http://jeff.familyyu.net/2009/11/16/jboss-as5-mc-articles-and-presentations/</link>
		<pubDate>Sun, 15 Nov 2009 16:11:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang.wordpress.com/2009/11/16/jboss-as5-mc-articles-and-presentations</guid>
		<description></description>
		<content:encoded><![CDATA[<a href="http://in.relation.to/Bloggers/Ales">Ales</a> has written a series of <a href="http://www.jboss.org/jbossmc">JBoss Microcontainer</a>, which is the core of JBoss AS 5, articles at DZone.
<ol>
	<li><a href="http://soa.dzone.com/articles/a-look-inside-jboss-microconta">component models</a></li>
	<li><a href="http://soa.dzone.com/articles/a-look-inside-jboss-microconta-0">Advanced Dependency Injection and IoC </a></li>
	<li><a href="http://soa.dzone.com/news/jboss-virtual-file-system">the Virtual File System</a></li>
	<li><a href="http://java.dzone.com/articles/jboss-microcontainer-classloading">ClassLoading Layer</a></li>
</ol>
Also, in the youtube, we've got the four presentations from Scott Stark and Ales at JavaOne.
<ol>
	<li><a href="http://www.jboss.org/events/javaone/javaoneVideo10.html">JBoss AS5 Deployment Environment</a></li>
	<li><a href="http://www.jboss.org/events/javaone/javaoneVideo11.html">JBoss AS5 Component Mixture Patterns</a></li>
	<li><a href="http://www.jboss.org/events/javaone/javaoneVideo7.html">JBoss AS5 Classloading and OSGI</a></li>
	<li><a href="http://www.jboss.org/events/javaone/javaoneVideo6.html">JBoss Microcontainer Optimization</a></li>
</ol>
If you want to know more about JBoss Microcontainer, you wouldn't miss the <a href="http://jboss.org/file-access/default/members/jbossmc/freezone/docs/2.0.x/userGuide/index.html">user guide</a>, and <a href="http://www.jboss.org/jbossmc">its homepage</a>.

Happy learning. ;-)]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>260</wp:post_id>
		<wp:post_date>2009-11-16 03:11:00</wp:post_date>
		<wp:post_date_gmt>2009-11-15 16:11:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>jboss-as5-mc-articles-and-presentations</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="ioc"><![CDATA[IOC]]></category>
		<category domain="category" nicename="java"><![CDATA[Java]]></category>
		<category domain="category" nicename="jboss"><![CDATA[JBoss]]></category>
		<category domain="post_tag" nicename="microcontainer-2"><![CDATA[MicroContainer]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_blog</wp:meta_key>
			<wp:meta_value><![CDATA[jeff.familyyu.net]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_author</wp:meta_key>
			<wp:meta_value><![CDATA[Jeff Yu   (余昌)]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_429d160645182d8e72b48e90f5e50eb3_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[8662986262959891868]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_efficient_related_posts</wp:meta_key>
			<wp:meta_value><![CDATA[a:4:{i:0;a:4:{s:2:"ID";s:3:"175";s:10:"post_title";s:30:"Guice simplicity impressed me.";s:7:"matches";s:1:"1";s:9:"permalink";s:66:"http://jeff.familyyu.net/2007/11/18/guice-simplicity-impressed-me/";}i:1;a:4:{s:2:"ID";s:3:"174";s:10:"post_title";s:12:"Guice videos";s:7:"matches";s:1:"1";s:9:"permalink";s:49:"http://jeff.familyyu.net/2007/11/18/guice-videos/";}i:2;a:4:{s:2:"ID";s:3:"173";s:10:"post_title";s:24:"Spring 2.x IOC exploring";s:7:"matches";s:1:"1";s:9:"permalink";s:61:"http://jeff.familyyu.net/2007/11/18/spring-2-x-ioc-exploring/";}i:3;a:4:{s:2:"ID";s:3:"171";s:10:"post_title";s:26:"Spring 1.2.x IOC exploring";s:7:"matches";s:1:"1";s:9:"permalink";s:63:"http://jeff.familyyu.net/2007/11/17/spring-1-2-x-ioc-exploring/";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_relation_threshold</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Good presentation about XMPP and Web.</title>
		<link>http://jeff.familyyu.net/2009/12/04/good-presentation-about-xmpp-and-web/</link>
		<pubDate>Fri, 04 Dec 2009 06:55:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang.wordpress.com/2009/12/04/good-presentation-about-xmpp-and-web</guid>
		<description></description>
		<content:encoded><![CDATA[Jack Moffitt talked a presentation about <a href="http://www.infoq.com/presentations/Real-Time-Web-with-XMPP">XMPP and real time web</a>, it is published at InfoQ, don't miss it if you are trying to work with XMPP and Web, it is very hands-on, and technical oriented.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>261</wp:post_id>
		<wp:post_date>2009-12-04 17:55:00</wp:post_date>
		<wp:post_date_gmt>2009-12-04 06:55:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>good-presentation-about-xmpp-and-web</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="open-source"><![CDATA[Open Source]]></category>
		<category domain="category" nicename="others"><![CDATA[Others]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_blog</wp:meta_key>
			<wp:meta_value><![CDATA[jeff.familyyu.net]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_author</wp:meta_key>
			<wp:meta_value><![CDATA[Jeff Yu   (余昌)]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_429d160645182d8e72b48e90f5e50eb3_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[2075107097906767987]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_efficient_related_posts</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{i:0;a:4:{s:2:"ID";s:3:"199";s:10:"post_title";s:30:"Open source business in Redhat";s:7:"matches";s:1:"1";s:9:"permalink";s:67:"http://jeff.familyyu.net/2008/04/22/open-source-business-in-redhat/";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_relation_threshold</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>open source projects should really use Git</title>
		<link>http://jeff.familyyu.net/2009/12/06/open-source-projects-should-really-use-git/</link>
		<pubDate>Sat, 05 Dec 2009 15:05:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang.wordpress.com/2009/12/06/open-source-projects-should-really-use-git</guid>
		<description></description>
		<content:encoded><![CDATA[I am starting to work on one task in ODE, titled cleanup JPA impl (<a href="https://issues.apache.org/jira/browse/ODE-704">https://issues.apache.org/jira/browse/ODE-704</a>), basically it is a quite large refactoring on DAO layer of ODE project. Because I am not a ODE committer, It is not an easy job to get this task done.

After talked with <a href="http://rrusin.blogspot.com/">Rafal Rusin</a> on the ode IRC channel, he suggested that I create a git project in <a href="http://www.github.com/">github</a>, which clones the ode git repo, and then put my jpa refactoring experiment branch in github, once my code has finished, and passed all the tests, they can merge my branch into the ode trunk.

I've heard of <a href="http://git-scm.com/">Git</a> for a while, but didn't get a chance to use it, as currently I am still using the Subversion as SCM repository. One thing that I learnt from history is that try to avoid using branch in SVN or CVS as much as possible, it is really a headache for merging branch back to trunk, so this is very inconvenient for you to try some new feature, or some experiment codes.

Create a project at Github is very easy, if you have problems, <a href="http://help.github.com/">GitHub's help</a> is your friend. I have to say that Github did an awesome job on project hosting, it makes you very easy to browse your code, the diff message between version etc.

Watching the <a href="http://www.youtube.com/watch?v=4XpnKHJAok8">Linus' Git talk on Google Tech conf</a>, very interesting, totally agreed that one pain with centralized repository like CVS or SVN, is that you need to get the commit access for your contribution (I am not saying a small fix, or patch, I meant some large task, or feature etc, which would require multiple patches, and might take one or two weeks), like the case that I am hitting now. Alternatively, if you are hosting code repository by using Git, I can clone it from the url, and pull the changes into my local workspace to make it up-to-date, and then push it into some other repository, once I've finished my task, I will send you my code repository, and then you can take a look at those code to decide if you want to accept my code or not. In this case, I don't need to have a commit permission in advance. Also merge in Git is very easy, it makes collaboration really easy.

So, I would strongly recommend that every open source project should embrace the Git as scm tool, lets forget about Subversion, CVS. Lets embrace the branch. ;-)

couple resources that could help you get started with Git.
1. <a href="http://git-scm.com/">Git website</a>
2. <a href="http://www.github.com/">GitHub webiste</a>
3. <a href="http://learn.github.com/">Learn Git website</a> (Strongly recommend for learning)]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>262</wp:post_id>
		<wp:post_date>2009-12-06 02:05:00</wp:post_date>
		<wp:post_date_gmt>2009-12-05 15:05:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>open-source-projects-should-really-use-git</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="git"><![CDATA[Git]]></category>
		<category domain="category" nicename="scm"><![CDATA[SCM]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_blog</wp:meta_key>
			<wp:meta_value><![CDATA[jeff.familyyu.net]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_author</wp:meta_key>
			<wp:meta_value><![CDATA[Jeff Yu   (余昌)]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_429d160645182d8e72b48e90f5e50eb3_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[3842851491963895769]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_efficient_related_posts</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{i:0;a:4:{s:2:"ID";s:3:"736";s:10:"post_title";s:20:"Git merge or rebase?";s:7:"matches";s:1:"1";s:9:"permalink";s:56:"http://jeff.familyyu.net/2011/10/18/git-merge-or-rebase/";}i:1;a:4:{s:2:"ID";s:3:"731";s:10:"post_title";s:39:"Git Cheat Sheet for history/difference.";s:7:"matches";s:1:"1";s:9:"permalink";s:74:"http://jeff.familyyu.net/2011/10/16/git-cheat-sheet-for-historydifference/";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_relation_threshold</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>JPA implementation patterns</title>
		<link>http://jeff.familyyu.net/2009/12/06/jpa-implementation-patterns/</link>
		<pubDate>Sat, 05 Dec 2009 15:47:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang.wordpress.com/2009/12/06/jpa-implementation-patterns</guid>
		<description></description>
		<content:encoded><![CDATA[Found a very good series on<a href="http://blog.xebia.com/2009/07/13/jpa-implementation-patterns-wrap-up/"> JPA implementation patterns</a>, it was written by <a href="http://blog.xebia.com/author/vpartington/">Vincent Partington</a>.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>263</wp:post_id>
		<wp:post_date>2009-12-06 02:47:00</wp:post_date>
		<wp:post_date_gmt>2009-12-05 15:47:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>jpa-implementation-patterns</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="java"><![CDATA[Java]]></category>
		<category domain="post_tag" nicename="jpa"><![CDATA[JPA]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_blog</wp:meta_key>
			<wp:meta_value><![CDATA[jeff.familyyu.net]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_author</wp:meta_key>
			<wp:meta_value><![CDATA[Jeff Yu   (余昌)]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_429d160645182d8e72b48e90f5e50eb3_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[4910741719252530979]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_efficient_related_posts</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{i:0;a:4:{s:2:"ID";s:3:"219";s:10:"post_title";s:27:"Hibernate annotation of Map";s:7:"matches";s:1:"1";s:9:"permalink";s:64:"http://jeff.familyyu.net/2008/10/06/hibernate-annotation-of-map/";}i:1;a:4:{s:2:"ID";s:3:"213";s:10:"post_title";s:45:"Saving serializable object by using Hibernate";s:7:"matches";s:1:"1";s:9:"permalink";s:82:"http://jeff.familyyu.net/2008/08/04/saving-serializable-object-by-using-hibernate/";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_relation_threshold</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Install VirtualBox and Chrome beta in Fedora 10</title>
		<link>http://jeff.familyyu.net/2009/12/12/install-virtualbox-and-chrome-beta-in-fedora-10/</link>
		<pubDate>Sat, 12 Dec 2009 07:28:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang.wordpress.com/2009/12/12/install-virtualbox-and-chrome-beta-in-fedora-10</guid>
		<description></description>
		<content:encoded><![CDATA[Just installed the VirtualBox in my Fedora 10 box by following <a href="http://randell.ph/geeky/2009/03/27/install-windows-xp-sp2-via-sun-virtualbox-in-fedora-10/">this blog entry</a>. It works great. If you live in China, you know you have to use MS's Internet Explore in some cases, like online bank. So it would be neat that having a virtual box, and having a Windoows installed.  Noticed that google roll out the <a href="http://www.google.com/chrome">linux version of Chrome</a>, althought it is just beat version, tried it, seems good.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>264</wp:post_id>
		<wp:post_date>2009-12-12 18:28:00</wp:post_date>
		<wp:post_date_gmt>2009-12-12 07:28:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>install-virtualbox-and-chrome-beta-in-fedora-10</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="fedora"><![CDATA[Fedora]]></category>
		<category domain="category" nicename="os"><![CDATA[OS]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_blog</wp:meta_key>
			<wp:meta_value><![CDATA[jeff.familyyu.net]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_author</wp:meta_key>
			<wp:meta_value><![CDATA[Jeff Yu   (余昌)]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_429d160645182d8e72b48e90f5e50eb3_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[4347047405075446543]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_efficient_related_posts</wp:meta_key>
			<wp:meta_value><![CDATA[a:10:{i:0;a:4:{s:2:"ID";s:3:"231";s:10:"post_title";s:27:"Fedora environment setting.";s:7:"matches";s:1:"1";s:9:"permalink";s:63:"http://jeff.familyyu.net/2009/07/08/fedora-environment-setting/";}i:1;a:4:{s:2:"ID";s:3:"228";s:10:"post_title";s:40:"Fedora 10 使用NetworkManager配置ADSL";s:7:"matches";s:1:"1";s:9:"permalink";s:101:"http://jeff.familyyu.net/2009/06/03/fedora-10-%e4%bd%bf%e7%94%a8networkmanager%e9%85%8d%e7%bd%aeadsl/";}i:2;a:4:{s:2:"ID";s:3:"220";s:10:"post_title";s:45:"How to fix "Lock Assertion Failure" in Fedora";s:7:"matches";s:1:"1";s:9:"permalink";s:80:"http://jeff.familyyu.net/2008/10/08/how-to-fix-lock-assertion-failure-in-fedora/";}i:3;a:4:{s:2:"ID";s:3:"207";s:10:"post_title";s:28:"Install Firefox3 in Fedora8.";s:7:"matches";s:1:"1";s:9:"permalink";s:64:"http://jeff.familyyu.net/2008/06/18/install-firefox3-in-fedora8/";}i:4;a:4:{s:2:"ID";s:3:"205";s:10:"post_title";s:37:"Fedora8 in Lenovo T61P with Projector";s:7:"matches";s:1:"1";s:9:"permalink";s:74:"http://jeff.familyyu.net/2008/06/17/fedora8-in-lenovo-t61p-with-projector/";}i:5;a:4:{s:2:"ID";s:3:"203";s:10:"post_title";s:44:"Postgresql installation/connection in Fedora";s:7:"matches";s:1:"1";s:9:"permalink";s:80:"http://jeff.familyyu.net/2008/05/19/postgresql-installationconnection-in-fedora/";}i:6;a:4:{s:2:"ID";s:3:"202";s:10:"post_title";s:34:"Using wireless in Fedora8 for T61P";s:7:"matches";s:1:"1";s:9:"permalink";s:71:"http://jeff.familyyu.net/2008/05/05/using-wireless-in-fedora8-for-t61p/";}i:7;a:4:{s:2:"ID";s:3:"201";s:10:"post_title";s:26:"My Fedora8 Roadmap on T61P";s:7:"matches";s:1:"1";s:9:"permalink";s:63:"http://jeff.familyyu.net/2008/05/01/my-fedora8-roadmap-on-t61p/";}i:8;a:4:{s:2:"ID";s:3:"200";s:10:"post_title";s:34:"Dell D820 and Lenovo ThinkPad T61P";s:7:"matches";s:1:"1";s:9:"permalink";s:71:"http://jeff.familyyu.net/2008/05/01/dell-d820-and-lenovo-thinkpad-t61p/";}i:9;a:4:{s:2:"ID";s:3:"199";s:10:"post_title";s:30:"Open source business in Redhat";s:7:"matches";s:1:"1";s:9:"permalink";s:67:"http://jeff.familyyu.net/2008/04/22/open-source-business-in-redhat/";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_relation_threshold</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Hightlights from BPMN2.0</title>
		<link>http://jeff.familyyu.net/2010/01/07/hightlights-from-bpmn2-0/</link>
		<pubDate>Thu, 07 Jan 2010 09:13:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang.wordpress.com/2010/01/07/hightlights-from-bpmn2-0</guid>
		<description></description>
		<content:encoded><![CDATA[<a href="http://www.processmodeling.info/">Rick Geneva</a> has put a set of "hightlights from BPMN2.0" blog entries, very great tutorial on BPMN2.0.
<ol>
	<li><a href="http://www.processmodeling.info/posts/highlights-from-bpmn-2-0-activity-types/">Highlights from BPMN 2.0: Activity Types</a></li>
	<li><a href="http://www.processmodeling.info/posts/highlights-from-bpmn-2-0-artifact-shapes/">Highlights from BPMN 2.0: Artifact Shapes</a></li>
	<li><a href="http://www.processmodeling.info/posts/highlights-from-bpmn-2-0-event-gateways/">Highlights from BPMN 2.0: Event Gateways</a></li>
	<li><a href="http://www.processmodeling.info/posts/highlights-from-bpmn-2-0-non-interrupting-events/">Highlights from BPMN 2.0: Non-Interrupting Events</a></li>
	<li><a href="http://www.processmodeling.info/posts/highlights-from-bpmn-2-0-new-event-types/">Highlights from BPMN 2.0: New Event Types</a></li>
</ol>
I believe we will see more to come in this series.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>265</wp:post_id>
		<wp:post_date>2010-01-07 20:13:00</wp:post_date>
		<wp:post_date_gmt>2010-01-07 09:13:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>hightlights-from-bpmn2-0</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="bpm"><![CDATA[BPM]]></category>
		<category domain="post_tag" nicename="bpmn"><![CDATA[BPMN]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_blog</wp:meta_key>
			<wp:meta_value><![CDATA[jeff.familyyu.net]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_author</wp:meta_key>
			<wp:meta_value><![CDATA[Jeff Yu   (余昌)]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_429d160645182d8e72b48e90f5e50eb3_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[1788843336682837970]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_efficient_related_posts</wp:meta_key>
			<wp:meta_value><![CDATA[a:0:{}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_relation_threshold</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Using Oracle Instant and Sqlplus in Fedora</title>
		<link>http://jeff.familyyu.net/2010/01/15/using-oracle-instant-and-sqlplus-in-fedora/</link>
		<pubDate>Fri, 15 Jan 2010 11:02:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang.wordpress.com/2010/01/15/using-oracle-instant-and-sqlplus-in-fedora</guid>
		<description></description>
		<content:encoded><![CDATA[In case you are working against Oracle database, and don't want to install the whole Oracle DB mess, just want to use the sqlplus to connect to an existing db. Then see <a href="http://www.ioncannon.net/system-administration/114/using-oracle-instant-client-and-sqlplus/">this post</a>.<br /><br />I installed                           <a href="http://download.oracle.com/otn/linux/instantclient/112010/oracle-instantclient11.2-basic-11.2.0.1.0-1.i386.rpm" name="file28" class="boldbodylink">oracle-instantclient11.2-basic-11.2.0.1.0-1.i386.rpm</a> and <span class="textA">                         <a href="http://download.oracle.com/otn/linux/instantclient/112010/oracle-instantclient11.2-sqlplus-11.2.0.1.0-1.i386.rpm" name="file34" class="boldbodylink">oracle-instantclient11.2-sqlplus-11.2.0.1.0-1.i386.rpm</a> </span> in my box. (Fedora 10)<br /><br />Once you connect it successfully. simply run:<br /><blockquote>select table_name from tabs;<br /></blockquote> to show the tables from your connected database.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>266</wp:post_id>
		<wp:post_date>2010-01-15 22:02:00</wp:post_date>
		<wp:post_date_gmt>2010-01-15 11:02:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>using-oracle-instant-and-sqlplus-in-fedora</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="database"><![CDATA[Database]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_blog</wp:meta_key>
			<wp:meta_value><![CDATA[jeff.familyyu.net]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_author</wp:meta_key>
			<wp:meta_value><![CDATA[Jeff Yu   (余昌)]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_429d160645182d8e72b48e90f5e50eb3_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[7181177899397202577]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Connecting to various DBs by using ant&#039;s sql command.</title>
		<link>http://jeff.familyyu.net/2010/01/19/connecting-to-various-dbs-by-using-ants-sql-command/</link>
		<pubDate>Tue, 19 Jan 2010 06:12:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang.wordpress.com/2010/01/19/connecting-to-various-dbs-by-using-ants-sql-command</guid>
		<description></description>
		<content:encoded><![CDATA[As you see from <a href="http://jeff.familyyu.net/2010/01/using-oracle-instant-and-sqlplus-in.html">my previous blog</a>, I set up oracle client to connect to the remote DB server to do the debug. If you just deal with one DB server, this should be fine, what if you need to test against various DB servers, like mysql, postgres, oracle and sqlserver, which is <a href="http://jboss.org/riftsaw">our riftsaw project</a> need to be tested against, so instead of installing all of these clients, I am using the <a href="http://ant.apache.org/manual/">Apache Ant's sql command</a>.

I added a command to show all of tables in the db, below is the build.xml that I used.
[xml]
 &lt;target name=&quot;db.show.tables&quot;
             depends=&quot;log.properties, copy.ojdbc&quot;
             description=&quot;show tables in db&quot;&gt;
   &lt;sql driver=&quot;${driver}&quot;
        url=&quot;${connection.url}&quot;
        userid=&quot;${username}&quot;
        password=&quot;${password}&quot;
        onerror=&quot;continue&quot;
        print=&quot;true&quot;&gt;
     ${show.table.sql}
     &lt;classpath&gt;
       &lt;fileset dir=&quot;drivers&quot;&gt;
           &lt;include name=&quot;*.jar&quot;/&gt;
       &lt;/fileset&gt;
     &lt;/classpath&gt;
   &lt;/sql&gt;
   &lt;/target&gt;
[/xml]
Different database vendor has its own syntax for showing tables, as I defined below.
[xml]
&lt;condition property=&quot;show.table.sql&quot; value=&quot;show tables;&quot;&gt;
       &lt;equals arg1=&quot;${database}&quot; arg2=&quot;mysql&quot; /&gt;
 &lt;/condition&gt;
 

 &lt;condition property=&quot;show.table.sql&quot; value=&quot;select table_name from information_schema.tables where table_schema='public' and table_type='BASE TABLE';&quot;&gt;
       &lt;equals arg1=&quot;${database}&quot; arg2=&quot;postgres&quot; /&gt;
 &lt;/condition&gt;

 &lt;condition property=&quot;show.table.sql&quot; value=&quot;select table_name from tabs;&quot;&gt;
       &lt;equals arg1=&quot;${database}&quot; arg2=&quot;oracle&quot; /&gt;
 &lt;/condition&gt;

 &lt;condition property=&quot;show.table.sql&quot; value=&quot;select name from riftsaw..sysobjects where xtype = 'U';&quot;&gt;
       &lt;equals arg1=&quot;${database}&quot; arg2=&quot;sqlserver&quot; /&gt;
 &lt;/condition&gt;
[/xml]
By using this approach, you don't need to install those db clients, which could save you a lot of time.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>267</wp:post_id>
		<wp:post_date>2010-01-19 17:12:00</wp:post_date>
		<wp:post_date_gmt>2010-01-19 06:12:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>connecting-to-various-dbs-by-using-ants-sql-command</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="database"><![CDATA[Database]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_blog</wp:meta_key>
			<wp:meta_value><![CDATA[jeff.familyyu.net]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_author</wp:meta_key>
			<wp:meta_value><![CDATA[Jeff Yu   (余昌)]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_429d160645182d8e72b48e90f5e50eb3_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[4591717495078399823]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Maven Global Excludes tip.</title>
		<link>http://jeff.familyyu.net/2010/01/22/maven-global-excludes-tip/</link>
		<pubDate>Fri, 22 Jan 2010 08:39:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang.wordpress.com/2010/01/22/maven-global-excludes-tip</guid>
		<description></description>
		<content:encoded><![CDATA[If you work on a project that has ton of jar dependencies, and you want to exclude the 'xerces' (for example), you might end up using the exclusion multiple times, as a lot of jars are depending on the 'xerces'. In this case, you can use <a href="http://jlorenzen.blogspot.com/2009/06/maven-global-excludes.html">following way to achieve the 'global exclude' </a>in maven.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>268</wp:post_id>
		<wp:post_date>2010-01-22 19:39:00</wp:post_date>
		<wp:post_date_gmt>2010-01-22 08:39:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>maven-global-excludes-tip</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="maven"><![CDATA[Maven]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_blog</wp:meta_key>
			<wp:meta_value><![CDATA[jeff.familyyu.net]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_author</wp:meta_key>
			<wp:meta_value><![CDATA[Jeff Yu   (余昌)]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_429d160645182d8e72b48e90f5e50eb3_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[6974201377384010075]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Exploring ODE Part I: Bpel Compiler and its internal model.</title>
		<link>http://jeff.familyyu.net/2010/01/26/exploring-ode-part-i-bpel-compiler-and-its-internal-model/</link>
		<pubDate>Tue, 26 Jan 2010 10:32:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang.wordpress.com/2010/01/26/exploring-ode-part-i-bpel-compiler-and-its-internal-model</guid>
		<description></description>
		<content:encoded><![CDATA[In the <a href="http://ode.apache.org/">Apache ODE</a>, it has a bpelc, bpelc.bat script for you to compile the bpel file into ODE specific format file. We can use this tool to verify whether the bpel file's semantic is correct or not.

So in this blog entry, we will take a closer look at the architecture of this tool, (also known as <a href="http://svn.apache.org/repos/asf/ode/trunk/bpel-compiler/">bpel-compiler</a> module). The <a href="http://svn.apache.org/repos/asf/ode/trunk/tools/">ode-tool</a> module is just a wrapper for <a href="http://svn.apache.org/repos/asf/ode/trunk/bpel-compiler/">bpel-compiler</a> module.

Firstly, lets look at the bpel object model for BPEL file, it is known as 'bom' (bpel object model, I guess) in the source file. It put all of bpel object model into this package, and its base class is <span style="font-weight: bold;">BpelObject</span>, this base class extends the <span style="font-weight: bold;">sourceLocation</span> which is for keeping detail info of original bpel file. some known subclasses are: IfActivity, PartnerLink, PartnerLinkType, SequenceActivity etc. These subclasses share one feature, their constructor parameter type is Element.

Second concept here is called <span style="font-weight: bold;">ActivityGenerator</span>, as name implied, it is taking care of generating the Activities, like IfActivity, InvokeActivity, SequenceActivity.

The other concept is called <span style="font-weight: bold;">OBase</span>, this class is a base class for compiled bpel object, the known subclasses are: OAssign, OInvoke, which both extend from <span style="font-weight: bold;">OActivity</span>, others are like: OPartnerlink, OProperty..

So in the bpel-compiler module, the work procedure is convert the bpel file into BOM, and then using AcitivityGenerator to convert them into OBase (ODE inner Object model).

If you want to look at the source code, you can start with <span style="font-weight: bold;">BpelC</span> class, the method for it is called compile(File file), in this method, you would find it uses the <span style="font-weight: bold;">BpelObjectFactory</span> to convert the xml file into BOM, and then get the correct <span style="font-weight: bold;">BpelCompiler</span> implementation to convert the BOM object to compiled object representation. (objects extends OBase class).

In the bpel-compiler module's test part, we are using the bpel files that are put in the <a href="http://svn.apache.org/repos/asf/ode/trunk/bpel-scripts/">bpel-scripts</a> module, to do the unit test. If you want to learn about the bpel's activity, this is also a good resource.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>269</wp:post_id>
		<wp:post_date>2010-01-26 21:32:00</wp:post_date>
		<wp:post_date_gmt>2010-01-26 10:32:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>exploring-ode-part-i-bpel-compiler-and-its-internal-model</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="bpel"><![CDATA[BPEL]]></category>
		<category domain="category" nicename="bpm"><![CDATA[BPM]]></category>
		<category domain="category" nicename="java"><![CDATA[Java]]></category>
		<category domain="category" nicename="jboss"><![CDATA[JBoss]]></category>
		<category domain="post_tag" nicename="ode"><![CDATA[ODE]]></category>
		<category domain="post_tag" nicename="riftsaw-2"><![CDATA[RiftSaw]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_blog</wp:meta_key>
			<wp:meta_value><![CDATA[jeff.familyyu.net]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_author</wp:meta_key>
			<wp:meta_value><![CDATA[Jeff Yu   (余昌)]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_429d160645182d8e72b48e90f5e50eb3_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[6903238706216395634]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_efficient_related_posts</wp:meta_key>
			<wp:meta_value><![CDATA[a:7:{i:0;a:4:{s:2:"ID";s:3:"270";s:10:"post_title";s:38:"Exploring ODE Part II: JACOB Framework";s:7:"matches";s:1:"3";s:9:"permalink";s:74:"http://jeff.familyyu.net/2010/01/27/exploring-ode-part-ii-jacob-framework/";}i:1;a:4:{s:2:"ID";s:3:"276";s:10:"post_title";s:63:"Exploring ODE part V: implemenation of scheduler-simple module.";s:7:"matches";s:1:"2";s:9:"permalink";s:98:"http://jeff.familyyu.net/2010/07/26/exploring-ode-part-v-implemenation-of-scheduler-simple-module/";}i:2;a:4:{s:2:"ID";s:3:"273";s:10:"post_title";s:37:"Exploring ODE Part IV: BpelServer API";s:7:"matches";s:1:"2";s:9:"permalink";s:73:"http://jeff.familyyu.net/2010/02/21/exploring-ode-part-iv-bpelserver-api/";}i:3;a:4:{s:2:"ID";s:3:"271";s:10:"post_title";s:61:"Exploring ODE Part III: architecture and modules introduction";s:7:"matches";s:1:"2";s:9:"permalink";s:97:"http://jeff.familyyu.net/2010/01/30/exploring-ode-part-iii-architecture-and-modules-introduction/";}i:4;a:4:{s:2:"ID";s:3:"699";s:10:"post_title";s:44:"Upgrading Hibernate 3.3.2 to Hibernate 4.0.0";s:7:"matches";s:1:"1";s:9:"permalink";s:81:"http://jeff.familyyu.net/2011/09/08/upgrading-hibernate-3-3-2-to-hibernate-4-0-0/";}i:5;a:4:{s:2:"ID";s:3:"278";s:10:"post_title";s:47:"Getting/Using services deployed in JBoss AS 5.x";s:7:"matches";s:1:"1";s:9:"permalink";s:83:"http://jeff.familyyu.net/2010/09/28/gettingusing-services-deployed-in-jboss-as-5-x/";}i:6;a:4:{s:2:"ID";s:3:"255";s:10:"post_title";s:33:"PartnerLink,PartnerLinkType详解";s:7:"matches";s:1:"1";s:9:"permalink";s:81:"http://jeff.familyyu.net/2009/09/28/partnerlinkpartnerlinktype%e8%af%a6%e8%a7%a3/";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_relation_threshold</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>476</wp:comment_id>
			<wp:comment_author><![CDATA[Perlly]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://umpresisz.eu</wp:comment_author_url>
			<wp:comment_author_IP>128.204.199.142</wp:comment_author_IP>
			<wp:comment_date>2012-01-13 14:51:41</wp:comment_date>
			<wp:comment_date_gmt>2012-01-13 04:51:41</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>Gems form the internet...</strong>

[...]very few websites that happen to be detailed below, from our point of view are undoubtedly well worth checking out[...]…...]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Exploring ODE Part II: JACOB Framework</title>
		<link>http://jeff.familyyu.net/2010/01/27/exploring-ode-part-ii-jacob-framework/</link>
		<pubDate>Wed, 27 Jan 2010 07:50:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang.wordpress.com/2010/01/27/exploring-ode-part-ii-jacob-framework</guid>
		<description></description>
		<content:encoded><![CDATA[In this blog entry, we will look at the ODE's jacob framework, which is of a library taking care of concurrency processing. ODE use this lib underlying to solve the concurrency problem, ODE has <a href="http://ode.apache.org/jacob.html">a very good wiki</a> explains about this framework, but here I would like to highlight some concepts and introduce a simple example in the end.

Firstly, I am reusing the wiki page's example. Say we have a following process.

[xml]
1.invoke
2.receive
3.wait
4.invoke
[/xml]

and we have 2 parallel execution of the process, without Jacob framework the execution would be:

[xml]
1. Invoke1
2. Receive1
3. Wait1
4. Invoke1
5. Invoke2
6. Receive2
7. Wait2
8. Invoke2
[/xml]

so the above is totally sequentially, no concurrency at all. With the jacob framework, we might see following execution order.

[xml]
1. Invoke1
5. Invoke2
2. Receive1
3. Wait1
6. Receive2
7. Wait2
4. Invoke1
8. Invoke2
[/xml]

From a client standpoint, we've achieved concurrency of execution even with one thread.

Now, we will see following concepts in jacob:

1. <span style="text-decoration: underline;">JacobRunnable, JacobObject</span>
In the wiki page, the JacobRunnable, JacobObject is described as a simple closure. Just like above example shows, here we abstract the action like 'Invoke, Receive' etc as a JacobRunnable object. Personally I also see JacobRunnable as a command pattern, which implements the run method.

2. <span style="text-decoration: underline;">Channel</span>
Once we have had the JacobRunnable object, how do we connect JacobObject and ChannelListener? Here is where Channel comes to play, we can see that JacobRunnable as one end of the channel, and ChannelListener as the other end of the channel. The Channel implementation is used JDK's dynamic proxy, you can see it from <strong>ChannelFactory</strong>.

For every JacobRunnable or ChannelListener, it will take a Channel class in. It is not very useful if have the JacobRunnable without means to communicate.

3. <span style="text-decoration: underline;">ChannelListener</span>
In the wiki page, it is referred as MLs (MethodList), but I'd prefer to call it as Listener. With introduction of <span style="font-weight: bold;">Channel</span> object, we are able to pass the Channel object into our next activity or child activity, but we need to have a listener mechanism for the parent activity so that once the child activity finished, it is able to get notified and continues the flow.

4. <span style="text-decoration: underline;">@ChannelType annotion</span>
In the Jacob, we are using the '@ChannelType' annotation to generate the Channel and ChannelListener interfaces in the compile time.

5. <span style="text-decoration: underline;">JacobVPU, ExecutionQueueImpl</span>
As wiki page said, here are the responsibilities of JacboVPU and ExecutionQueueImpl.
1) JacobVPU is the place of Jacob processing.
2) ExecutionQueueImpl is the container for all artifacts (mostly channels and reactions) managed by JacobVPU.
3) JacobVPU is also responsible for persisting its internal state, like serialize or de-serialize the object.
4) Continuations (and hence JacobRunnables) don't "stay" in the VPU queues. They just get popped, executed and that's it.

Now, I will introduce an example that works with Jacob API to accomplish the above example. we are having three JacobObjects(Continuation), they are INVOKE, RECEIVE, WAIT. But for the simplicity purpose, I will just have INVOKE and RECEIVE. Also we will add a channel for their communication, I called it Demo, here is the code for Demo Channel.

[java]
@ChannelType
public interface Demo {
public void onSuccess(String successInfo);
public void onFailure(String errorString);
}
[/java]

as you read from the code, we are having two methods, one for successful case, the other is for failure. use either the maven tool or buildr, you would see the generated classes for this interface, they are DemoChannel and DemoChannelListener.

Next, we will see actions.

[java]
static class INVOKE extends JacobRunnable {
private DemoChannel _channel;

public INVOKE(DemoChannel channel) {
_channel = channel;
}

@Override
public void run() {
System.out.println(&quot;INVOKE Activity&quot;);

DemoChannel demoChannel2 = newChannel(DemoChannel.class, &quot;demo2&quot;);
instance(new RECIEVE(demoChannel2));
object(new DemoChannelListener(demoChannel2) {
public void onSuccess(String successInfo) {
 System.out.println(successInfo);
 _channel.onSuccess(&quot;INVOKE Done...&quot;);
}

public void onFailure(String errorString) {
 System.out.println(errorString);
}
});

}
}

static class RECIEVE extends JacobRunnable {
private DemoChannel _demoChannel;

public RECIEVE(DemoChannel demoChannel) {
_demoChannel = demoChannel;
}

@Override
public void run() {
System.out.println(&quot;Receive Activity&quot;);
_demoChannel.onSuccess(&quot;RECEIVE success...&quot;);
}
}
[/java]

For this example, I will add another action to start our process, it is called Process.

[xml]
static class Process extends JacobRunnable {

@Override
public void run() {
DemoChannel channel = newChannel(DemoChannel.class, &quot;demo&quot;);
instance(new INVOKE(channel));
object(new DemoChannelListener(channel) {
public void onSuccess(String successInfo) {
 System.out.println(successInfo);
 System.out.println(&quot;Process Done&quot;);
}

public void onFailure(String errorString) {
 System.out.println(errorString);
}
});
}

}
[/xml]

We will talk from Process class, basically, we've created a DemoChannel, and then we use 'instance(...)' method to add the 'activity/JacobRunnable' into the queue, use the 'object(....)' to define a listener for that channel.
In the INVOKE class, we've created a child activity that is called RECEIVE. Which puts RECEIVE class as part of INVOKE class. I know this is a bad example, it would be much better if I use a composite activity, like While or Sequence, but you know I am just being lazy. ;)

At last, we will use following code to execute this example:

[java]
public static void main(String[] args) throws Exception {
ExecutionQueueImpl soup = new ExecutionQueueImpl(null);
JacobVPU vpu = new JacobVPU(soup, new Process());

while(vpu.execute()) {
}

}
[/java]

Run this method, you would get following output.

[xml]
INVOKE Activity
Receive Activity
RECEIVE success...
INVOKE Done...
Process Done
[/xml]

If you want to look at the code by yourself, it lies in the <a href="http://svn.apache.org/repos/asf/ode/trunk/jacob/">ode-jacob</a> module, it extends the <a href="http://svn.apache.org/repos/asf/ode/trunk/jacob-ap/">ode-jacob-ap</a> module. Below are some classes that you'd look into. <span style="font-weight: bold;">CommSend</span>, <span style="font-weight: bold;">CommRecv</span>. Jacob wraps the JacobRunnable as CommSend, wraps the ChannelListener as CommRecv. And then uses the <span style="font-weight: bold;">CommGroup</span> to do the match.<span style="font-weight: bold;">ExecutionQueueImpl</span> is the container for <span style="font-weight: bold;">Continuation</span>, <span style="font-weight: bold;">ExecutionObject</span>, <span style="font-weight: bold;">Channel</span> etc. In the ExecutionQueueImpl class, you would find couple static classes, like ChannelFrame, MessageFrame... these classes are mostly used for serialized and de-serialized the object.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>270</wp:post_id>
		<wp:post_date>2010-01-27 18:50:00</wp:post_date>
		<wp:post_date_gmt>2010-01-27 07:50:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>exploring-ode-part-ii-jacob-framework</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="bpel"><![CDATA[BPEL]]></category>
		<category domain="category" nicename="bpm"><![CDATA[BPM]]></category>
		<category domain="category" nicename="java"><![CDATA[Java]]></category>
		<category domain="post_tag" nicename="ode"><![CDATA[ODE]]></category>
		<category domain="post_tag" nicename="riftsaw-2"><![CDATA[RiftSaw]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_blog</wp:meta_key>
			<wp:meta_value><![CDATA[jeff.familyyu.net]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_author</wp:meta_key>
			<wp:meta_value><![CDATA[Jeff Yu   (余昌)]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_429d160645182d8e72b48e90f5e50eb3_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[7615991349976091335]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_efficient_related_posts</wp:meta_key>
			<wp:meta_value><![CDATA[a:7:{i:0;a:4:{s:2:"ID";s:3:"269";s:10:"post_title";s:59:"Exploring ODE Part I: Bpel Compiler and its internal model.";s:7:"matches";s:1:"3";s:9:"permalink";s:94:"http://jeff.familyyu.net/2010/01/26/exploring-ode-part-i-bpel-compiler-and-its-internal-model/";}i:1;a:4:{s:2:"ID";s:3:"276";s:10:"post_title";s:63:"Exploring ODE part V: implemenation of scheduler-simple module.";s:7:"matches";s:1:"2";s:9:"permalink";s:98:"http://jeff.familyyu.net/2010/07/26/exploring-ode-part-v-implemenation-of-scheduler-simple-module/";}i:2;a:4:{s:2:"ID";s:3:"273";s:10:"post_title";s:37:"Exploring ODE Part IV: BpelServer API";s:7:"matches";s:1:"2";s:9:"permalink";s:73:"http://jeff.familyyu.net/2010/02/21/exploring-ode-part-iv-bpelserver-api/";}i:3;a:4:{s:2:"ID";s:3:"271";s:10:"post_title";s:61:"Exploring ODE Part III: architecture and modules introduction";s:7:"matches";s:1:"2";s:9:"permalink";s:97:"http://jeff.familyyu.net/2010/01/30/exploring-ode-part-iii-architecture-and-modules-introduction/";}i:4;a:4:{s:2:"ID";s:3:"699";s:10:"post_title";s:44:"Upgrading Hibernate 3.3.2 to Hibernate 4.0.0";s:7:"matches";s:1:"1";s:9:"permalink";s:81:"http://jeff.familyyu.net/2011/09/08/upgrading-hibernate-3-3-2-to-hibernate-4-0-0/";}i:5;a:4:{s:2:"ID";s:3:"278";s:10:"post_title";s:47:"Getting/Using services deployed in JBoss AS 5.x";s:7:"matches";s:1:"1";s:9:"permalink";s:83:"http://jeff.familyyu.net/2010/09/28/gettingusing-services-deployed-in-jboss-as-5-x/";}i:6;a:4:{s:2:"ID";s:3:"255";s:10:"post_title";s:33:"PartnerLink,PartnerLinkType详解";s:7:"matches";s:1:"1";s:9:"permalink";s:81:"http://jeff.familyyu.net/2009/09/28/partnerlinkpartnerlinktype%e8%af%a6%e8%a7%a3/";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_relation_threshold</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Exploring ODE Part III: architecture and modules introduction</title>
		<link>http://jeff.familyyu.net/2010/01/30/exploring-ode-part-iii-architecture-and-modules-introduction/</link>
		<pubDate>Fri, 29 Jan 2010 14:16:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang.wordpress.com/2010/01/30/exploring-ode-part-iii-architecture-and-modules-introduction</guid>
		<description></description>
		<content:encoded><![CDATA[In this blog entry, we will continue to explore the ODE source code. Typically, we should see the ODE's architecture in our first part of this series, but here I put it in the third part, as at that time, I was just trying to write a blog entry about the ODE's inner model about bpel file, didn't thought I will write this as a series.

Anyway, lets see the ODE's architecture diagram, which I copied it from the <a href="http://ode.apache.org/architectural-overview.html">ODE's architecture wiki page</a>.
<a href="http://jeff.familyyu.net/wp-content/uploads/2011/01/odearchitecture1.png"><img src="http://jeff.familyyu.net/wp-content/uploads/2011/01/odearchitecture1.png?w=300" border="0" alt="" /></a>
On <a href="http://jeff.familyyu.net/2010/01/exploring-apache-ode-source-code-part-i.html">our first part</a>, we look at the bpel compiler module, and we look at the JACOB framework on <a href="http://jeff.familyyu.net/2010/01/exploring-apache-ode-source-code-part.html">our second part</a>.

In this part, we will try to make an introduction to ODE's modules:

<span style="text-decoration: underline;"> ODE core modules</span>
1.bpel-api: It contains the api definition for ODE, some important packages are: <span style="font-weight: bold;">
</span>
<ul>
	<li>org.apache.ode.bpel.iapi: this is for integration interfaces, like Axis2 module will implement it.</li>
	<li>org.apache.ode.bpel.rapi: these interfaces are for runtime api that are implemented in the bpel-runtime module.</li>
	<li>org.apache.ode.bpel.pmapi: this is for the process management.</li>
	<li>org.apache.ode.bpel.evt: this is for the event.</li>
</ul>
2. bpel-runtimes: this module takes care of implementing the Bpel's Activities, like INVOKE, REPLY, WAIT by extending the JacobRunnable Object, also it is the place that includes the internal model for compiled Bpel file, and Channel definition. You would notice that it has v1 and v2 packages, thats for ODE 1.x and ODE 2.x respectively.
3. bpel-dao: this module is the API for DAO layer, currently, it doesn't include the DAO API for process store.
4. dao-jpa: currently it is the openjpa implementation for DAO.
5. dao-jpa-db: This is the DDL script for openjpa's impl.
6. dao-hibernate, dao-hibernate-db: these two are the Hibernate's impl for DAO, and its DDL scripts.
7. bpel-schemas: this is module that use xmlbeans to generate Java objects from xsd schemas, they are: deploymentDescriptor, (dd.xsd), pmapi.xsd (Process Management API), schedules.xsd, context.xsd.
8. bpel-scripts: this module is having those bpel files, it is used in bpel-compiler's test case.
9. bpel-compiler: this module is to convert the bpel file into ODE internal model for compiled bpel file.
10. il-common: this module is the common integration layer.
11. scheduler-simple: this module is the implementation of scheduler service.
12. bpel-store: this is the module takes charge of storing process from the filesystem, the artifact includes deploy.xml, .bpel, wsdl artifacts.
13. engine: this is the ode engine that uses the runtimes, dao, scheduler services.
14. bpel-ql: bpel query language.

<span style="text-decoration: underline;">JACOB framework module</span>
1. jacob-ap
2. jacob

<span style="text-decoration: underline;">Integration modules:</span>
1.<span style="text-decoration: underline;">axis2 integration:</span> axis2, axis2-war
2.<span style="text-decoration: underline;">jca integration:</span> bpel-api-jca, bpel-connector, jca-ra, jca-server
3.<span style="text-decoration: underline;">jbi integration:</span> jbi
4.<span style="text-decoration: underline;">extension:</span> extensions

<span style="text-decoration: underline;">some leftover modules are:</span>
1. tools: this is for the bpelc, sendsoap command line.
2. utils: utils for ODE project.
3. tasks: this is tasks for buildr tool.
4. distro: this is the module for building distro.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>271</wp:post_id>
		<wp:post_date>2010-01-30 01:16:00</wp:post_date>
		<wp:post_date_gmt>2010-01-29 14:16:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>exploring-ode-part-iii-architecture-and-modules-introduction</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="bpm"><![CDATA[BPM]]></category>
		<category domain="category" nicename="java"><![CDATA[Java]]></category>
		<category domain="post_tag" nicename="ode"><![CDATA[ODE]]></category>
		<category domain="post_tag" nicename="riftsaw-2"><![CDATA[RiftSaw]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_blog</wp:meta_key>
			<wp:meta_value><![CDATA[jeff.familyyu.net]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_author</wp:meta_key>
			<wp:meta_value><![CDATA[Jeff Yu   (余昌)]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_429d160645182d8e72b48e90f5e50eb3_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[2131173250257739620]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_efficient_related_posts</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{i:0;a:4:{s:2:"ID";s:3:"276";s:10:"post_title";s:63:"Exploring ODE part V: implemenation of scheduler-simple module.";s:7:"matches";s:1:"2";s:9:"permalink";s:98:"http://jeff.familyyu.net/2010/07/26/exploring-ode-part-v-implemenation-of-scheduler-simple-module/";}i:1;a:4:{s:2:"ID";s:3:"273";s:10:"post_title";s:37:"Exploring ODE Part IV: BpelServer API";s:7:"matches";s:1:"2";s:9:"permalink";s:73:"http://jeff.familyyu.net/2010/02/21/exploring-ode-part-iv-bpelserver-api/";}i:2;a:4:{s:2:"ID";s:3:"270";s:10:"post_title";s:38:"Exploring ODE Part II: JACOB Framework";s:7:"matches";s:1:"2";s:9:"permalink";s:74:"http://jeff.familyyu.net/2010/01/27/exploring-ode-part-ii-jacob-framework/";}i:3;a:4:{s:2:"ID";s:3:"269";s:10:"post_title";s:59:"Exploring ODE Part I: Bpel Compiler and its internal model.";s:7:"matches";s:1:"2";s:9:"permalink";s:94:"http://jeff.familyyu.net/2010/01/26/exploring-ode-part-i-bpel-compiler-and-its-internal-model/";}i:4;a:4:{s:2:"ID";s:3:"699";s:10:"post_title";s:44:"Upgrading Hibernate 3.3.2 to Hibernate 4.0.0";s:7:"matches";s:1:"1";s:9:"permalink";s:81:"http://jeff.familyyu.net/2011/09/08/upgrading-hibernate-3-3-2-to-hibernate-4-0-0/";}i:5;a:4:{s:2:"ID";s:3:"278";s:10:"post_title";s:47:"Getting/Using services deployed in JBoss AS 5.x";s:7:"matches";s:1:"1";s:9:"permalink";s:83:"http://jeff.familyyu.net/2010/09/28/gettingusing-services-deployed-in-jboss-as-5-x/";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_relation_threshold</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Apache CXF Web Service Development book.</title>
		<link>http://jeff.familyyu.net/2010/02/20/apache-cxf-web-service-development-book/</link>
		<pubDate>Sat, 20 Feb 2010 04:16:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang.wordpress.com/2010/02/20/apache-cxf-web-service-development-book</guid>
		<description></description>
		<content:encoded><![CDATA[<div style="float: left;"><a href="http://www.packtpub.com/apache-cxf-web-service-development/book"><img src="http://1.bp.blogspot.com/_4KnaH_XIr1w/S39lQ7I8BxI/AAAAAAAACSk/fw76wxZFwuw/s400/cxf-ws-dev.png" border="0" alt="" /></a></div>
<div style="margin-left: 120px;">

I was invited to review the new book about <a href="http://cxf.apache.org/">Apache CXF</a> from packtpub, it is called《<a href="http://www.packtpub.com/apache-cxf-web-service-development/book">Apache CXF Web Service Development</a>》by <a title="Naveen Balani" href="http://www.packtpub.com/author_view_profile/id/410">Naveen Balani</a> and                     <a title="Rajeev Hathi" href="http://www.packtpub.com/author_view_profile/id/411">Rajeev Hathi</a>.

From the table of content, it covers both web service and restful service in CXF, also had three chapters for the CXF's frontend, transport, interceptors, invoke etc, which are the essential concepts of CXF's architecture. So it definitely seems interesting to me. I will post more detailed review once I finished the book.

</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>272</wp:post_id>
		<wp:post_date>2010-02-20 15:16:00</wp:post_date>
		<wp:post_date_gmt>2010-02-20 04:16:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>apache-cxf-web-service-development-book</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="book"><![CDATA[Book]]></category>
		<category domain="post_tag" nicename="cxf"><![CDATA[CXF]]></category>
		<category domain="post_tag" nicename="review"><![CDATA[Review]]></category>
		<category domain="category" nicename="soa"><![CDATA[SOA]]></category>
		<category domain="category" nicename="web-service"><![CDATA[Web Service]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_blog</wp:meta_key>
			<wp:meta_value><![CDATA[jeff.familyyu.net]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_author</wp:meta_key>
			<wp:meta_value><![CDATA[Jeff Yu   (余昌)]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_429d160645182d8e72b48e90f5e50eb3_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[3900653942315283436]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_efficient_related_posts</wp:meta_key>
			<wp:meta_value><![CDATA[a:8:{i:0;a:4:{s:2:"ID";s:3:"710";s:10:"post_title";s:56:""Functional Programming for Java Developer" book review.";s:7:"matches";s:1:"2";s:9:"permalink";s:90:"http://jeff.familyyu.net/2011/09/17/functional-programming-for-java-developer-book-review/";}i:1;a:4:{s:2:"ID";s:3:"167";s:10:"post_title";s:30:"IMS rolled out its 0.1 version";s:7:"matches";s:1:"1";s:9:"permalink";s:67:"http://jeff.familyyu.net/2007/11/13/ims-rolled-out-its-0-1-version/";}i:2;a:4:{s:2:"ID";s:3:"146";s:10:"post_title";s:29:"CXF ServiceInfo Model diagram";s:7:"matches";s:1:"1";s:9:"permalink";s:66:"http://jeff.familyyu.net/2007/09/06/cxf-serviceinfo-model-diagram/";}i:3;a:4:{s:2:"ID";s:1:"6";s:10:"post_title";s:53:"[CXF]CXF中的两个概念:Invoker & PhaseInterceptor";s:7:"matches";s:1:"1";s:9:"permalink";s:121:"http://jeff.familyyu.net/2007/08/26/cxfcxf%e4%b8%ad%e7%9a%84%e4%b8%a4%e4%b8%aa%e6%a6%82%e5%bf%b5invoker-phaseinterceptor/";}i:4;a:4:{s:2:"ID";s:2:"10";s:10:"post_title";s:61:"[CXF]CXF当中的Configuration -- Spring2.0可扩展XML配置";s:7:"matches";s:1:"1";s:9:"permalink";s:141:"http://jeff.familyyu.net/2007/08/23/cxfcxf%e5%bd%93%e4%b8%ad%e7%9a%84configuration-spring2-0%e5%8f%af%e6%89%a9%e5%b1%95xml%e9%85%8d%e7%bd%ae/";}i:5;a:4:{s:2:"ID";s:2:"11";s:10:"post_title";s:26:"[CXF]CXF中重要概念Bus";s:7:"matches";s:1:"1";s:9:"permalink";s:91:"http://jeff.familyyu.net/2007/08/22/cxfcxf%e4%b8%ad%e9%87%8d%e8%a6%81%e6%a6%82%e5%bf%b5bus/";}i:6;a:4:{s:2:"ID";s:2:"13";s:10:"post_title";s:34:"[CXF]CXF中ServiceInfo的结构图";s:7:"matches";s:1:"1";s:9:"permalink";s:99:"http://jeff.familyyu.net/2007/08/16/cxfcxf%e4%b8%adserviceinfo%e7%9a%84%e7%bb%93%e6%9e%84%e5%9b%be/";}i:7;a:4:{s:2:"ID";s:2:"17";s:10:"post_title";s:30:"[CXF]一句话概括Apache CXF";s:7:"matches";s:1:"1";s:9:"permalink";s:95:"http://jeff.familyyu.net/2007/07/16/cxf%e4%b8%80%e5%8f%a5%e8%af%9d%e6%a6%82%e6%8b%acapache-cxf/";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_relation_threshold</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Exploring ODE Part IV: BpelServer API</title>
		<link>http://jeff.familyyu.net/2010/02/21/exploring-ode-part-iv-bpelserver-api/</link>
		<pubDate>Sat, 20 Feb 2010 15:22:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang.wordpress.com/2010/02/21/exploring-ode-part-iv-bpelserver-api</guid>
		<description></description>
		<content:encoded><![CDATA[If you look at the ODE source code, the BpelServer API is a very important one. In this entry, we will look at the class that how we use the BpelServer, for the ODE, lets look at the <a href="http://svn.apache.org/repos/asf/ode/trunk/axis2/src/main/java/org/apache/ode/axis2/ODEServer.java">ODEServer</a> source code.
<pre class="brush:java"> __log.debug("Initializing transaction manager");
 initTxMgr();
__log.debug("Creating data source.");
initDataSource();
__log.debug("Starting DAO.");
initDAO();
EndpointReferenceContextImpl eprContext = new EndpointReferenceContextImpl(this);                __log.debug("Initializing BPEL process store.");
initProcessStore(eprContext);
__log.debug("Initializing BPEL server.");
initBpelServer(eprContext);
 __log.debug("Initializing HTTP connection manager");
 initHttpConnectionManager();

// Register BPEL event listeners configured in axis2.properties file.
registerEventListeners();
registerMexInterceptors();
registerContextInterceptors();        .....</pre>
As above code shown:
<ul>
	<li>Initialized the TransactionManager, which will be used in the datasource and scheduler service.</li>
	<li>Created the data source.</li>
	<li>Created the DAOConnectionFactory, the extension API is BpelDAOConnectionFactory.</li>
	<li>Created the EndpointReferenceContext, which takes care of resolving EndpointReference.</li>
	<li>Created the Process Store, it takes care of process deploying, undeploying, list etc.</li>
	<li>Initializing the BpelServer, includes following actions: setMessageExchangeContext, setDaoConnectionFactory, setBindingContext, the BindingContext and the MessageExchangeContext are the extension points for communicating with partner services.</li>
	<li>Register the EventListners, MexInterceptors etc, these are all the APIs in BpelServer.</li>
</ul>
You also could see how we initialize the BpelServer in the <a href="http://svn.apache.org/repos/asf/ode/trunk/engine/src/test/java/org/apache/ode/bpel/runtime/MockBpelServer.java">MockBpelServer</a> class. In the <a href="http://www.jboss.org/riftsaw">Riftsaw project</a>,it is in the <a href="http://anonsvn.jboss.org/repos/riftsaw/trunk/runtime/engine/src/main/java/org/jboss/soa/bpel/runtime/engine/ode/BPELEngineImpl.java">BpelEngineImpl</a> class. In the Riftsaw project, we are adding another implementation for the ProcessStore that leverages the JBoss Application Server's Deployer mechanism, also we adding another implementation for the BindingContext that use the JAXWS based approach, which used the JBossWS to accomplish.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>273</wp:post_id>
		<wp:post_date>2010-02-21 02:22:00</wp:post_date>
		<wp:post_date_gmt>2010-02-20 15:22:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>exploring-ode-part-iv-bpelserver-api</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="bpm"><![CDATA[BPM]]></category>
		<category domain="category" nicename="java"><![CDATA[Java]]></category>
		<category domain="post_tag" nicename="ode"><![CDATA[ODE]]></category>
		<category domain="post_tag" nicename="riftsaw-2"><![CDATA[RiftSaw]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_blog</wp:meta_key>
			<wp:meta_value><![CDATA[jeff.familyyu.net]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_author</wp:meta_key>
			<wp:meta_value><![CDATA[Jeff Yu   (余昌)]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_429d160645182d8e72b48e90f5e50eb3_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[394947106435356473]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_efficient_related_posts</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{i:0;a:4:{s:2:"ID";s:3:"276";s:10:"post_title";s:63:"Exploring ODE part V: implemenation of scheduler-simple module.";s:7:"matches";s:1:"2";s:9:"permalink";s:98:"http://jeff.familyyu.net/2010/07/26/exploring-ode-part-v-implemenation-of-scheduler-simple-module/";}i:1;a:4:{s:2:"ID";s:3:"271";s:10:"post_title";s:61:"Exploring ODE Part III: architecture and modules introduction";s:7:"matches";s:1:"2";s:9:"permalink";s:97:"http://jeff.familyyu.net/2010/01/30/exploring-ode-part-iii-architecture-and-modules-introduction/";}i:2;a:4:{s:2:"ID";s:3:"270";s:10:"post_title";s:38:"Exploring ODE Part II: JACOB Framework";s:7:"matches";s:1:"2";s:9:"permalink";s:74:"http://jeff.familyyu.net/2010/01/27/exploring-ode-part-ii-jacob-framework/";}i:3;a:4:{s:2:"ID";s:3:"269";s:10:"post_title";s:59:"Exploring ODE Part I: Bpel Compiler and its internal model.";s:7:"matches";s:1:"2";s:9:"permalink";s:94:"http://jeff.familyyu.net/2010/01/26/exploring-ode-part-i-bpel-compiler-and-its-internal-model/";}i:4;a:4:{s:2:"ID";s:3:"699";s:10:"post_title";s:44:"Upgrading Hibernate 3.3.2 to Hibernate 4.0.0";s:7:"matches";s:1:"1";s:9:"permalink";s:81:"http://jeff.familyyu.net/2011/09/08/upgrading-hibernate-3-3-2-to-hibernate-4-0-0/";}i:5;a:4:{s:2:"ID";s:3:"278";s:10:"post_title";s:47:"Getting/Using services deployed in JBoss AS 5.x";s:7:"matches";s:1:"1";s:9:"permalink";s:83:"http://jeff.familyyu.net/2010/09/28/gettingusing-services-deployed-in-jboss-as-5-x/";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_relation_threshold</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>My Roadmap on Mac OS X</title>
		<link>http://jeff.familyyu.net/2010/07/23/my-roadmap-on-mac-os-x/</link>
		<pubDate>Thu, 22 Jul 2010 23:51:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang.wordpress.com/2010/07/23/my-roadmap-on-mac-os-x</guid>
		<description></description>
		<content:encoded><![CDATA[Just like what I did for <a href="http://jeff.familyyu.net/2008/05/my-fedora8-roadmap-on-t61p.html">my fedora roadmap</a>, here comes my Mac OS X one.

1. Instant message: Adium, <a href="http://adium.im/">http://adium.im/</a>
2. video chat: skype, <a href="http://www.skype.com/">http://www.skype.com</a>
3. irc client, colloquy, <a href="http://colloquy.info/">http://colloquy.info/</a>
4. chinese input, just use the built-in one directly, here is an post about the chinese input, and also can use the chinese language for the whole mac osx. <a href="http://appleclinic.wordpress.com/2008/04/16/chinese-text-input/">http://appleclinic.wordpress.com/2008/04/16/chinese-text-input/</a>
5. firefox, In case you still like to use the firefox in your mac box, yes, it works great. <a href="http://www.firefox.com/">http://www.firefox.com</a>
6. twitter client, twitterrific: <a href="http://iconfactory.com/software/twitterrific">http://iconfactory.com/software/twitterrific</a>
7. QQ, this one should be very china specific, :), good news is that we do have a <a href="http://im.qq.com/qq/mac/download.shtml">Mac OS X QQ</a> as beta right now.
8. QuickSilver, this is a new tool compared to what I had in both windows and linux, it makes people really easy to start application, you can download and install it from here. <a href="http://www.blacktree.com/">http://www.blacktree.com/</a>
9. Textmate, this one is a lot of rubyists choice on doing ruby on rails.. <a href="http://macromates.com/">http://macromates.com/</a>, not free though.
10. Skitch, <a href="http://skitch.com/">http://skitch.com/</a>, make it easy to share screenshot etc.
11. <a href="http://www.eclipse.org/">Eclipse</a>, this is still my preference for java programming.
12. <a href="http://www.macports.org/install.php">Macports</a>, this is a utility more like Fedora's Yum, Ubuntu's apt-get.
13. <a href="http://growl.info/">Growl</a>, this is a great software for the notifications.
14. <a href="http://growl.info/">dropbox</a>, this is a pretty good software if you want to sync stuff between mac and iphone.

If you want to install JDK5 in the snow leopard, here is a good solution to this problem, <a href="http://www.scribd.com/doc/22853741/Installing-Java-5-Back-on-Snow-Leopard">http://www.scribd.com/doc/22853741/Installing-Java-5-Back-on-Snow-Leopard</a>, Here I'd like to thank <a href="http://kurtstam.blogspot.com/">Kurt</a>, strong, liweinan for making some suggestions on these softwares. ;)

At last, this is what I had, <a href="http://skitch.com/jeffyu/dp3pm/fullscreen">http://skitch.com/jeffyu/dp3pm/fullscreen</a>. ;)

please let me know what else you believe that I should try out.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>274</wp:post_id>
		<wp:post_date>2010-07-23 10:51:00</wp:post_date>
		<wp:post_date_gmt>2010-07-22 23:51:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>my-roadmap-on-mac-os-x</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="mac-osx"><![CDATA[Mac OSX]]></category>
		<category domain="category" nicename="os"><![CDATA[OS]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_blog</wp:meta_key>
			<wp:meta_value><![CDATA[jeff.familyyu.net]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_author</wp:meta_key>
			<wp:meta_value><![CDATA[Jeff Yu   (余昌)]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_429d160645182d8e72b48e90f5e50eb3_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[7463609398369384382]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_efficient_related_posts</wp:meta_key>
			<wp:meta_value><![CDATA[a:0:{}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_relation_threshold</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Exploring ODE part V: implemenation of scheduler-simple module.</title>
		<link>http://jeff.familyyu.net/2010/07/26/exploring-ode-part-v-implemenation-of-scheduler-simple-module/</link>
		<pubDate>Mon, 26 Jul 2010 11:18:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang.wordpress.com/2010/07/26/exploring-ode-part-v-implemenation-of-scheduler-simple-module</guid>
		<description></description>
		<content:encoded><![CDATA[In Ode/RiftSaw, we make the process execution as asynchronous, which means that if you running a bpel process, we are using more than one thread to accomplish this invocation.

And this is what the scheduler-simple module for, it takes care of putting a task into database and pull tasks out of database and how to run them. Lets make a simple example here, say your bpel process has a invoke Activity to invoke an external web service. In Ode, just right before entering invoke Activity, we've created a job that captures this invoke activity information, and store it into the database. Because once we've started Ode Bpel Server, we already started a background thread that checks this ode_job table periodically, once we've found that there is a job needs to be executed, it will load it from database, put it into memory, and then submit it to the ExecutorService for execution.

In this blogpost, we will examine this module's architecture and important APIs.

First is the Task API, this is the parent class for Job and SchedulerTask.

[java]
class Task {
    /** Scheduled date/time. */
    public long schedDate;


    Task(long schedDate) {
        this.schedDate = schedDate;
    }
}
[/java]


It is very simple, just had a scheduled date for its execution.
Next, we will see the Job's API, Job is for invoking an external service and like. we've put all of important information into the JobDetail object.

[java]
class Job extends Task {
    private static final SimpleDateFormat DATE_FORMAT = new SimpleDateFormat(&quot;yyyy-MM-dd HH:mm:ss z&quot;);
    String jobId;
    boolean transacted;
    JobDetails detail;
    boolean persisted = true;

    public Job(long when, String jobId, boolean transacted, JobDetails jobDetail) {
        super(when);
        this.jobId = jobId;
        this.detail = jobDetail;
        this.transacted = transacted;
    }
....
}
[/java]


Now, lets look at another type of Task, which is called SchedulerTask.

[java]
private abstract class SchedulerTask extends Task implements Runnable {
    SchedulerTask(long schedDate) {
        super(schedDate);
    }
}
[/java]


This is an abstract class, its subclasses are: LoadImmediateTask, UpgradeJobsTask, CheckStaleNodes.

&nbsp;

To understand these tasks, it is better that we look at what SimpleScheduler class defined. In Ode, the job design was based around three time horizons: "immediate", "near future", and "everything else".
Immediate jobs (i.e. jobs that are about to be up) are written to the database and kept in an in-memory priority queue. When they execute, they are removed from the database. Near future jobs are placed in the database and assigned to the current node, however they are not stored in
memory. Periodically jobs are "upgraded" from near-future to immediate status, at which point they get loaded into memory. Jobs that are further out in time, are placed in the database without a node identifer; when they are ready to be "upgraded" to near-future jobs they are assigned to one
of the known live nodes. recovery is straight forward, with stale node identifiers being reassigned to known good nodes.

In terms of time, we defined two variables, one is: _immediateInterval and _nearFutureInterval.
if a job's scheduled date is between [now, now + _immediateInterval], it belongs to the "immediate" job.
while if it is in [now + _immediateInterval, now + _nearFutureInterval], it belongs to the "near future" job then.

You can check the SimpleScheduler.doLoadImmediate() and SimpleScheduler.doUpgrade() respectively for its logic.

Also, you may be aware that we've also had the CheckStaleNodes task, this is basically for clustering work, to
check if there are any stale nodes, if it has, we will move the assigned jobs over to other node by updating nodeId.

So now, we've seen different Tasks, like Jobs and SchedulerTask. Now, we will need an interface to run these Tasks, hence TaskRunner was introduced.

[java]
interface TaskRunner {
    public void runTask(Task task);
}
[/java]


Here is the implementation from SimpleScheduler.TaskRunner() method.

[java]
public void runTask(final Task task) {
    if (task instanceof Job) {
        Job job = (Job)task;
        if( job.detail.getDetailsExt().get(&quot;runnable&quot;) != null ) {
            runPolledRunnable(job);
        } else {
            runJob(job);
        }
    } else if (task instanceof SchedulerTask) {
        _exec.submit(new Callable() {
            public Void call() throws Exception {
                try {
                    ((SchedulerTask) task).run();
                } catch (Exception ex) {
                    __log.error(&quot;Error during SchedulerTask execution&quot;, ex);
                }
                return null;
            }
        });
    }
}
[/java]


As I said before, once we've start BpelServer, we will start a thread running, it only gets stopped only when the BpelServer is been stopped.
Thats called SchedulerThread.

&nbsp;

In this class, basically we had following members: PriorityBlockingQueue, this is queue for the immediate execution. TaskRunner, this is the
container for running Task. The logic for the running is quite straight forward.

[java]
/**
 * Pop items off the todo queue, and send them to the task runner for processing.
 */
public void run() {
    while (!_done) {
        _lock.lock();
        try {
            long nextjob;
            while ((nextjob = nextJobTime()) &amp;gt; 0 &amp;amp;&amp;amp; !_done)
                _activity.await(nextjob, TimeUnit.MILLISECONDS);


            if (!_done &amp;amp;&amp;amp; nextjob == 0) {
                Task task = _todo.take();
                _taskrunner.runTask(task);

            }
        } catch (InterruptedException ex) {
            ; // ignore
        } finally {
            _lock.unlock();
        }
    }
}
[/java]


Now that we've seen all of important APIs here, we will look at how we start SimpleScheduler when ODEServer is started.
excerpt from SimpleScheduler.start() method.

[java]
public synchronized void start() {
    if (_running)
        return;

    if (_exec == null)
        _exec = Executors.newCachedThreadPool();

    _todo.clearTasks(UpgradeJobsTask.class);
    _todo.clearTasks(LoadImmediateTask.class);
    _todo.clearTasks(CheckStaleNodes.class);
    _processedSinceLastLoadTask.clear();
    _outstandingJobs.clear();

    _knownNodes.clear();

    try {
        execTransaction(new Callable() {

            public Void call() throws Exception {
                _knownNodes.addAll(_db.getNodeIds());
                return null;
            }

        });
    } catch (Exception ex) {
        __log.error(&quot;Error retrieving node list.&quot;, ex);
        throw new ContextException(&quot;Error retrieving node list.&quot;, ex);
    }

    long now = System.currentTimeMillis();

    // Pretend we got a heartbeat...
    for (String s : _knownNodes) _lastHeartBeat.put(s, now);

    // schedule immediate job loading for now!
    _todo.enqueue(new LoadImmediateTask(now));

    // schedule check for stale nodes, make it random so that the nodes don't overlap.
    _todo.enqueue(new CheckStaleNodes(now + randomMean(_staleInterval)));

    // do the upgrade sometime (random) in the immediate interval.
    _todo.enqueue(new UpgradeJobsTask(now + randomMean(_immediateInterval)));

    _todo.start();
    _running = true;
}
[/java]


Also, please noted that we had two different types of JobProcessor, one is ordinary JobProcessor, the other one is PolledRunnableJobProcessor, which is meant for running some jobs that gets run periodically.

&nbsp;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>276</wp:post_id>
		<wp:post_date>2010-07-26 22:18:00</wp:post_date>
		<wp:post_date_gmt>2010-07-26 11:18:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>exploring-ode-part-v-implemenation-of-scheduler-simple-module</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="bpm"><![CDATA[BPM]]></category>
		<category domain="category" nicename="java"><![CDATA[Java]]></category>
		<category domain="post_tag" nicename="ode"><![CDATA[ODE]]></category>
		<category domain="post_tag" nicename="riftsaw-2"><![CDATA[RiftSaw]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_blog</wp:meta_key>
			<wp:meta_value><![CDATA[jeff.familyyu.net]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_author</wp:meta_key>
			<wp:meta_value><![CDATA[Jeff Yu   (余昌)]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_429d160645182d8e72b48e90f5e50eb3_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[116144034750999348]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_efficient_related_posts</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{i:0;a:4:{s:2:"ID";s:3:"273";s:10:"post_title";s:37:"Exploring ODE Part IV: BpelServer API";s:7:"matches";s:1:"2";s:9:"permalink";s:73:"http://jeff.familyyu.net/2010/02/21/exploring-ode-part-iv-bpelserver-api/";}i:1;a:4:{s:2:"ID";s:3:"271";s:10:"post_title";s:61:"Exploring ODE Part III: architecture and modules introduction";s:7:"matches";s:1:"2";s:9:"permalink";s:97:"http://jeff.familyyu.net/2010/01/30/exploring-ode-part-iii-architecture-and-modules-introduction/";}i:2;a:4:{s:2:"ID";s:3:"270";s:10:"post_title";s:38:"Exploring ODE Part II: JACOB Framework";s:7:"matches";s:1:"2";s:9:"permalink";s:74:"http://jeff.familyyu.net/2010/01/27/exploring-ode-part-ii-jacob-framework/";}i:3;a:4:{s:2:"ID";s:3:"269";s:10:"post_title";s:59:"Exploring ODE Part I: Bpel Compiler and its internal model.";s:7:"matches";s:1:"2";s:9:"permalink";s:94:"http://jeff.familyyu.net/2010/01/26/exploring-ode-part-i-bpel-compiler-and-its-internal-model/";}i:4;a:4:{s:2:"ID";s:3:"699";s:10:"post_title";s:44:"Upgrading Hibernate 3.3.2 to Hibernate 4.0.0";s:7:"matches";s:1:"1";s:9:"permalink";s:81:"http://jeff.familyyu.net/2011/09/08/upgrading-hibernate-3-3-2-to-hibernate-4-0-0/";}i:5;a:4:{s:2:"ID";s:3:"278";s:10:"post_title";s:47:"Getting/Using services deployed in JBoss AS 5.x";s:7:"matches";s:1:"1";s:9:"permalink";s:83:"http://jeff.familyyu.net/2010/09/28/gettingusing-services-deployed-in-jboss-as-5-x/";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_relation_threshold</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Install Mysql and Postgres in Mac OS through MacPorts</title>
		<link>http://jeff.familyyu.net/2010/08/19/install-mysql-and-postgres-in-mac-os-through-macports/</link>
		<pubDate>Thu, 19 Aug 2010 01:54:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang.wordpress.com/2010/08/19/install-mysql-and-postgres-in-mac-os-through-macports</guid>
		<description></description>
		<content:encoded><![CDATA[Here are two greats links on how to installing mysql and postgres on to your Mac OS.<br /><br />1.<a href="http://shifteleven.com/articles/2008/03/21/installing-postgresql-on-leopard-using-macports">Installing PostgreSQL on Leopard using MacPorts</a><br />2.<a href="http://matthewcarriere.com/2008/04/02/installing-mysql-on-mac-os-x-leopard-using-macports/">Installing MySQL on Mac OS X Leopard using MacPorts</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>277</wp:post_id>
		<wp:post_date>2010-08-19 12:54:00</wp:post_date>
		<wp:post_date_gmt>2010-08-19 01:54:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>install-mysql-and-postgres-in-mac-os-through-macports</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="database"><![CDATA[Database]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_blog</wp:meta_key>
			<wp:meta_value><![CDATA[jeff.familyyu.net]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_author</wp:meta_key>
			<wp:meta_value><![CDATA[Jeff Yu   (余昌)]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_429d160645182d8e72b48e90f5e50eb3_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[4857137714824520918]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Getting/Using services deployed in JBoss AS 5.x</title>
		<link>http://jeff.familyyu.net/2010/09/28/gettingusing-services-deployed-in-jboss-as-5-x/</link>
		<pubDate>Tue, 28 Sep 2010 04:03:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeffyuchang.wordpress.com/2010/09/28/gettingusing-services-deployed-in-jboss-as-5-x</guid>
		<description></description>
		<content:encoded><![CDATA[JBoss AS Version 5 and above used the <a href="http://jboss.org/jbossmc">JBoss MicroContainer</a> project to accomplish the service management/dependency injection. If we want to write a service that uses a JBoss Server service, like the 'HAPartitionService' for example, the below shows several ways that can be done.

<span style="text-decoration: underline;">1. Using JBoss MC's xml syntax</span>
This is the most common and recommended way to do. Below is the <a href="http://www.jboss.org/riftsaw">JBoss RiftSaw</a> Clustering service that uses the 'HAPartitonService' from JBoss AS Cluster.

[xml]
   &lt;bean name=&quot;RiftSawClusteringService&quot; class=&quot;org.jboss.soa.bpel.clustering.JBossClusteringService&quot;&gt;
   	 &lt;property name=&quot;haPartition&quot;&gt;&lt;inject bean=&quot;HAPartition&quot; /&gt;&lt;/property&gt;
   	 &lt;property name=&quot;bpelEngineName&quot;&gt;bpel/Engine&lt;/property&gt;
   	 &lt;depends&gt;BPELEngine&lt;/depends&gt;
   &lt;/bean&gt;
[/xml]


See Ales' <a href="http://java.dzone.com/articles/a-look-inside-jboss-microconta-0">Advanced Dependency Injections article</a> for more about MC's xml syntax.

&nbsp;

<span style="text-decoration: underline;">2. Using JBoss MC's service programmatically</span>
This way actually is the main topic for this blog entry. If you are a <a href="http://www.springframework.org">Spring framework</a> user, you would know you can use BeanFactory or ApplicationContext to get the service bean. Then in JBoss, you would wonder, whats the equivalent way to do this?

1) org.jboss.kernel.Kernel, this is the service that has the KernelController and ControllerContext that we need for getting the service. so firstly, you can define a service in -jboss-bean.xml that injects the Kernel service, like the following:

[xml]
&lt;!--    Locate the single instance of the kernel    --&gt;
&lt;bean name=&quot;org.jboss.soa.bpel.runtime.util:service=KernelLocator&quot;
     class=&quot;org.jboss.soa.bpel.runtime.integration.KernelLocator&quot;&gt;
    &lt;property name=&quot;kernel&quot;&gt;
      &lt;inject bean=&quot;jboss.kernel:service=Kernel&quot; /&gt;
    &lt;/property&gt;
&lt;/bean&gt;
[/xml]


We've defined above class as following:

[java]
package org.jboss.soa.bpel.runtime.integration;
public class KernelLocator{
  private static Kernel kernel;
  public static Kernel getKernel()  {    return KernelLocator.kernel;  }
  public void setKernel(Kernel kernel)  {    KernelLocator.kernel = kernel;  }
}
[/java]


2) Use the KernelController and ControllerContext to get the service that we defined in *-jboss-bean.xml.
Below is the code to actually obtain the started service out of JBoss AS.

[java]
public class KernelAwareSPIFactory{
   @SuppressWarnings(&quot;unchecked&quot;)
   public &lt;T&gt; T getKernelProvidedSPI(String beanName, Class&lt;T&gt; spiArtifact)   {
      KernelController controller = KernelLocator.getKernel().getController();
      ControllerContext ctx = controller.getInstalledContext(beanName);
      return (T)ctx.getTarget();   }
}
[/java]


In the end, let's take an example from <a href="http://jboss.org/riftsaw">RiftSaw code base</a> to show how it was used.

&nbsp;

In RiftSaw, we've defined a ServerConfig interface.

[java]
public interface ServerConfig{
  /** The default bean name */
  String BEAN_NAME = &quot;org.jboss.soa.bpel.runtime.util:service=ServerConfig&quot;;

  String getImplementationTitle();

  String getImplementationVersion();

  File getServerTempDir();

  File getServerDataDir();

  String getWebServiceHost();

  int getWebServicePort();

  .....
}
[/java]


And then we've had the ServerConfigImpl class.

[java]
public class ServerConfigImpl implements ServerConfig{  ....}
[/java]


With this implementation, we've defined the ServerConfig service in the *-jboss-bean.xml as following.

[java]
&lt;!--       ServerConfig    --&gt;
 &lt;bean name=&quot;org.jboss.soa.bpel.runtime.util:service=ServerConfig&quot;
        class=&quot;org.jboss.soa.bpel.runtime.integration.ServerConfigImpl&quot;&gt;
    &lt;property name=&quot;mbeanServer&quot;&gt;
     &lt;inject bean=&quot;JMXKernel&quot; property=&quot;mbeanServer&quot;/&gt;
    &lt;/property&gt;
    &lt;property name=&quot;webServiceHost&quot;&gt;${jboss.bind.address}&lt;/property&gt;
  &lt;/bean&gt;
[/java]


Now, finally let's see how we get this ServerConfig Service in our code.

[java]
ServerConfig = new KernelAwareSPIFactory()
               .getKernelProvidedSPI(&quot;org.jboss.soa.bpel.runtime.util:service=ServerConfig&quot;, ServerConfig.class
[/java]


And then, here you go, you've got the ServerConfig service that is in the JBoss AS.

&nbsp;

Hope this can help people who are doing integration with JBoss AS a little bit.

PS: Thanks <a href="http://www.jroller.com/gmazza/">Glen</a> for pointing out some grammar errors that I did earlier. As what we used to say "your patch has been applied, thanks a lot. ;)"]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>278</wp:post_id>
		<wp:post_date>2010-09-28 15:03:00</wp:post_date>
		<wp:post_date_gmt>2010-09-28 04:03:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>gettingusing-services-deployed-in-jboss-as-5-x</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="java"><![CDATA[Java]]></category>
		<category domain="category" nicename="jboss"><![CDATA[JBoss]]></category>
		<category domain="post_tag" nicename="riftsaw-2"><![CDATA[RiftSaw]]></category>
		<wp:postmeta>
			<wp:meta_key>_searchme</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_blog</wp:meta_key>
			<wp:meta_value><![CDATA[jeff.familyyu.net]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_author</wp:meta_key>
			<wp:meta_value><![CDATA[Jeff Yu   (余昌)]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogger_429d160645182d8e72b48e90f5e50eb3_permalink</wp:meta_key>
			<wp:meta_value><![CDATA[5500447831782508804]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_efficient_related_posts</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{i:0;a:4:{s:2:"ID";s:3:"699";s:10:"post_title";s:44:"Upgrading Hibernate 3.3.2 to Hibernate 4.0.0";s:7:"matches";s:1:"1";s:9:"permalink";s:81:"http://jeff.familyyu.net/2011/09/08/upgrading-hibernate-3-3-2-to-hibernate-4-0-0/";}i:1;a:4:{s:2:"ID";s:3:"276";s:10:"post_title";s:63:"Exploring ODE part V: implemenation of scheduler-simple module.";s:7:"matches";s:1:"1";s:9:"permalink";s:98:"http://jeff.familyyu.net/2010/07/26/exploring-ode-part-v-implemenation-of-scheduler-simple-module/";}i:2;a:4:{s:2:"ID";s:3:"273";s:10:"post_title";s:37:"Exploring ODE Part IV: BpelServer API";s:7:"matches";s:1:"1";s:9:"permalink";s:73:"http://jeff.familyyu.net/2010/02/21/exploring-ode-part-iv-bpelserver-api/";}i:3;a:4:{s:2:"ID";s:3:"271";s:10:"post_title";s:61:"Exploring ODE Part III: architecture and modules introduction";s:7:"matches";s:1:"1";s:9:"permalink";s:97:"http://jeff.familyyu.net/2010/01/30/exploring-ode-part-iii-architecture-and-modules-introduction/";}i:4;a:4:{s:2:"ID";s:3:"270";s:10:"post_title";s:38:"Exploring ODE Part II: JACOB Framework";s:7:"matches";s:1:"1";s:9:"permalink";s:74:"http://jeff.familyyu.net/2010/01/27/exploring-ode-part-ii-jacob-framework/";}i:5;a:4:{s:2:"ID";s:3:"269";s:10:"post_title";s:59:"Exploring ODE Part I: Bpel Compiler and its internal model.";s:7:"matches";s:1:"1";s:9:"permalink";s:94:"http://jeff.familyyu.net/2010/01/26/exploring-ode-part-i-bpel-compiler-and-its-internal-model/";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_relation_threshold</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Upgrading Hibernate 3.3.2 to Hibernate 4.0.0</title>
		<link>http://jeff.familyyu.net/2011/09/08/upgrading-hibernate-3-3-2-to-hibernate-4-0-0/</link>
		<pubDate>Thu, 08 Sep 2011 09:48:48 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeff.familyyu.net/?p=699</guid>
		<description></description>
		<content:encoded><![CDATA[As you may know, <a href="http://www.jboss.org/jbossas">JBoss AS 7</a> is incredible fast and low-memory, and it comes with Hibernate 4.0.0 by default. Since AS 7.0.1, it is easy for you to support both Hibernate 3.x  and Hibernate 4.0.0 under JBoss AS, thanks to the modular classpath here. If you want to run Hibernate 3.x under AS7 along with Hibernate 4, you should check out <a href="http://in.relation.to/Bloggers/UsingADifferentPersistenceProviderWithAS701">this blog entry </a>and <a href="https://docs.jboss.org/author/display/AS7/JPA+Reference+Guide">this documentation</a>.

In <a href="https://github.com/riftsaw">RiftSaw 3</a> development, we are taking this opportunity to upgrading its JPA layer from JPA 1.0 to JPA 2.0, as JPA 2.0 is back compatible, it shouldn't be an big issue. However, we've implemented the <a href="http://www.docjar.com/html/api/org/hibernate/connection/ConnectionProvider.java.html">ConnectionProvider</a> and <a href="http://www.docjar.com/html/api/org/hibernate/transaction/TransactionManagerLookup.java.html">TransactionManagerLookup</a> interfaces, since we've created the Datasource and TransactionManager on our own, we need to implement these two interfaces to ask Hibernate to use our own one.

In Hibernate 4.x, the whole package has been split into three categories, API/Impl/SPI.  So the ConnectionProvider class has been re-packaged at: <strong>org.hibernate.service.jdbc.connections.spi.ConnectionProvider</strong>, if you see the <a href="http://grepcode.com/file/repo1.maven.org/maven2/org.hibernate/hibernate-core/4.0.0.Beta3/org/hibernate/service/jta/platform/internal/JBossAppServerJtaPlatform.java">internal implementation</a> of this, you would also notice that it also implements the <a href="http://grepcode.com/file/repository.jboss.org/nexus/content/repositories/releases/org.hibernate/hibernate-core/4.0.0.Alpha2/org/hibernate/service/spi/Configurable.java">Configurable</a> and <a href="http://grepcode.com/file/repository.jboss.org/nexus/content/repositories/releases/org.hibernate/hibernate-core/4.0.0.Alpha2/org/hibernate/service/spi/Stoppable.java?av=f">Stoppable</a>. The Configurable interface allows you to access to the Hibernate's properties, which is kept as Map. It is much like Spring's BeanNameAware interface, where you get to access to the BeanName. So below is the code snippet that I used for my ConnectionProvider.

[java]
public class DataSourceConnectionProvider implements ConnectionProvider, Configurable, Stoppable  {

  private Properties _props;

  private boolean available = true;

  public DataSourceConnectionProvider() {
  }

  @SuppressWarnings( {&quot;unchecked&quot;})
  public void configure(Map properties) {
	 _props = new Properties();
	 _props.putAll(properties);
  }

  public Connection getConnection() throws SQLException {
	if (!available) {
		throw new HibernateException( &quot;Provider is closed!&quot; );
	}
    Connection c = HibernateUtil.getConnection(_props);
    DbIsolation.setIsolationLevel(c);
    return c;
  }

  public void closeConnection(Connection con) throws SQLException {
    con.close();
  }

  public boolean supportsAggressiveRelease() {
    return true;
  }

  public boolean isUnwrappableAs(Class unwrapType) {
		return ConnectionProvider.class.equals(unwrapType) ||
				DataSourceConnectionProvider.class.isAssignableFrom(unwrapType);
  }

  @SuppressWarnings( {&quot;unchecked&quot;})
  public  T unwrap(Class unwrapType) {
		if (ConnectionProvider.class.equals(unwrapType) ||
				DataSourceConnectionProvider.class.isAssignableFrom(unwrapType)) {
			return (T) this;
		} else {
			throw new UnknownUnwrapTypeException( unwrapType );
		}
  }

  public void stop() {
	available = false;
  }
}
[/java]

For the TransactionManagerLookup interface, you would get WARN  saying this API has been deprecated ( I believe it has been deprecated before 4.x, but I didn't get a chance to upgrade it until now), we should implement the <strong>org.hibernate.service.jta.platform.spi.JtaPlatform </strong>SPI instead, and set it to the 'hibernate.transaction.jta.platform' property. Instead of having a class that implement the JtaPlatform SPI directly, I've subclassed it from the  <a href="http://grepcode.com/file/repo1.maven.org/maven2/org.hibernate/hibernate-core/4.0.0.Beta5/org/hibernate/service/jta/platform/internal/AbstractJtaPlatform.java#AbstractJtaPlatform">AbstractJtaPlatform</a> class, so that I've only needed to override two interfaces. Below is the code snippet for my custom JtaPlatform impl.

[java]/**
 *
 * uses {@link HibernateUtil} to obtain the JTA {@link TransactionManager} object.
 *
 * @author Jeff Yu
 *
 */
public class OdeJtaPlatform extends AbstractJtaPlatform {

	private Properties properties = new Properties();

	public void configure(Map configValues) {
		super.configure(configValues);
		properties.putAll(configValues);
	}

	@Override
	protected TransactionManager locateTransactionManager() {
		return HibernateUtil.getTransactionManager(properties);
	}

	@Override
	protected UserTransaction locateUserTransaction() {
		throw new UnsupportedOperationException(&quot;locateUserTransaction is not supported. Use the locateTransactionManager instead.&quot;);
	}

} [/java]

And then when you create your entityManagerFactory, remember to pass the following properties in.

[java]props.put(Environment.CONNECTION_PROVIDER, DataSourceConnectionProvider.class.getName());
props.put(Environment.JTA_PLATFORM, OdeJtaPlatform.class.getName());[/java]

Done, the custom ConnectionProvider and JtaPlatform implementation should be all set now.

Hope this will help you do the Hibernate upgrade at some point. Here, I'd like to thanks <a href="http://in.relation.to/Bloggers/StrongLiu">Strong Liu</a> to send the helpful links to me on this upgrading. :-)]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>699</wp:post_id>
		<wp:post_date>2011-09-08 19:48:48</wp:post_date>
		<wp:post_date_gmt>2011-09-08 09:48:48</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>upgrading-hibernate-3-3-2-to-hibernate-4-0-0</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="hibernate"><![CDATA[Hibernate]]></category>
		<category domain="category" nicename="java"><![CDATA[Java]]></category>
		<category domain="category" nicename="jboss"><![CDATA[JBoss]]></category>
		<category domain="post_tag" nicename="riftsaw-2"><![CDATA[RiftSaw]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_efficient_related_posts</wp:meta_key>
			<wp:meta_value><![CDATA[a:8:{i:0;a:4:{s:2:"ID";s:3:"278";s:10:"post_title";s:47:"Getting/Using services deployed in JBoss AS 5.x";s:7:"matches";s:1:"1";s:9:"permalink";s:83:"http://jeff.familyyu.net/2010/09/28/gettingusing-services-deployed-in-jboss-as-5-x/";}i:1;a:4:{s:2:"ID";s:3:"276";s:10:"post_title";s:63:"Exploring ODE part V: implemenation of scheduler-simple module.";s:7:"matches";s:1:"1";s:9:"permalink";s:98:"http://jeff.familyyu.net/2010/07/26/exploring-ode-part-v-implemenation-of-scheduler-simple-module/";}i:2;a:4:{s:2:"ID";s:3:"273";s:10:"post_title";s:37:"Exploring ODE Part IV: BpelServer API";s:7:"matches";s:1:"1";s:9:"permalink";s:73:"http://jeff.familyyu.net/2010/02/21/exploring-ode-part-iv-bpelserver-api/";}i:3;a:4:{s:2:"ID";s:3:"271";s:10:"post_title";s:61:"Exploring ODE Part III: architecture and modules introduction";s:7:"matches";s:1:"1";s:9:"permalink";s:97:"http://jeff.familyyu.net/2010/01/30/exploring-ode-part-iii-architecture-and-modules-introduction/";}i:4;a:4:{s:2:"ID";s:3:"270";s:10:"post_title";s:38:"Exploring ODE Part II: JACOB Framework";s:7:"matches";s:1:"1";s:9:"permalink";s:74:"http://jeff.familyyu.net/2010/01/27/exploring-ode-part-ii-jacob-framework/";}i:5;a:4:{s:2:"ID";s:3:"269";s:10:"post_title";s:59:"Exploring ODE Part I: Bpel Compiler and its internal model.";s:7:"matches";s:1:"1";s:9:"permalink";s:94:"http://jeff.familyyu.net/2010/01/26/exploring-ode-part-i-bpel-compiler-and-its-internal-model/";}i:6;a:4:{s:2:"ID";s:3:"219";s:10:"post_title";s:27:"Hibernate annotation of Map";s:7:"matches";s:1:"1";s:9:"permalink";s:64:"http://jeff.familyyu.net/2008/10/06/hibernate-annotation-of-map/";}i:7;a:4:{s:2:"ID";s:3:"213";s:10:"post_title";s:45:"Saving serializable object by using Hibernate";s:7:"matches";s:1:"1";s:9:"permalink";s:82:"http://jeff.familyyu.net/2008/08/04/saving-serializable-object-by-using-hibernate/";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_relation_threshold</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>&quot;Functional Programming for Java Developer&quot; book review.</title>
		<link>http://jeff.familyyu.net/2011/09/17/functional-programming-for-java-developer-book-review/</link>
		<pubDate>Sat, 17 Sep 2011 04:32:37 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeff.familyyu.net/?p=710</guid>
		<description></description>
		<content:encoded><![CDATA[<div style="float: left;"><a href="http://shop.oreilly.com/product/0636920021667.do"><img class="alignnone size-full wp-image-711" title="functional_programming" src="http://jeff.familyyu.net/wp-content/uploads/2011/09/functional_programming.gif" alt="" width="180" height="236" /></a></div>
<div style="margin-left: 190px;">

Just finished the <a href="http://shop.oreilly.com/product/0636920021667.do">&lt;Functional Programming for Java Developers&gt;</a> book that written by <a href="http://www.deanwampler.com/">Dean Wampler</a>.

As Functional Programming got more buzz and more attentions lately, for Java developers (seems always busy, btw), I think this is a good and concise book for you to read on the subject, it is only 60 pages. Looks more like a long essay instead of a book, given most of IT books are having more than 200 pages. However, the 60 pages serves this book's purpose very well, it will motivate you to enter into the Functional Programming world, at least, I am motivated!

The author begins with "Why Functional Programming",  and the main reasons are: 1) Have to be good at writing concurrent program 2) Most programs are just Data Management problem 3) Functional Programming is more Modular 4) Have to work faster and faster and Functional Programming is a return to simplicity.

</div>
<div style="both: clear;">

I particularly like the last point of returning to simplicity, remember that how many times we need to use the IDE's 'generate getter and setter methods' function to generate those boilerplate code,  and how many times we wrote similar code to iterate a collection just because we are using another criterion. I believe, less codes means less bugs, with Java, we sometimes always bury our business logic codes into the codes that needed by language itself. Frameworks/Libraries surely offer a great help here, but wouldn't it been even better that is supported in the language level.

</div>
<div style="both: clear;">

The author goes on with "What Is Functional Programming", Some of basic principles of Functional Programming, like 1) Avoid mutable state 2) Functions as first-class values 3)Lambda and closures 4)High-order Functions 5)Side-Efffect-Free Functions 6) Recursion 7) Lazy vs Eager Evaluation 8)Declarative vs. Imperative Programming. In this chapter, I particularly impressed by Recursion and Declarative vs. Imperative Programming. In Java programming, we don't usually see many recursion usage in our daily code, I am not sure why, vaguely remembered that it may affect the performance. With Functional Programming, it doesn't use the loop, it uses the Recursion instead. And author list two different ways to program the factorial function. The declarative one that used the recursion seems much easier to understand for me.

The author continues with "Data Structure and Algorithms", "Functional Concurrency" and "Better Object-Oriented Programming" chapter to expand a bit explanation/examples on the items that he described in the first chapter "Why Functional Programming".

Last chapter is called "Where to go from here", basically lists some good resources that for you continue to explore the wonderful world of Functional Programming.

Well, writing a review for a concise book should be concise as well, otherwise, why don't you spend the time of reading my review in reading the book itself. :) Overall, this is a very good Functional Programming introduction book for you to read, especially for those busy Java developers.

</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>710</wp:post_id>
		<wp:post_date>2011-09-17 14:32:37</wp:post_date>
		<wp:post_date_gmt>2011-09-17 04:32:37</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>functional-programming-for-java-developer-book-review</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="book"><![CDATA[Book]]></category>
		<category domain="category" nicename="java"><![CDATA[Java]]></category>
		<category domain="post_tag" nicename="review"><![CDATA[Review]]></category>
		<category domain="category" nicename="thoughts"><![CDATA[Thoughts]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_efficient_related_posts</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{i:0;a:4:{s:2:"ID";s:3:"272";s:10:"post_title";s:40:"Apache CXF Web Service Development book.";s:7:"matches";s:1:"2";s:9:"permalink";s:76:"http://jeff.familyyu.net/2010/02/20/apache-cxf-web-service-development-book/";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_relation_threshold</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Git Cheat Sheet for history/difference.</title>
		<link>http://jeff.familyyu.net/2011/10/16/git-cheat-sheet-for-historydifference/</link>
		<pubDate>Sun, 16 Oct 2011 04:46:33 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeff.familyyu.net/?p=731</guid>
		<description></description>
		<content:encoded><![CDATA[I knew it has some good <a href="http://help.github.com/git-cheat-sheets/">Git Cheat Sheets</a> on the internet. So I won't try to create yet another Git Cheat Sheet. Instead, I'll focus on some commands for the history and file difference, as I often use them to check what has been updated on the commits, and what files been changed in there etc. Usually I went to GitHub to check out the previous commits, as it did a very good job on showing the updated files, difference on each file etc. However, at some time, my home internet is very slow, so it could be painful to go to the Github to check on those commits. (It is nothing wrong in Github, it is just in my particular case at some time due to bad network).

Git is a DVCS, so it means that we have all histories, logs in my local machine, the remote one should be served as a backup/collaborate purpose. So it means for checking the commits/difference, it should be accomplished without connecting to internet.  Here I'll try to enumerate some options/commands that I ran for checking those updates/commits. If you have any other good usages/commands that I left out. please feel free to make a comment.

1. Show all of previous commits (result only shows commit summary):
<blockquote>git  log</blockquote>
2. Show the latest n commits:
<blockquote>git  log  -n</blockquote>
3. Show the statistics (like updated file list) in previous commits:
<blockquote>git log --stat</blockquote>
4. Show previous commits with patches:
<blockquote>git log -p</blockquote>
5. Show a specific commit with commit hash id, you just need to have enough first couple letters to make it unique:
Add --stats (if you want to show the statistics) and -p (if you want to show the detailed diff) options.
<blockquote>git show 36b314c (first couple letters of id)</blockquote>
6. Show commits/histories to a specific file (-p, -n apply here as well, but should be in front of filepath):
<blockquote>git log -- filepath</blockquote> 
7. Show a diff on a specific file with a specific commit:
<blockquote>git show commitId (like 36b314c for example) -- filepath</blockquote>
9. Show difference between two commits:
<blockquote>git diff firstCommitId secondCommitId</blockquote>
10. Show difference between two commits for a specific file.
 <blockquote>git diff firstCommitId secondCommitId -- filepath</blockquote>

]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>731</wp:post_id>
		<wp:post_date>2011-10-16 14:46:33</wp:post_date>
		<wp:post_date_gmt>2011-10-16 04:46:33</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>git-cheat-sheet-for-historydifference</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="git"><![CDATA[Git]]></category>
		<category domain="category" nicename="scm"><![CDATA[SCM]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_efficient_related_posts</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{i:0;a:4:{s:2:"ID";s:3:"736";s:10:"post_title";s:20:"Git merge or rebase?";s:7:"matches";s:1:"1";s:9:"permalink";s:56:"http://jeff.familyyu.net/2011/10/18/git-merge-or-rebase/";}i:1;a:4:{s:2:"ID";s:3:"262";s:10:"post_title";s:42:"open source projects should really use Git";s:7:"matches";s:1:"1";s:9:"permalink";s:79:"http://jeff.familyyu.net/2009/12/06/open-source-projects-should-really-use-git/";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_relation_threshold</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Git merge or rebase?</title>
		<link>http://jeff.familyyu.net/2011/10/18/git-merge-or-rebase/</link>
		<pubDate>Tue, 18 Oct 2011 01:36:37 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://jeff.familyyu.net/?p=736</guid>
		<description></description>
		<content:encoded><![CDATA[There are many posts about the difference on git's rebase and merge commands, here I'd like to link two of them that I think did a great job on the explanation.

1. <a href="http://gitguru.com/2009/02/03/rebase-v-merge-in-git/">Rebase vs Merge in Git</a>
2. <a href="http://www.kerrybuckley.org/2008/06/18/avoiding-merge-commits-in-git/">Avoid Merge commit in Git</a>, this one shows very detail about the difference on these two options, and it is the exact problem I was facing.

I'd also like to quote the work pattern that is described in the above 1st link. (The result is basically put all your branch work/commits ahead of your base branch, for example master, and of course without adding those meaningless merge commits that you would have if you use the git merge.)
<blockquote>
<ol>
	<li>Create new branch B from existing branch A</li>
	<li>Add/commit changes on branch B</li>
	<li>Rebase updates from branch A</li>
	<li>Merge changes from branch B onto branch A</li>
</ol>
</blockquote>
I typically use the 'master' branch as the base branch, which means that I only sync this branch from the remote repository, and only merge commits into this branch when I think the bug/feature is completed. Once I've  done the merge in master, I'll do the commit and push, so the code in master branch's staging repository is very short. However, I've done a lot of pull request from remote repository into the master branch, as I need to sync other people's work, and then I'll do the rebase on the topic/bugfix branch that I am working on to sync the work without adding the merge commit, and put my commit in front of others commits that are already in the repo.

One caution with regard to the rebase operation is: (Again quote from the 2nd link that I pointed)
<blockquote>If you've shared the branch with anyone else, or are pushing it to a clone of the repository, do not rebase, but use merge instead. From the man page:

When you rebase a branch, you are changing its history in a way that will cause problems for anyone who already has a copy of the branch in their repository and tries to pull updates from you. You should understand the implications of using git rebase on a repository that you share.</blockquote>

]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>736</wp:post_id>
		<wp:post_date>2011-10-18 11:36:37</wp:post_date>
		<wp:post_date_gmt>2011-10-18 01:36:37</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>git-merge-or-rebase</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="git"><![CDATA[Git]]></category>
		<category domain="category" nicename="scm"><![CDATA[SCM]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_efficient_related_posts</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{i:0;a:4:{s:2:"ID";s:3:"731";s:10:"post_title";s:39:"Git Cheat Sheet for history/difference.";s:7:"matches";s:1:"1";s:9:"permalink";s:74:"http://jeff.familyyu.net/2011/10/16/git-cheat-sheet-for-historydifference/";}i:1;a:4:{s:2:"ID";s:3:"262";s:10:"post_title";s:42:"open source projects should really use Git";s:7:"matches";s:1:"1";s:9:"permalink";s:79:"http://jeff.familyyu.net/2009/12/06/open-source-projects-should-really-use-git/";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_relation_threshold</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
</channel>
</rss>
